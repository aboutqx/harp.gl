{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"THREE\"","webpack:///../@here/harp-datasource-protocol/lib/Expr.ts","webpack:///../@here/harp-utils/index.web.ts","webpack:///../@here/harp-geoutils/index.ts","webpack:///../@here/harp-geoutils/lib/coordinates/GeoCoordinates.ts","webpack:///../@here/harp-datasource-protocol/index.ts","webpack:///../@here/harp-geoutils/lib/math/MathUtils.ts","webpack:///../node_modules/protobufjs/src/util/minimal.js","webpack:///../@here/harp-geoutils/lib/math/Box3Like.ts","webpack:///../@here/harp-geoutils/lib/math/OrientedBox3Like.ts","webpack:///../@here/harp-geoutils/lib/projection/Projection.ts","webpack:///../@here/harp-datasource-protocol/lib/Env.ts","webpack:///../@here/harp-datasource-protocol/lib/InterpolatedPropertyDefs.ts","webpack:///../@here/harp-geoutils/lib/coordinates/GeoBox.ts","webpack:///../@here/harp-geoutils/lib/projection/EarthConstants.ts","webpack:///../@here/harp-geoutils/lib/tiling/TilingScheme.ts","webpack:///../@here/harp-omv-datasource/lib/OmvDecoderDefs.ts","webpack:///../@here/harp-datasource-protocol/lib/ColorUtils.ts","webpack:///../@here/harp-geoutils/lib/projection/MercatorProjection.ts","webpack:///../@here/harp-geoutils/lib/tiling/QuadTreeSubdivisionScheme.ts","webpack:///../@here/harp-geoutils/lib/tiling/TileKey.ts","webpack:///../@here/harp-mapview-decoder/lib/WorkerService.ts","webpack:///../@here/harp-omv-datasource/lib/OmvUtils.ts","webpack:///../@here/harp-utils/lib/Logger/ILogger.ts","webpack:///../@here/harp-utils/lib/UrlUtils.ts","webpack:///../@here/harp-datasource-protocol/lib/StringEncodedNumeral.ts","webpack:///../@here/harp-datasource-protocol/lib/Theme.ts","webpack:///../@here/harp-datasource-protocol/lib/Techniques.ts","webpack:///../@here/harp-datasource-protocol/index-decoder.ts","webpack:///../@here/harp-omv-datasource/lib/OmvDecoder.ts","webpack:///../@here/harp-utils/lib/Logger/ConsoleChannel.ts","webpack:///../@here/harp-utils/lib/Logger/Logger.ts","webpack:///../@here/harp-utils/lib/Logger/WorkerChannel.ts","webpack:///../@here/harp-datasource-protocol/lib/InterpolatedProperty.ts","webpack:///../@here/harp-datasource-protocol/lib/TechniqueParams.ts","webpack:///../@here/harp-datasource-protocol/lib/TechniqueDescriptor.ts","webpack:///../@here/harp-datasource-protocol/lib/DecodedTile.ts","webpack:///../@here/harp-geoutils/lib/coordinates/GeoCoordinatesLike.ts","webpack:///../@here/harp-geoutils/lib/coordinates/GeoPointLike.ts","webpack:///../@here/harp-geoutils/lib/coordinates/LatLngLike.ts","webpack:///../@here/harp-geoutils/lib/projection/EquirectangularProjection.ts","webpack:///../@here/harp-geoutils/lib/projection/TransverseMercatorProjection.ts","webpack:///../@here/harp-geoutils/lib/tiling/FlatTileBoundingBoxGenerator.ts","webpack:///../@here/harp-geoutils/lib/tiling/HalfQuadTreeSubdivisionScheme.ts","webpack:///../@here/harp-geoutils/lib/tiling/SubTiles.ts","webpack:///../@here/harp-geoutils/lib/tiling/TileKeyUtils.ts","webpack:///../@here/harp-geoutils/lib/tiling/TileTreeTraverse.ts","webpack:///../@here/harp-datasource-protocol/lib/TechniqueAttr.ts","webpack:///../@here/harp-mapview-decoder/index-worker.ts","webpack:///../@here/harp-mapview-decoder/lib/GeoJsonTiler.ts","webpack:///../@here/harp-omv-datasource/lib/VTJsonDataAdapter.ts","webpack:///../node_modules/protobufjs/src/writer.js","webpack:///../node_modules/protobufjs/src/reader.js","webpack:///../@here/harp-omv-datasource/lib/OmvDataFilter.ts","webpack:///../@here/harp-geometry/lib/SubdivisionModifier.ts","webpack:///./src/decoder.ts","webpack:///../@here/harp-omv-datasource/index-worker.ts","webpack:///../@here/harp-utils/index-common.ts","webpack:///../@here/harp-utils/lib/GroupedPriorityList.ts","webpack:///../@here/harp-utils/lib/Logger/index.ts","webpack:///../@here/harp-utils/lib/Logger/LoggerManager.ts","webpack:///../@here/harp-utils/lib/Logger/LoggerManagerImpl.ts","webpack:///../@here/harp-utils/lib/Logger/MultiChannel.ts","webpack:///../@here/harp-utils/lib/Math2D.ts","webpack:///../@here/harp-utils/lib/MathUtils.ts","webpack:///../@here/harp-utils/lib/Mixins.ts","webpack:///../@here/harp-utils/lib/assert.ts","webpack:///../@here/harp-utils/lib/ContextLogger.ts","webpack:///../@here/harp-utils/lib/PerformanceTimer.ts","webpack:///../@here/harp-utils/lib/ObjectUtils.ts","webpack:///../@here/harp-utils/lib/OptionsUtils.ts","webpack:///../@here/harp-utils/lib/UriResolver.ts","webpack:///../@here/harp-utils/lib/Functions.ts","webpack:///../@here/harp-utils/lib/SampleBilinear.ts","webpack:///../@here/harp-utils/lib/UrlPlatformUtils.web.ts","webpack:///../@here/harp-datasource-protocol/lib/ExprEvaluator.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/ArrayOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/CastOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/ColorOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/ComparisonOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/FeatureOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/FlowOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/InterpolationOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/ExponentialInterpolant.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/MapOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/MathOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/MiscOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/ObjectOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/StringOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/TypeOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/VectorOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/ExprInstantiator.ts","webpack:///../@here/harp-datasource-protocol/lib/ExprParser.ts","webpack:///../@here/harp-datasource-protocol/lib/WorkerServiceProtocol.ts","webpack:///../@here/harp-datasource-protocol/lib/WorkerTilerProtocol.ts","webpack:///../@here/harp-datasource-protocol/lib/WorkerDecoderProtocol.ts","webpack:///../@here/harp-geoutils/lib/coordinates/GeoBoxExtentLike.ts","webpack:///../@here/harp-geoutils/lib/projection/IdentityProjection.ts","webpack:///../@here/harp-geoutils/lib/projection/SphereProjection.ts","webpack:///../@here/harp-geoutils/lib/tiling/QuadTree.ts","webpack:///../@here/harp-geoutils/lib/tiling/HereTilingScheme.ts","webpack:///../@here/harp-geoutils/lib/tiling/WebMercatorTilingScheme.ts","webpack:///../@here/harp-geoutils/lib/tiling/MercatorTilingScheme.ts","webpack:///../@here/harp-geoutils/lib/tiling/PolarTilingScheme.ts","webpack:///../@here/harp-geoutils/lib/math/Vector3Like.ts","webpack:///../@here/harp-geoutils/lib/math/TransformLike.ts","webpack:///../@here/harp-geoutils/lib/math/OrientedBox3.ts","webpack:///../@here/harp-datasource-protocol/lib/ThemeVisitor.ts","webpack:///../@here/harp-mapview-decoder/lib/ThemedTileDecoder.ts","webpack:///../@here/harp-datasource-protocol/lib/StyleSetEvaluator.ts","webpack:///../@here/harp-datasource-protocol/lib/ExprPool.ts","webpack:///../@here/harp-datasource-protocol/lib/Extruder.ts","webpack:///../@here/harp-datasource-protocol/lib/Outliner.ts","webpack:///../@here/harp-datasource-protocol/lib/ThreeBufferUtils.ts","webpack:///../@here/harp-mapview-decoder/lib/TileDecoderService.ts","webpack:///../@here/harp-mapview-decoder/lib/TilerService.ts","webpack:///../@here/harp-mapview-decoder/lib/WorkerServiceManager.ts","webpack:///../@here/harp-omv-datasource/lib/DecodeInfo.ts","webpack:///../@here/harp-omv-datasource/lib/OmvData.ts","webpack:///../node_modules/long/src/long.js","webpack:///../@here/harp-omv-datasource/lib/proto/vector_tile.js","webpack:///../node_modules/protobufjs/minimal.js","webpack:///../node_modules/protobufjs/src/index-minimal.js","webpack:///../node_modules/webpack/buildin/global.js","webpack:///../node_modules/@protobufjs/aspromise/index.js","webpack:///../node_modules/@protobufjs/base64/index.js","webpack:///../node_modules/@protobufjs/eventemitter/index.js","webpack:///../node_modules/@protobufjs/float/index.js","webpack:///../node_modules/@protobufjs/inquire/index.js","webpack:///../node_modules/@protobufjs/utf8/index.js","webpack:///../node_modules/@protobufjs/pool/index.js","webpack:///../node_modules/protobufjs/src/util/longbits.js","webpack:///../node_modules/protobufjs/src/writer_buffer.js","webpack:///../node_modules/protobufjs/src/reader_buffer.js","webpack:///../node_modules/protobufjs/src/rpc.js","webpack:///../node_modules/protobufjs/src/rpc/service.js","webpack:///../node_modules/protobufjs/src/roots.js","webpack:///../@here/harp-omv-datasource/lib/OmvDecodedTileEmitter.ts","webpack:///../@here/harp-lines/lib/Lines.ts","webpack:///../@here/harp-lines/lib/TriangulateLines.ts","webpack:///../node_modules/earcut/src/earcut.js","webpack:///../@here/harp-geometry/lib/ClipPolygon.ts","webpack:///../@here/harp-geometry/lib/EdgeLengthGeometrySubdivisionModifier.ts","webpack:///../@here/harp-geometry/lib/SphericalGeometrySubdivisionModifier.ts","webpack:///../@here/harp-materials/lib/MapMeshMaterialsDefs.ts","webpack:///../@here/harp-omv-datasource/lib/OmvTomTomFeatureModifier.ts","webpack:///../@here/harp-omv-datasource/lib/StyleSetDataFilter.ts","webpack:///../@here/harp-omv-datasource/lib/TiledGeoJsonAdapter.ts","webpack:///../@here/harp-omv-datasource/lib/OmvTiler.ts","webpack:///../node_modules/geojson-vt/src/simplify.js","webpack:///../node_modules/geojson-vt/src/feature.js","webpack:///../node_modules/geojson-vt/src/convert.js","webpack:///../node_modules/geojson-vt/src/clip.js","webpack:///../node_modules/geojson-vt/src/wrap.js","webpack:///../node_modules/geojson-vt/src/transform.js","webpack:///../node_modules/geojson-vt/src/tile.js","webpack:///../node_modules/geojson-vt/src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","THREE","exprEvaluator","ExprEvaluator","exprInstantiator","ExprInstantiator","ExprDependencies","properties","Set","ComputeExprDependencies","expr","dependencies","accept","this","instance","context","add","args","forEach","childExpr","op","featureState","branches","_","branch","fallback","condition","isJsonExpr","v","Array","isArray","length","ExprScope","Expr","code","ExprParser","parse","node","definitions","definitionExprCache","parseNode","undefined","lockedNames","cache","Map","env","scope","Value","ExprEvaluatorContext","m_dependencies","of","pool","ExprSerializer","serialize","m_isDynamic","exprIsDynamic","VarExpr","super","visitor","visitVarExpr","LiteralExpr","BooleanLiteralExpr","NumberLiteralExpr","StringLiteralExpr","NullLiteralExpr","ObjectLiteralExpr","Error","visitNullLiteralExpr","visitBooleanLiteralExpr","visitNumberLiteralExpr","visitStringLiteralExpr","visitObjectLiteralExpr","HasAttributeExpr","visitHasAttributeExpr","CallExpr","visitCallExpr","descriptor","getOperator","isDynamicOperator","some","e","isDynamic","MatchExpr","elementTy","every","visitMatchExpr","CaseExpr","visitCaseExpr","cond","Vector2","x","y","Vector3","z","Vector4","w","map","label","body","push","referenceResolverState","parseCall","slice","has","cachedEntry","result","definitionEntry","isLiteralDefinition","fromJSON","isBoxedDefinition","isInterpolatedPropertyDefinition","interpolatedPropertyDefinitionToJsonExpr","delete","set","resolveReference","makeCallExpr","parseGetExpr","parseHasExpr","obj","parseLiteralExpr","conditions","isValidMatchLabel","JSON","stringify","parseMatchExpr","caseFallback","parseCaseExpr","GeoCoordinates","latitude","longitude","altitude","MathUtils","radToDeg","latLng","lat","lng","geoPoint","isGeoPointLike","fromGeoPoint","isGeoCoordinatesLike","fromDegrees","isLatLngLike","degToRad","isNaN","wrapped","sign","Math","other","normalizeAngleDeg","a","angleDistanceDeg","b","newEmptyBox3","min","Infinity","max","newVector3","clamp","normalizeLongitudeDeg","interpolateAnglesDeg","p0","p1","util","merge","dst","src","ifNotSet","keys","newError","CustomError","message","captureStackTrace","stack","constructor","toString","asPromise","base64","EventEmitter","float","inquire","utf8","LongBits","global","window","self","emptyArray","freeze","emptyObject","isNode","Boolean","process","versions","isInteger","Number","isFinite","floor","isString","String","isObject","isset","isSet","prop","Buffer","utf8Write","_Buffer_from","_Buffer_allocUnsafe","newBuffer","sizeOrArray","Uint8Array","Long","dcodeIO","key2Re","key32Re","key64Re","longToHash","from","toHash","zeroHash","longFromHash","hash","unsigned","bits","fromHash","fromBits","lo","hi","toNumber","lcFirst","str","charAt","toLowerCase","substring","ProtocolError","oneOfGetter","fieldNames","fieldMap","oneOfSetter","toJSONOptions","longs","enums","bytes","json","_configure","encoding","allocUnsafe","size","box3","obb","position","xAxis","yAxis","zAxis","extents","ProjectionType","unitScale","projectPoint","sourceProjection","worldPos","unprojectPoint","Env","_name","entries","parent","lookup","unmap","InterpolationMode","interpolationMode","values","zoomLevels","interpolation","step","exponent","GeoBox","southWest","northEast","center","extent","latitudeSpan","longitudeSpan","south","north","west","east","minAltitude","altitudeSpan","maxAltitude","width","point","containsHelper","isFlat","isSameAltitude","isWithinAltitudeRange","EarthConstants","EQUATORIAL_CIRCUMFERENCE","EQUATORIAL_RADIUS","MIN_ELEVATION","MAX_ELEVATION","MAX_BUILDING_HEIGHT","subdivisionScheme","projection","boundingBoxGenerator","FlatTileBoundingBoxGenerator","tileTreeTraverse","TileTreeTraverse","tileKey","subTiles","level","TileKeyUtils","geoCoordinatesToTileKey","geoBox","geoRectangleToTileKeys","getGeoBox","getWorldBox","FeatureModifierId","OmvFilterString","StringMatch","matchString","filterString","match","Any","Match","StartsWith","startsWith","EndsWith","endsWith","indexOf","OmvGeometryType","OMV_TILE_DECODER_SERVICE_TYPE","OMV_TILER_SERVICE_TYPE","tmpColor","Color","ColorUtils","getHexFromRgba","g","assert","getHexFromRgb","getHexFromHsl","h","setHSL","getHex","getRgbaFromHex","hex","hasAlphaInHex","getAlphaFromHex","removeAlphaFromHex","MercatorProjection","Projection","type","Planar","val","MercatorConstants","MAXIMUM_LATITUDE","log","tan","PI","latitudeProject","latitudeClamp","atan","exp","worldPoint","cosh","Box3","geoPointLike","latitudeClampProject","latitudeInRadians","fromRadians","unprojectLatitude","worldCenter","worldNorth","worldSouth","worldYCenter","isBox3Like","isOrientedBox3Like","EPSILON","worldBox","minGeo","maxGeo","fromCoordinates","_worldPoint","normal","webMercatorProjection","mercatorProjection","reprojectPoint","sy","sin","projectBox","maxY","quadTreeSubdivisionScheme","powerOfTwo","TileKey","row","column","quadkey","mask","parseInt","fromRowColumnLevel","quadKey64","quadKey","m_mortonCode","quadkey64","fromMortonCode","m_hereTile","pow","coordX","coordY","totalWidth","totalHeight","rowsAtLevel","columnsAtLevel","mortonCode","delta","changedLevelBy","col","qnr","sub","subQuad","fromQuadKey","child","fromHereTile","msb","logger","LoggerManager","enabled","serviceId","m_pendingRequests","onMessage","data","service","WorkerServiceProtocol","isRequestMessage","request","requestEntry","messageId","responseSent","tryHandleRequest","then","response","doSendResponse","ServiceMessageName","Response","transferList","catch","error","errorMessage","errorStack","tryHandleMessage","err","addEventListener","isInitializedMessage","Initialized","postMessage","cancelAllPendingRequests","removeEventListener","handleMessage","handleRequest","Promise","reject","lat2tile","zoom","func","cos","createWorldTileTransformationCookie","decodeInfo","N","log2","scale","top","adapterId","VTJsonDataAdapterId","round","left","tile2world","flipY","target","worldTileProjectionCookie","R","SharedArrayBuffer","ArrayBuffer","tempWorldPos","webMercatorTile2TargetWorld","targetProjection","LogLevel","parentUri","childUri","absoluteUrlWithOriginRe","test","getUrlOrigin","substr","baseUrl","RegExp","url","idx","lastIndexOf","parsed","getUrlHostAndProtocol","protocol","host","urlOriginRe","StringEncodedNumeralType","StringEncodedMeters","Meters","regExp","decoder","encodedValue","exec","StringEncodedPixels","Pixels","StringEncodedHex","Hex","StringEncodedRGB","RGB","channels","StringEncodedRGBA","RGBA","parseFloat","StringEncodedHSL","HSL","StringEncodedMetricFormats","StringEncodedMetricFormatMaxSize","reduce","StringEncodedColorFormats","StringEncodedColorFormatMaxSize","StringEncodedNumeralFormats","StringEncodedNumeralFormatMaxSize","tmpBuffer","numeral","pixelToMeters","format","color","matchedFormat","formats","find","def","bdef","styleDef","technique","TEXTURE_PROPERTY_KEYS","TRANSPARENCY_PROPERTY_KEYS","techniqueDescriptors","baseTechniqueParamsDescriptor","attrTransparencyColor","attrScopes","renderOrder","AttrScope","TechniqueGeometry","FeatureGeometry","kind","transient","fadeFar","TechniqueRendering","fadeNear","pointTechniquePropTypes","mergeTechniqueDescriptor","texture","enablePicking","transparent","opacity","squaresTechniquePropTypes","squares","circlesTechniquePropTypes","circles","lineMarkerTechniquePropTypes","text","useAbbreviation","useIsoCode","priority","textMinZoomLevel","textMaxZoomLevel","iconMinZoomLevel","iconMaxZoomLevel","distanceScale","textMayOverlap","iconMayOverlap","textReserveSpace","iconReserveSpace","renderTextDuringMovements","alwaysOnTop","textIsOptional","showOnMap","stackMode","minDistance","iconIsOptional","iconFadeTime","textFadeTime","xOffset","yOffset","iconXOffset","iconYOffset","iconScale","screenHeight","screenWidth","poiTable","poiName","poiNameField","imageTexture","imageTextureField","imageTexturePrefix","imageTexturePostfix","style","fontName","fontStyle","fontVariant","rotation","tracking","leading","maxLines","lineWidth","canvasRotation","lineRotation","wrappingMode","hAlignment","vAlignment","backgroundColor","backgroundSize","backgroundOpacity","polygonalTechniqueDescriptor","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","lineColor","lineFadeFar","lineFadeNear","solidLineTechniqueDescriptor","clipping","secondaryRenderOrder","secondaryWidth","secondaryColor","dashSize","gapSize","lineTechniqueDescriptor","line","fillTechniqueDescriptor","fill","standardTechniqueDescriptor","vertexColors","wireframe","roughness","metalness","alphaTest","depthTest","emissive","emissiveIntensity","refractionRatio","mapProperties","normalMap","normalMapProperties","displacementMap","displacementMapProperties","roughnessMap","roughnessMapProperties","emissiveMap","emissiveMapProperties","bumpMap","bumpMapProperties","metalnessMap","metalnessMapProperties","alphaMap","alphaMapProperties","standard","extrudedPolygonTechniqueDescriptor","height","floorHeight","defaultColor","defaultHeight","constantHeight","boundaryWalls","footprint","maxSlope","enableDepthPrePass","animateExtrusionDuration","animateExtrusion","lineColorMix","textTechniqueDescriptor","minZoomLevel","maxZoomLevel","mayOverlap","reserveSpace","shaderTechniqueDescriptor","primitive","params","isExtrudedLineTechnique","isStandardExtrudedLineTechnique","shading","isFillTechnique","isExtrudedPolygonTechnique","isStandardTechnique","isTerrainTechnique","shader","dashes","textureCoordinateType","texturePropertyKey","textureProperty","isTextureBuffer","buffer","imageName","textureName","vertexStride","contour","winding","area","points","stride","q","OmvDecoder","m_projection","m_styleSetEvaluator","m_showMissingTechniques","m_dataFilter","m_featureModifier","m_gatherFeatureAttributes","m_skipShortLabels","m_storageLevelOffset","m_enableElevationOverlay","m_languages","m_dataAdapters","styleSetDataFilter","StyleSetDataFilter","dataPreFilter","ComposedDataFilter","OmvProtobufDataAdapter","VTJsonDataAdapter","TiledGeoJsonDataAdapter","dataAdapter","adapter","canProcess","techniques","geometries","resetTechniques","DecodeInfo","id","m_decodedTileEmitter","OmvDecodedTileEmitter","getDecodedTile","layer","geometry","storageLevel","doProcessPointFeature","applyKindFilter","getMatchingTechniques","GeometryKind","Label","zoomLevel","getZoomLevel","cachedExprResults","expressionEvaluatorCache","featureId","processPointFeature","doProcessLineFeature","Line","processLineFeature","doProcessPolygonFeature","Area","processPolygonFeature","defaultKind","hasKindFilter","filter","wantsKind","OmvTileDecoder","ThemedTileDecoder","resolve","styleSetEvaluator","startTime","PerformanceTimer","now","decodedTile","m_featureFilter","languages","decodeTime","styleSet","options","configure","omvOptions","showMissingTechniques","filterDescription","OmvGenericFeatureFilter","createFeatureModifier","featureModifierId","gatherFeatureAttributes","skipShortLabels","enableElevationOverlay","tomTom","OmvTomTomFeatureModifier","OmvGenericFeatureModifier","OmvTileDecoderService","WorkerServiceManager","getInstance","register","serviceType","factory","TileDecoderService","start","warn","optionalParams","console","debug","info","trace","m_channel","Trace","update","prefix","Debug","Info","Log","Warn","WORKERCHANNEL_MSG_TYPE","workerMessage","interpolants","DiscreteInterpolant","LinearInterpolant","CubicInterpolant","ExponentialInterpolant","InterpolatedProperty","isCubic","findIndex","abs","splice","removeDuplicatePropertyValues","Discrete","Float32Array","vectorComponents","toArray","_vectorInterpolation","firstValue","needsMask","propValues","maskValues","baseFormat","allowedValueFormats","valueIdx","matched","valueFormat","processStringEnocodedNumeralInterpolatedProperty","_stringEncodedNumeralType","_stringEncodedNumeralDynamicMask","getInterpolatedMetric","getInterpolatedColor","nChannels","interpolant","Exponential","evaluate","fromArray","resultBuffer","maskInterpolant","isExpr","Dynamic","parseStringEncodedNumeral","StandardGeometryKind","GeometryKindSet","subset","elem","hasIntersection","TextureCoordinateType","PoiStackMode","descriptors","getFeatureName","abbreviation","isoCode","lang","attr","Uint16Array","Uint32Array","Int8Array","Int16Array","Int32Array","GeometryType","projectionName","sphereProjection","normalizedEquirectangularProjection","equirectangularProjection","attributeMap","$id","isTextTechnique","isPoiTechnique","isLineMarkerTechnique","evaluateTechniqueAttr","attributeName","EquirectangularProjection","geoToWorldScale","worldToGeoScale","latitudeSpanInRadians","longitudeSpanInRadians","sizeX","sizeY","TransverseMercatorProjection","m_phi0","m_lambda0","_unitScale","lon","TransverseMercatorUtils","POLE_RADIUS","rsq","POLE_RADIUS_SQ","nearestQuarter","deltaLon","deltaLat","distanceToPoleSq","distanceToPole","sqrt","dir","offsetLon","clamped","clampGeoPoint","normalLon","offset","phi","lambda","B","atanh","atan2","outScale","tau","nx","ny","D","asin","sinh","pointsToCheck","E","POLE_EDGE_DEG","containsEastCut","containsCenterX","containsCenterY","alignLatitude","projected","vx","vy","vz","minX","minY","minZ","maxX","maxZ","lowerQ","upperQ","containsLowerQY","containsUpperQY","geoPoints","alignLongitude","latitudes","longitudes","altitudes","referencePoint","bad","good","POLE_EDGE","transverseMercatorProjection","tilingScheme","minElevation","maxElevation","m_tilingScheme","m_worldBox","worldExtent","m_worldDimensions","levelDimensionX","getLevelDimensionX","levelDimensionY","getLevelDimensionY","originX","originY","unprojectBox","halfQuadTreeSubdivisionScheme","SubTiles","iterator","ZCurveIterator","RowColumnIterator","parentKey","worldCoordinatesToTileKey","cx","cy","worldSizeX","worldSizeY","wrap","lower","upper","minVal","maxVal","southWestLongitude","longitudeInRadians","southWestLatitude","northEastLongitude","northEastLatitude","minTileKey","maxTileKey","columnCount","minColumn","maxColumn","minRow","maxRow","m_subdivisionScheme","divX","getSubdivisionX","divY","getSubdivisionY","attrValue","defaultValue","evaluated","geojsonvtExport","geojsonvt","default","indexes","indexId","input","updateIndex","URL","fetch","href","ok","statusText","index","maxZoom","indexMaxZoom","indexMaxPoints","tolerance","lineMetrics","promoteId","generateId","geojson","tile","getTile","feature","features","originalGeometry","getOriginalGeometry","VTJsonGeometryType","m_processor","m_logger","dataFilter","isArrayBufferLike","source","MapEnv","$layer","$geometryType","convertGeometryType","$level","$zoom","storageLevelOffset","tags","Point","pointGeometry","LineString","untiledPositions","coordinates","lineGeometry","positions","Polygon","polygon","rings","outline","ring","currX","currY","Unknown","Writer","BufferWriter","Op","fn","len","next","noop","State","writer","head","tail","states","writeByte","buf","pos","VarintOp","writeVarint64","writeFixed32","alloc","subarray","_push","uint32","int32","fromNumber","sint32","uint64","int64","sint64","zzEncode","bool","fixed32","sfixed32","fixed64","sfixed64","writeFloatLE","double","writeDoubleLE","writeBytes","decode","string","write","fork","reset","ldelim","finish","BufferWriter_","Reader","BufferReader","indexOutOfRange","reader","writeLength","RangeError","create_array","readLongVarint","readFixed32_end","end","readFixed64","isBuffer","_slice","readFloatLE","readDoubleLE","read","skip","skipType","wireType","BufferReader_","zzDecode","m_processLayersDefault","m_processPointsDefault","m_processLinesDefault","m_processPolygonsDefault","m_layersToProcess","m_layersToIgnore","m_pointsToProcess","m_ignoredPoints","m_linesToProcess","m_linesToIgnore","m_polygonsToProcess","m_polygonsToIgnore","m_kindsToProcess","m_kindsToIgnore","processLayersDefault","processPointsDefault","processLinesDefault","processPolygonsDefault","minLevel","maxLevel","addItem","addItems","enabledKinds","concat","disabledKinds","layersToProcess","layersToIgnore","pointsToProcess","pointsToIgnore","linesToProcess","linesToIgnore","polygonsToProcess","polygonsToIgnore","kindsToProcess","kindsToIgnore","items","item","layerName","matchLayer","geometryTypes","geomType","classes","featureClass","matchClass","featureAttribute","geomTypes","featureClasses","description","layerItems","layerItem","geometryType","wantsFeature","hasOrIntersects","itemsToProcess","itemsToIgnore","defaultResult","filters","wantsLayer","wantsPointFeature","wantsLineFeature","wantsPolygonFeature","doProcessFeature","featureClassThing","matchItems","matchAttribute","tmpVectorA","tmpVectorB","tmpVectorC","positionAttr","getAttribute","array","uvAttr","uv","edgeAttr","edge","wallAttr","wall","indexAttr","getIndex","indices","middleVertex","j","lerpVectors","newIndices","v0","shift","v1","v2","shouldSplitTriangle","v3","count","itemSize","needsUpdate","setIndex","importScripts","PriorityListGroup","elements","element","foundIndex","GroupedPriorityList","groups","getGroup","group","findGroup","remove","clear","otherGroup","clone","fun","normalizedPriority","m_instance","LoggerManagerImpl","m_loggers","channel","document","ConsoleChannel","WorkerChannel","loggerName","m_levelSetForAll","Logger","found","config","Math2D","distSquared","ax","ay","bx","by","Box","xmax","ymax","contains","computeSquaredLineLength","squaredLineLength","xDiff","yDiff","distToSegmentSquared","px","py","l0x","l0y","l1x","l1y","lineLengthSuared","lerp","edge0","edge1","factor","smoothStep","smootherStep","inMin","inMax","outMin","outMax","min2","max2","isClamped","lowerBound","upperBound","easeInOutCubic","startValue","endValue","time","derivedCtor","baseCtors","baseCtor","getOwnPropertyNames","getOwnPropertyDescriptor","headerMessage","m_headerLogged","createLogMethod","pop","severity","rest","join","nowFunc","performance","Date","getTime","getNowFunc","cloneInternal","cached","flags","candidate","parameters","optionValue","uri","resolveReferenceUri","resolvers","resolveUri","originalUrl","resolver","f1","f2","apply","u","maxXIndex","maxYIndex","xIndex","xIndexFloor","yIndex","yIndexFloor","swIndex","seIndex","nwIndex","neIndex","swElevation","seElevation","nwElevation","neElevation","xFrac","xFracInverse","yFrac","yFracInverse","location","operatorDescriptors","evaluator","m_partialEvaluation","previousEvaluationMode","fromValue","builtin","builtins","defineOperator","includes","defineOperators","CastOperators","ComparisonOperators","MathOperators","StringOperators","ColorOperators","TypeOperators","MiscOperators","FlowOperators","ArrayOperators","InterpolationOperators","ObjectOperators","FeatureOperators","MapOperators","VectorOperators","VALID_ELEMENT_TYPES","checkElementTypes","arg","ty","checkArray","operators","checkArrayLength","at","alpha","parseStringEncodedColor","rgba","rgbaToHex","rgb","rgbToHex","hsl","euclideanModulo","hslToHex","compare","strict","right","state","isEnv","conditionalCast","all","any","none","boolean","number","interpolate","_interpolatedProperty","_mode","interpolatorType","base","stops","isConstantInterpolation","stop","fromDefinition","_exponent","_stops","prepareInterpolateCallExpr","interpolatedProperty","_inputIsZoom","classifyStepCallExpr","Condition","first","last","mid","MIN_SAFE_INTEGER","hasConstantValues","literal","prepareStepCallExpr","Interpolant","i1","t0","t1","sampleValues","valueSize","offset1","offset0","weight1","weight0","pixels","scaleFactor","ppi","acos","ceil","ln","ln2","log10","pi","coalesce","LookupMode","lookupMember","lookupMode","memberName","in","downcase","toLocaleLowerCase","upcase","toLocaleUpperCase","typeof","isVector","ctor","toVector","VectorCtor","components","_value","vector2","vector3","vector4","emptyEnv","_context","preserve","changed","newBranch","newCondition","deps","instantiatedBranch","Character","Token","isSpace","codepoint","Tab","Lf","Cr","Space","isNumber","_0","_9","isLetter","A","Z","isIdentChar","isLetterOrNumber","Dollar","Dot","LBracket","RBracket","tokenSpell","token","Eof","Identifier","Comma","LParen","RParen","Exclaim","TildeEqual","CaretEqual","DollarEqual","EqualEqual","ExclaimEqual","Less","Greater","LessEqual","GreaterEqual","BarBar","AmpAmp","Lexer","m_token","m_index","m_char","m_text","yylex","codePointAt","yyinp","ch","SingleQuote","DoubleQuote","Equal","Caret","Tilde","Bar","Amp","getEqualityOp","getRelationalOp","lex","parseLogicalOr","yyexpect","hasAttribute","parseLiteral","parseUnary","parsePrimary","parseRelational","parseEquality","expressions","parseLogicalAnd","Requests","WORKER_SERVICE_MANAGER_SERVICE_ID","isUnknownServiceError","Request","isResponseMessage","WorkerTilerProtocol","isRegisterIndexRequest","RegisterIndex","isUpdateIndexRequest","UpdateIndex","isTileRequest","TileRequest","abortController","AbortController","signal","abort","WorkerDecoderProtocol","DecoderMessageName","isConfigurationMessage","Configuration","isDecodeTileRequest","DecodeTileRequest","isTileInfoRequest","TileInfoRequest","IdentityProjection","identityProjection","getLongitudeQuadrant","oneOverPI","quadrantIndex","lengthOfVector3","makeBox3","halfEquatorialRadius","minLongitude","maxLongitude","minLongitudeQuadrant","maxLongitudeQuadrant","xMin","xMax","yMin","yMax","cosMaxLongitude","sinMaxLongitude","xCenter","xExtent","yCenter","yExtent","minLatitude","maxLatutide","zMax","zMin","zCenter","zExtent","SphereProjection","Spherical","_minElevation","radius","worldpoint","cosLatitude","project","parallelRadiusSq","parallelRadius","bounds","midX","midY","cosSouth","sinSouth","cosWest","sinWest","cosNorth","sinNorth","cosEast","sinEast","cosMidX","sinMidX","cosMidY","sinMidY","rMax","rMin","_worldBox","mx","my","gx","gy","cosLongitude","sinLongitude","sinLatitude","visitTileKey","subTileKey","getSubTileKeys","hereTilingScheme","TilingScheme","webMercatorTilingScheme","mercatorTilingScheme","polarTilingScheme","transform","intersectsSlab","rayDir","axis","dot","f","finv","t2","tmpVec","tmpT","OrientedBox3","rotationMatrix","copy","extractBasis","newBox","multiplyScalar","matrix","Matrix4","makeBasis","frustumOrPlanes","planes","plane","distanceToPoint","ray","origin","direction","dx","dy","dz","distanceToPointSquared","subVectors","lengths","getComponent","dd","theme","visitFunc","visit","styles","styleSetName","decodeThemedTile","StyleSetEvaluator","emptyTechniqueDescriptor","StyleConditionClassifier","_whenExpr","savedStyle","switchStyle","_style","enclosingExpr","children","matchVarStringComparison","_geometryType","saved","OptimizedSubSetKey","keyUpdateNeeded","envLayer","envGeometryType","updateKey","cachedStyleSet","makeDecodedTechnique","attrName","isVector2","isVector3","isVector4","toJSON","m_techniques","m_exprPool","ExprPool","m_cachedResults","m_styleConditionClassifier","m_subStyleSetCache","m_definitionExprCache","m_tmpOptimizedSubSetKey","m_emptyEnv","m_featureDependencies","m_definitions","resolveStyleReferences","isJsonExprReference","definitionName","isActualSelectorDefinition","resolveReferences","techniqueRenderOrder","styleSetIndex","_styleSetIndex","computeDefaultRenderOrder","compileStyleSet","m_previousResult","m_previousEnv","optimizedSubSetKey","m_layer","m_geometryType","m_zoomLevel","searchedStyleSet","getOptimizedStyleSet","currStyle","processStyle","techinque","_index","subSetKey","optimizedStyleSet","createPreFilteredStyleSet","compileStyle","checkStyleDynamicAttributes","when","classify","intern","_minZoomLevelExpr","_maxZoomLevelExpr","checkZoomLevel","getTechniqueForStyleMatch","final","_dynamicTechniques","dynamicAttributes","evaluateTechniqueProperties","getDynamicTechniqueKey","createTechnique","_staticTechnique","dynamicAttrKey","_attrName","_dynamicTechniqueAttributes","_dynamicFeatureAttributes","_dynamicForwardedAttributes","_staticAttributes","dynamicFeatureAttributes","dynamicTechniqueAttributes","dynamicForwardedAttributes","targetStaticAttributes","techniqueDescriptor","processAttribute","_usesFeatureState","attrScope","category","secondaryCategory","labelProperty","instantiationContext","attrExpr","instantiate","dynamicAttrs","_styleSet","m_booleanLiterals","m_numberLiterals","m_stringLiterals","m_objectLiterals","m_arrayLiterals","m_varExprs","m_hasAttributeExprs","m_matchExprs","m_caseExprs","m_callExprs","branchesMatching","calls","indexBuffer","vertexOffset","contourEdges","nSegments","vFootprint0","vRoof0","vFootprint1","vRoof1","currEdgeStart","currEdgeGoal","prevEdgeStart","prevEdgeGoal","polygonContour","polygonContourEdges","isExtruded","addFootprintEdges","wallEdgeSlope","prevEdgeIdx","v0x","v0y","v1x","v1y","normalize","vFoot0","ThreeBufferUtils","getBufferElementType","fromThreeBufferAttribute","bufferAttribute","itemCount","normalized","fromThreeInterleavedBufferAttribute","fromThreeBufferGeometry","bufferGeometry","techniqueIndex","vertexAttributes","attributeNames","attributes","vertexAttribute","posAttr","Unspecified","WorkerService","m_decoder","connect","handleDecodeTileRequest","handleTileInfoRequest","handleConfigurationMessage","getProjection","decodeTile","transferBufferAttribute","attribute","byteLength","geom","interleavedVertexAttributes","edgeIndex","objInfos","attachments","attachment","addBuffersToTransferList","getTileInfo","tileInfo","TilerService","tiler","GeoJsonTiler","handleRegisterIndexRequest","handleUpdateIndexRequest","handleTileRequest","registerIndex","m_factories","m_services","m_service","workerServiceDescriptor","CreateService","targetServiceId","targetServiceType","DestroyService","destroy","projectedBoundingBox","tileBounds","tileSize","getCenter","getSize","tileSizeOnScreen","CommandKind","isMoveToCommand","command","MoveTo","isLineToCommand","LineTo","isClosePathCommand","ClosePath","visitOmv","vectorTile","layers","visitLayer","visitOmvLayer","endVisitLayer","com","mapbox","pb","Tile","GeomType","UNKNOWN","POINT","visitPointFeature","LINESTRING","visitLineFeature","POLYGON","visitPolygonFeature","FeatureAttributes","visitAttribute","GeometryCommands","geometryCount","xCoords","yCoords","commands","cmdIndex","xx","yy","visitCommand","propertyCategories","readAttributes","defaultAttributes","attrs","replaceReservedName","isLong","simplifiedValue","createFeatureEnv","greaterThan","MAX_SAFE_INTEGER","decodeFeatureId","asGeometryType","processor","m_geometryCommands","payload","proto","m_tileKey","layerExtents","currentPolygon","currentRing","wasm","WebAssembly","Instance","Module","low","high","__isLong__","INT_CACHE","UINT_CACHE","fromInt","cachedObj","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","neg","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","fromString","radix","radixToPower","power","mul","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","LongPrototype","toInt","isZero","isNegative","eq","radixLong","div","rem1","rem","remDiv","digits","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","bit","eqz","isPositive","isOdd","isEven","equals","notEquals","neq","ne","lessThan","comp","lt","lessThanOrEqual","lte","le","gt","greaterThanOrEqual","gte","ge","thisNeg","otherNeg","negate","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtract","subtrahend","multiply","multiplier","get_high","b00","divide","divisor","approx","res","div_u","div_s","toUnsigned","shru","shr","shl","LN2","approxRes","approxRem","modulo","rem_u","rem_s","mod","and","or","xor","shiftLeft","numBits","shiftRight","shiftRightUnsigned","shr_u","toSigned","toBytes","toBytesLE","toBytesBE","fromBytes","fromBytesLE","fromBytesBE","$protobuf","$Reader","$util","$root","roots","valuesById","tag","Layer","decodeDelimited","fromObject","TypeError","toObject","arrays","defaults","stringValue","floatValue","doubleValue","intValue","uintValue","sintValue","boolValue","long","Feature","end2","version","protobuf","build","rpc","Function","ctx","arguments","pending","b64","s64","encode","parts","chunk","fromCharCode","charCodeAt","_listeners","on","evt","off","listeners","emit","f32","f8b","writeFloat_f32_cpy","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatBE","readFloatBE","writeFloat_ieee754","writeUint","readFloat_ieee754","readUint","uint","mantissa","NaN","writeUintLE","writeUintBE","readUintLE","readUintBE","Float64Array","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleBE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","moduleName","eval","replace","c1","c2","SIZE","MAX","slab","zero","toLong","part0","part1","part2","writeBytesBuffer","writeStringBuffer","utf8Slice","Service","rpcImpl","requestDelimited","responseDelimited","rpcCall","method","requestCtor","responseCtor","callback","setTimeout","endedByRPC","tempTileOrigin","tempVertOrigin","tempVertNormal","tempFootDisp","tempRoofDisp","tmpV2","tmpV2r","tmpV3","tmpV3r","tmpV4","tempP0","tempP1","tempPreviousTangent","tmpPointA","tmpPointB","tmpPointC","tmpPointD","tmpPointE","tmpLine","Line3","MAX_CORNER_ANGLE","createIndexBufferAttribute","maxValue","MeshBuffers","normals","textureCoordinates","colors","extrusionAxis","edgeIndices","texts","pathLengths","stringCatalog","imageTextures","featureStarts","LineType","m_decodeInfo","m_meshBuffers","m_geometries","m_textGeometries","m_textPathGeometries","m_pathGeometries","m_poiGeometries","m_simpleLines","m_solidLines","m_sources","m_maxGeometryHeight","processFeatureCommon","meshBuffers","findOrCreateMeshBuffers","shouldCreateTextGeometries","wantsPoi","poiTechnique","imageTextureValue","composeTechniqueTextureName","textTechnique","getFeatureText","addText","webMercatorTile2TargetTile","getFeatureId","localLines","worldLines","uvs","offsets","localLineSegments","tileWidth","tileHeight","tileSizeWorld","computeTexCoords","texCoordinateType","hasUntiledLines","hasIndividualLineSegments","hasContinuousLineSegments","otherTexCoordType","getTextureCoordinateType","getComputeTexCoordsFunc","isSpecialDashesLineTechnique","polyline","untiledLine","lineDist","distanceTo","lineLength","pointCount","lastSegmentOffset","localLine","worldLine","lineUvs","segmentOffsets","pos1","pos2","findRelativePositionInLine","segmentLength","segOffsets","offs","lineOffsets","wantCircle","techniqueName","isLineTechnique","isSolidLineTechnique","lineType","Simple","Complex","applyLineTechnique","validLines","worldUnitsPerPixel","minEstimatedLabelLength","minEstimatedLabelLengthSqr","splitJaggyLines","path","pathLengthSqr","lineMarkerTechnique","aLine","isLabelRejectionLineTechnique","worldPath","ExtrudedLine","techniqueCaps","caps","addCircle","triangulateLine","polygons","isFilled","isStandard","isPolygon","clipRing","ringContour","coords","clipPolygon","coord","Ring","isLine","applyPolygonTechnique","needIndividualLineSegments","lines","ringLength","nextIdx","nextX","nextY","isOutline","createGeometries","processSimpleLines","processLines","decodedTechniques","textGeometries","poiGeometries","textPathGeometries","pathGeometries","copyrightHolderIds","maxGeometryHeight","maxCornerAngle","computeBoundingBoxSizeSqr","startIndex","endIndex","pathsToCheck","splitIndex","tangent","theta","firstPathLengthSqr","secondPathLengthSqr","TileSpace","texCoordType","tilePos","tileExtents","divideScalar","EquirectangularSpace","linesGeometry","featureAttributes","lineGroup","lineGroupGeometries","hasNormalsAndUvs","LineGroup","SolidLine","ExtrudedPolygon","extrudedPolygonTechnique","fillTechnique","featureHeight","styleSetDefaultHeight","featureMinHeight","ExtrusionFeatureDefs","MIN_BUILDING_HEIGHT","styleSetConstantHeight","getOptionValue","featureStride","isSpherical","hasEdges","colorValue","featureColor","isColorStringValid","startIndexCount","ringIndex","vertices","polygonBaseVertex","insideExtents","holes","hole","triangles","originalVertexCount","BufferGeometry","positionArray","uvArray","edgeArray","wallArray","BufferAttribute","setAttribute","Uint32BufferAttribute","Uint16BufferAttribute","subdivision","EdgeLengthGeometrySubdivisionModifier","SubdivisionMode","NoDiagonals","modify","SphericalGeometrySubdivisionModifier","world2tile","geomIndex","getScaleFactor","i0","i2","addEdges","addWalls","techniqueIdx","positionElements","positionCount","texCoordCount","linesArray","buffers","featureBaseVertex","featureVertexCount","hasFootprint","tmpEdgeA","tmpEdgeB","firstRingVertex","prevRingVertex","currRingVertex","maxRingVertex","nextRingVertex","prevPos","currPos","nextPos","lineOffset","closestPointToPoint","dist","tmpV","tmpNormal","tmpTangent0","tmpTangent1","tmpBitangent","LINE_VERTEX_ATTRIBUTES","NORMAL_UV_VERTEX_ATTRIBUTES","LINE_VERTEX_ATTRIBUTES_NUV","HP_LINE_VERTEX_ATTRIBUTES","HP_LINE_VERTEX_ATTRIBUTES_NUV","LineGeometry","getVertexDescriptor","highPrecision","createLineGeometry","segments","tangents","baseVertex","hasSegmentOffsets","hasTexCoords","sum","sqrLength","lineCoverage","isClosed","tmpVertices","addVertexPair","T1","T2","segment","extrusionCoord","highComp","fround","lowComp","setComponent","surfaceNormal","angle","bt","cross","computeBitangent","createSimpleLineGeometry","isSimple","m_geometry","vertexDescriptor","InterleavedBuffer","descr","InterleavedBufferAttribute","createGeometry","UNIT_Z","POINTS","BEVEL_POINTS","STEP","lineAngle","SECTORS_IN_CIRCLE","startWithCircle","endWithCircle","angleVec","prevBt","averageBt","p2","p3","useBevel","angleTo","inclineWidth","inBuffer","startOffset","outBuffer","xd","yd","zd","earcut","holeIndices","dim","invSize","hasHoles","outerLen","outerNode","linkedList","prev","list","queue","steiner","getLeftmost","sort","compareX","eliminateHole","filterPoints","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","again","ear","pass","zOrder","prevZ","nextZ","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","intersects","locallyInside","isValidDiagonal","splitPolygon","hx","hy","qx","tanMin","sectorContainsSector","findHoleBridge","leftmost","intersectsPolygon","inside","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","a2","Node","b2","an","bp","deviation","polygonArea","trianglesArea","flatten","dimensions","holeIndex","tmpBA","tmpQP","tmpA","tmpB","computeIntersection","clip","outputList","inputList","currentPoint","prevPoint","VERTEX_POSITION_CACHE","SubdivisionModifier","subdivisionMode","All","m_projectedBox","m_maxLengthX","m_maxLengthY","m_maxLength","shouldSplitAB","shouldSplitEdge","shouldSplitBC","shouldSplitCA","ab","bc","ca","maxDistance","aa","bb","cc","beta","gamma","DEFAULT_RATIO_MIN","DEFAULT_RATIO_MAX","rewriteEnvironment","isWood","updateEnvironment","isHospital","isCemetery","isIndustrial","isPark","isBuiltup","isWater","isRoadLabel","isRoadPath","isRoadStreet","isRoadPrimary","isRoadSecondary","isRailway","isFerry","isAeroway","isBorder","isCountryLabel","isCountyLabel","isRegionLabel","isStateLabel","isPlaceLabel","isWaterLabel","isMarineLabel","isPoiLabel","isBuilding","extrude","min_height","isTunnel","structure","isBridge","newClass","class","worldP","localP","convertPoint","convertLineStringGeometry","convertLineGeometry","lineString","convertRings","convertPolygonGeometry","convertPointGeometry","featureCollection","getSqSegDist","createFeature","calcLineBBox","calcBBox","convertFeature","convertLine","convertLines","out","projectX","projectY","x0","y0","simplify","sqTolerance","maxSqDist","minPosToMid","posToMid","y2","k1","k2","minAll","maxAll","clipped","newGeometry","clipPoints","clipLine","clipLines","newGeom","trackMetrics","segLen","newSlice","intersect","intersectX","intersectY","az","exited","addPoint","shiftFeatureCoords","newFeatures","shiftCoords","newPolygon","k","newPoints","transformTile","transformed","z2","tx","transformPoint","createTile","numPoints","numSimplified","numFeatures","addFeature","simplified","addLine","tileFeature","isOuter","rewind","GeoJSONVT","dest","extend","convert","tiles","tileCoords","timeEnd","stats","total","merged","splitTile","toID","cz","tl","bl","tr","br","k3","k4","z0"],"mappings":"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ID,YAAYE,OAAO,IAAIvqD,WAAW,CACpE,EAAG,GAAI,IAAK,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,IAAK,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,EAAG,EAAG,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GA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","file":"decoder.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 55);\n","module.exports = THREE;","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Env, Value } from \"./Env\";\nimport { ExprEvaluator, ExprEvaluatorContext, OperatorDescriptor } from \"./ExprEvaluator\";\nimport { ExprInstantiator, InstantiationContext } from \"./ExprInstantiator\";\nimport { ExprParser } from \"./ExprParser\";\nimport { ExprPool } from \"./ExprPool\";\nimport {\n    interpolatedPropertyDefinitionToJsonExpr,\n    isInterpolatedPropertyDefinition\n} from \"./InterpolatedPropertyDefs\";\nimport { Definitions, isBoxedDefinition, isLiteralDefinition } from \"./Theme\";\n\nimport * as THREE from \"three\";\n\nexport * from \"./Env\";\n\nconst exprEvaluator = new ExprEvaluator();\n\nconst exprInstantiator = new ExprInstantiator();\n\nexport interface ExprVisitor<Result, Context> {\n    visitNullLiteralExpr(expr: NullLiteralExpr, context: Context): Result;\n    visitBooleanLiteralExpr(expr: BooleanLiteralExpr, context: Context): Result;\n    visitNumberLiteralExpr(expr: NumberLiteralExpr, context: Context): Result;\n    visitStringLiteralExpr(expr: StringLiteralExpr, context: Context): Result;\n    visitObjectLiteralExpr(expr: ObjectLiteralExpr, context: Context): Result;\n    visitVarExpr(expr: VarExpr, context: Context): Result;\n    visitHasAttributeExpr(expr: HasAttributeExpr, context: Context): Result;\n    visitCallExpr(expr: CallExpr, context: Context): Result;\n    visitMatchExpr(expr: MatchExpr, context: Context): Result;\n    visitCaseExpr(expr: CaseExpr, context: Context): Result;\n}\n\n/**\n * The dependencies of an [[Expr]].\n */\nexport class ExprDependencies {\n    /**\n     * The properties needed to evaluate the [[Expr]].\n     */\n    readonly properties = new Set<string>();\n\n    /**\n     * `true` if the expression depends on the feature state.\n     */\n    featureState?: boolean;\n}\n\nclass ComputeExprDependencies implements ExprVisitor<void, ExprDependencies> {\n    static instance = new ComputeExprDependencies();\n\n    /**\n     * Gets the dependencies of an [[Expr]].\n     *\n     * @param expr The [[Expr]] to process.\n     * @param scope The evaluation scope. Defaults to [[ExprScope.Value]].\n     * @param dependencies The output [[Set]] of dependency names.\n     */\n    static of(expr: Expr) {\n        const dependencies = new ExprDependencies();\n        expr.accept(this.instance, dependencies);\n        return dependencies;\n    }\n\n    visitNullLiteralExpr(expr: NullLiteralExpr, context: ExprDependencies): void {\n        // nothing to do\n    }\n\n    visitBooleanLiteralExpr(expr: BooleanLiteralExpr, context: ExprDependencies): void {\n        // nothing to do\n    }\n\n    visitNumberLiteralExpr(expr: NumberLiteralExpr, context: ExprDependencies): void {\n        // nothing to do\n    }\n\n    visitStringLiteralExpr(expr: StringLiteralExpr, context: ExprDependencies): void {\n        // nothing to do\n    }\n\n    visitObjectLiteralExpr(expr: ObjectLiteralExpr, context: ExprDependencies): void {\n        // nothing to do\n    }\n\n    visitVarExpr(expr: VarExpr, context: ExprDependencies): void {\n        context.properties.add(expr.name);\n    }\n\n    visitHasAttributeExpr(expr: HasAttributeExpr, context: ExprDependencies): void {\n        context.properties.add(expr.name);\n    }\n\n    visitCallExpr(expr: CallExpr, context: ExprDependencies): void {\n        expr.args.forEach(childExpr => childExpr.accept(this, context));\n\n        switch (expr.op) {\n            case \"feature-state\":\n                context.featureState = true;\n                context.properties.add(\"$state\");\n                break;\n            case \"id\":\n                context.properties.add(\"$id\");\n                break;\n            case \"geometry-type\":\n                context.properties.add(\"$geometryType\");\n                break;\n            default:\n                break;\n        }\n    }\n\n    visitMatchExpr(expr: MatchExpr, context: ExprDependencies): void {\n        expr.value.accept(this, context);\n        expr.branches.forEach(([_, branch]) => branch.accept(this, context));\n        expr.fallback.accept(this, context);\n    }\n\n    visitCaseExpr(expr: CaseExpr, context: ExprDependencies): void {\n        expr.branches.forEach(([condition, branch]) => {\n            condition.accept(this, context);\n            branch.accept(this, context);\n        });\n        expr.fallback.accept(this, context);\n    }\n}\n\n/**\n * A type represeting JSON values.\n */\nexport type JsonValue = null | boolean | number | string | JsonObject | JsonArray;\n\n/**\n * A type representing JSON arrays.\n */\nexport interface JsonArray extends Array<JsonValue> {}\n\n/**\n * A type representing JSON objects.\n */\nexport interface JsonObject {\n    [name: string]: JsonValue;\n}\n\n/**\n * The JSON representation of an [[Expr]] object.\n */\nexport type JsonExpr = JsonArray;\n\nexport function isJsonExpr(v: any): v is JsonExpr {\n    return Array.isArray(v) && v.length > 0 && typeof v[0] === \"string\";\n}\n\n/**\n * Internal state needed by [[Expr.fromJSON]] to resolve `\"ref\"` expressions.\n * @hidden\n */\ninterface ReferenceResolverState {\n    definitions: Definitions;\n    lockedNames: Set<string>;\n    cache: Map<string, Expr>;\n}\n\n/**\n * The evaluation scope of an [[Expr]].\n */\nexport enum ExprScope {\n    /**\n     * The scope of an [[Expr]] used as value of an attribute.\n     */\n    Value,\n\n    /**\n     * The scope of an [[Expr]] used in a [[Technique]] `when` condition.\n     */\n    Condition,\n\n    /**\n     * The scope of an [[Expr]] used as dynamic property attribute value.\n     */\n    Dynamic\n}\n\n/**\n * Abstract class defining a shape of a [[Theme]]'s expression\n */\nexport abstract class Expr {\n    /**\n     * Tests of given value is an [[Expr]].\n     *\n     * @param value The object to test.\n     */\n    static isExpr(value: any): value is Expr {\n        return value instanceof Expr;\n    }\n\n    /**\n     * Creates an expression from the given `code`.\n     *\n     * @param code The code to parse.\n     * @returns The parsed [[Expr]].\n     * @deprecated\n     */\n    static parse(code: string): Expr | never {\n        const parser = new ExprParser(code);\n        const expr = parser.parse();\n        return expr;\n    }\n\n    /**\n     * Parse expression in JSON form.\n     *\n     * If `definitions` are defined, then references (`['ref', name]`) are resolved.\n     *\n     * Pass `definitionExprCache` to reuse `Expr` instances created from definitions across\n     * many `fromJSON` calls.\n     *\n     * @param node expression in JSON format to parse\n     * @param definitions optional set of definitions needed definition resolved by `ref` operator\n     * @param definitionExprCache optional cache of `Expr` instances derived from `definitions`\n     */\n    static fromJSON(\n        node: JsonValue,\n        definitions?: Definitions,\n        definitionExprCache?: Map<string, Expr>\n    ) {\n        const referenceResolverState: ReferenceResolverState | undefined =\n            definitions !== undefined\n                ? {\n                      definitions,\n                      lockedNames: new Set(),\n                      cache: definitionExprCache || new Map<string, Expr>()\n                  }\n                : undefined;\n\n        return parseNode(node, referenceResolverState);\n    }\n\n    private m_dependencies?: ExprDependencies;\n    private m_isDynamic?: boolean;\n\n    /**\n     * Evaluate an expression returning a [[Value]] object.\n     *\n     * @param env The [[Env]] used to lookup symbols.\n     * @param scope The evaluation scope. Defaults to [[ExprScope.Value]].\n     * @param cache A cache of previously computed results.\n     */\n    evaluate(\n        env: Env,\n        scope: ExprScope = ExprScope.Value,\n        cache?: Map<Expr, Value>\n    ): Value | never {\n        return this.accept(\n            exprEvaluator,\n            new ExprEvaluatorContext(exprEvaluator, env, scope, cache)\n        );\n    }\n\n    /**\n     * Instantiates this [[Expr]] by resolving references to the `get` and\n     * `has` operator using the given instantiation context.\n     *\n     * @param context The [[InstantationContext]] used to resolve names.\n     */\n    instantiate(context: InstantiationContext): Expr {\n        return this.accept(exprInstantiator, context);\n    }\n\n    /**\n     * Gets the dependencies of this [[Expr]].\n     */\n    dependencies(): ExprDependencies {\n        if (!this.m_dependencies) {\n            this.m_dependencies = ComputeExprDependencies.of(this);\n        }\n        return this.m_dependencies;\n    }\n\n    /**\n     * Create a unique object that is structurally equivalent to this [[Expr]].\n     *\n     * @param pool The [[ExprPool]] used to create a unique\n     * equivalent object of this [[Expr]].\n     */\n    intern(pool: ExprPool): Expr {\n        return pool.add(this);\n    }\n\n    toJSON(): JsonValue {\n        return new ExprSerializer().serialize(this);\n    }\n\n    /**\n     * Returns `true` if a dynamic execution context is required to evaluate this [[Expr]].\n     */\n    isDynamic(): boolean {\n        if (this.m_isDynamic === undefined) {\n            this.m_isDynamic = this.exprIsDynamic();\n        }\n        return this.m_isDynamic;\n    }\n\n    abstract accept<Result, Context>(\n        visitor: ExprVisitor<Result, Context>,\n        context: Context\n    ): Result;\n\n    /**\n     * Update the dynamic state of this [[Expr]].\n     *\n     * [[exprIsDynamic]] must never be called directly.\n     *\n     * @hidden\n     */\n    protected abstract exprIsDynamic(): boolean;\n}\n\n/**\n * @hidden\n */\nexport type RelationalOp = \"<\" | \">\" | \"<=\" | \">=\";\n\n/**\n * @hidden\n */\nexport type EqualityOp = \"~=\" | \"^=\" | \"$=\" | \"==\" | \"!=\";\n\n/**\n * @hidden\n */\nexport type BinaryOp = RelationalOp | EqualityOp;\n\n/**\n * Var expression.\n * @hidden\n */\nexport class VarExpr extends Expr {\n    constructor(readonly name: string) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitVarExpr(this, context);\n    }\n\n    /** @override */\n    protected exprIsDynamic() {\n        return false;\n    }\n}\n\nexport abstract class LiteralExpr extends Expr {\n    /**\n     * Create a [[LiteralExpr]] from the given value.\n     *\n     * @param value A constant value.\n     */\n    static fromValue(value: Value): Expr {\n        switch (typeof value) {\n            case \"boolean\":\n                return new BooleanLiteralExpr(value);\n            case \"number\":\n                return new NumberLiteralExpr(value);\n            case \"string\":\n                return new StringLiteralExpr(value);\n            case \"object\":\n                return value === null ? NullLiteralExpr.instance : new ObjectLiteralExpr(value);\n            default:\n                throw new Error(`failed to create a literal from '${value}'`);\n        } // switch\n    }\n\n    abstract get value(): Value;\n\n    /** @override */\n    protected exprIsDynamic() {\n        return false;\n    }\n}\n\n/**\n * Null literal expression.\n * @hidden\n */\nexport class NullLiteralExpr extends LiteralExpr {\n    static instance = new NullLiteralExpr();\n    /** @override */\n    readonly value: Value = null;\n\n    protected constructor() {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitNullLiteralExpr(this, context);\n    }\n\n    /** @override */\n    protected exprIsDynamic() {\n        return false;\n    }\n}\n\n/**\n * Boolean literal expression.\n * @hidden\n */\nexport class BooleanLiteralExpr extends LiteralExpr {\n    constructor(readonly value: boolean) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitBooleanLiteralExpr(this, context);\n    }\n}\n\n/**\n * Number literal expression.\n * @hidden\n */\nexport class NumberLiteralExpr extends LiteralExpr {\n    constructor(readonly value: number) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitNumberLiteralExpr(this, context);\n    }\n}\n\n/**\n * String literal expression.\n * @hidden\n */\nexport class StringLiteralExpr extends LiteralExpr {\n    constructor(readonly value: string) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitStringLiteralExpr(this, context);\n    }\n}\n\n/**\n * Object literal expression.\n * @hidden\n */\nexport class ObjectLiteralExpr extends LiteralExpr {\n    constructor(readonly value: object) {\n        super();\n    }\n\n    get isArrayLiteral() {\n        return Array.isArray(this.value);\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitObjectLiteralExpr(this, context);\n    }\n}\n\n/**\n * A has expression with an attribute, for example `has(ref)`.\n * @hidden\n */\nexport class HasAttributeExpr extends Expr {\n    constructor(readonly name: string) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitHasAttributeExpr(this, context);\n    }\n\n    /** @override */\n    protected exprIsDynamic() {\n        return false;\n    }\n}\n\n/**\n * @hidden\n */\nexport class CallExpr extends Expr {\n    descriptor?: OperatorDescriptor;\n\n    constructor(readonly op: string, readonly args: Expr[]) {\n        super();\n    }\n\n    /**\n     * Returns the child nodes of this [[Expr]].\n     * @deprecated\n     */\n    get children() {\n        return this.args;\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitCallExpr(this, context);\n    }\n\n    /** @override */\n    protected exprIsDynamic() {\n        const descriptor = this.descriptor || ExprEvaluator.getOperator(this.op);\n\n        if (descriptor && descriptor.isDynamicOperator && descriptor.isDynamicOperator(this)) {\n            return true;\n        }\n\n        return this.args.some(e => e.isDynamic());\n    }\n}\n\n/**\n * @hidden\n */\nexport type MatchLabel = number | string | number[] | string[];\n\n/**\n * @hidden\n */\nexport class MatchExpr extends Expr {\n    /**\n     * Tests if the given JSON node is a valid label for the `\"match\"` operator.\n     *\n     * @param node A JSON value.\n     */\n    static isValidMatchLabel(node: JsonValue): node is MatchLabel {\n        switch (typeof node) {\n            case \"number\":\n            case \"string\":\n                return true;\n            case \"object\":\n                if (!Array.isArray(node) || node.length === 0) {\n                    return false;\n                }\n                const elementTy = typeof node[0];\n                if (elementTy === \"number\" || elementTy === \"string\") {\n                    return node.every(t => typeof t === elementTy);\n                }\n                return false;\n            default:\n                return false;\n        } // switch\n    }\n\n    constructor(\n        readonly value: Expr,\n        readonly branches: Array<[MatchLabel, Expr]>,\n        readonly fallback: Expr\n    ) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitMatchExpr(this, context);\n    }\n\n    /** @override */\n    protected exprIsDynamic() {\n        return (\n            this.value.isDynamic() ||\n            this.branches.some(([_, branch]) => branch.isDynamic()) ||\n            this.fallback.isDynamic()\n        );\n    }\n}\n\n/**\n * @hidden\n */\nexport class CaseExpr extends Expr {\n    constructor(readonly branches: Array<[Expr, Expr]>, readonly fallback: Expr) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitCaseExpr(this, context);\n    }\n\n    /** @override */\n    protected exprIsDynamic() {\n        return (\n            this.branches.some(([cond, branch]) => cond.isDynamic() || branch.isDynamic()) ||\n            this.fallback.isDynamic()\n        );\n    }\n}\n\n/**\n * @hidden\n */\nclass ExprSerializer implements ExprVisitor<JsonValue, void> {\n    serialize(expr: Expr): JsonValue {\n        return expr.accept(this, undefined);\n    }\n\n    visitNullLiteralExpr(expr: NullLiteralExpr, context: void): JsonValue {\n        return null;\n    }\n\n    visitBooleanLiteralExpr(expr: BooleanLiteralExpr, context: void): JsonValue {\n        return expr.value;\n    }\n\n    visitNumberLiteralExpr(expr: NumberLiteralExpr, context: void): JsonValue {\n        return expr.value;\n    }\n\n    visitStringLiteralExpr(expr: StringLiteralExpr, context: void): JsonValue {\n        return expr.value;\n    }\n\n    visitObjectLiteralExpr(expr: ObjectLiteralExpr, context: void): JsonValue {\n        if (expr.value instanceof THREE.Vector2) {\n            return [\"make-vector\", expr.value.x, expr.value.y];\n        } else if (expr.value instanceof THREE.Vector3) {\n            return [\"make-vector\", expr.value.x, expr.value.y, expr.value.z];\n        } else if (expr.value instanceof THREE.Vector4) {\n            return [\"make-vector\", expr.value.x, expr.value.y, expr.value.z, expr.value.w];\n        }\n        return [\"literal\", expr.value as JsonObject];\n    }\n\n    visitVarExpr(expr: VarExpr, context: void): JsonValue {\n        return [\"get\", expr.name];\n    }\n\n    visitHasAttributeExpr(expr: HasAttributeExpr, context: void): JsonValue {\n        return [\"has\", expr.name];\n    }\n\n    visitCallExpr(expr: CallExpr, context: void): JsonValue {\n        return [expr.op, ...expr.args.map(childExpr => this.serialize(childExpr))];\n    }\n\n    visitMatchExpr(expr: MatchExpr, context: void): JsonValue {\n        const branches: JsonValue[] = [];\n        for (const [label, body] of expr.branches) {\n            branches.push(label, this.serialize(body));\n        }\n        return [\"match\", this.serialize(expr.value), ...branches, this.serialize(expr.fallback)];\n    }\n\n    visitCaseExpr(expr: CaseExpr, context: void): JsonValue {\n        const branches: JsonValue[] = [];\n        for (const [condition, body] of expr.branches) {\n            branches.push(this.serialize(condition), this.serialize(body));\n        }\n        return [\"case\", ...branches, this.serialize(expr.fallback)];\n    }\n}\n\nfunction parseNode(\n    node: JsonValue,\n    referenceResolverState: ReferenceResolverState | undefined\n): Expr {\n    if (Array.isArray(node)) {\n        return parseCall(node, referenceResolverState);\n    } else if (node === null) {\n        return NullLiteralExpr.instance;\n    } else if (typeof node === \"boolean\") {\n        return new BooleanLiteralExpr(node);\n    } else if (typeof node === \"number\") {\n        return new NumberLiteralExpr(node);\n    } else if (typeof node === \"string\") {\n        return new StringLiteralExpr(node);\n    }\n    throw new Error(`failed to create expression from: ${JSON.stringify(node)}`);\n}\n\nfunction parseCall(node: JsonArray, referenceResolverState?: ReferenceResolverState): Expr {\n    const op = node[0];\n\n    if (typeof op !== \"string\") {\n        throw new Error(\"expected a builtin function name\");\n    }\n\n    switch (op) {\n        case \"!has\":\n        case \"!in\":\n            return new CallExpr(\"!\", [parseCall([op.slice(1), ...node.slice(1)])]);\n\n        case \"ref\":\n            return resolveReference(node, referenceResolverState);\n\n        case \"get\":\n            return parseGetExpr(node, referenceResolverState);\n\n        case \"has\":\n            return parseHasExpr(node, referenceResolverState);\n\n        case \"literal\":\n            return parseLiteralExpr(node);\n\n        case \"match\":\n            return parseMatchExpr(node, referenceResolverState);\n\n        case \"case\":\n            return parseCaseExpr(node, referenceResolverState);\n\n        default:\n            return makeCallExpr(op, node, referenceResolverState);\n    } // switch\n}\n\nfunction parseGetExpr(node: JsonArray, referenceResolverState: ReferenceResolverState | undefined) {\n    if (node[2] !== undefined) {\n        return makeCallExpr(\"get\", node, referenceResolverState);\n    }\n    const name = node[1];\n    if (typeof name !== \"string\") {\n        throw new Error(`expected the name of an attribute`);\n    }\n    return new VarExpr(name);\n}\n\nfunction parseHasExpr(node: JsonArray, referenceResolverState: ReferenceResolverState | undefined) {\n    if (node[2] !== undefined) {\n        return makeCallExpr(\"has\", node, referenceResolverState);\n    }\n    const name = node[1];\n    if (typeof name !== \"string\") {\n        throw new Error(`expected the name of an attribute`);\n    }\n    return new HasAttributeExpr(name);\n}\n\nfunction parseLiteralExpr(node: JsonArray) {\n    const obj = node[1];\n    if (obj === null || typeof obj !== \"object\") {\n        throw new Error(\"expected an object or array literal\");\n    }\n    return new ObjectLiteralExpr(obj);\n}\n\nfunction parseMatchExpr(\n    node: JsonArray,\n    referenceResolverState: ReferenceResolverState | undefined\n) {\n    if (node.length < 4) {\n        throw new Error(\"not enough arguments\");\n    }\n    if (!(node.length % 2)) {\n        throw new Error(\"fallback is missing in 'match' expression\");\n    }\n    const value = parseNode(node[1], referenceResolverState);\n    const conditions: Array<[MatchLabel, Expr]> = [];\n    for (let i = 2; i < node.length - 1; i += 2) {\n        const label = node[i];\n        if (!MatchExpr.isValidMatchLabel(label)) {\n            throw new Error(`'${JSON.stringify(label)}' is not a valid label for 'match'`);\n        }\n        const expr = parseNode(node[i + 1], referenceResolverState);\n        conditions.push([label, expr]);\n    }\n    const fallback = parseNode(node[node.length - 1], referenceResolverState);\n    return new MatchExpr(value, conditions, fallback);\n}\n\nfunction parseCaseExpr(\n    node: JsonArray,\n    referenceResolverState: ReferenceResolverState | undefined\n) {\n    if (node.length < 3) {\n        throw new Error(\"not enough arguments\");\n    }\n    if (node.length % 2) {\n        throw new Error(\"fallback is missing in 'case' expression\");\n    }\n    const branches: Array<[Expr, Expr]> = [];\n    for (let i = 1; i < node.length - 1; i += 2) {\n        const condition = parseNode(node[i], referenceResolverState);\n        const expr = parseNode(node[i + 1], referenceResolverState);\n        branches.push([condition, expr]);\n    }\n    const caseFallback = parseNode(node[node.length - 1], referenceResolverState);\n    return new CaseExpr(branches, caseFallback);\n}\n\nfunction makeCallExpr(\n    op: string,\n    node: any[],\n    referenceResolverState?: ReferenceResolverState\n): Expr {\n    return new CallExpr(\n        op,\n        node.slice(1).map(childExpr => parseNode(childExpr, referenceResolverState))\n    );\n}\n\nfunction resolveReference(node: JsonArray, referenceResolverState?: ReferenceResolverState) {\n    if (typeof node[1] !== \"string\") {\n        throw new Error(`expected the name of an attribute`);\n    }\n    if (referenceResolverState === undefined) {\n        throw new Error(`ref used with no definitions`);\n    }\n    const name = node[1] as string;\n\n    if (referenceResolverState.lockedNames.has(name)) {\n        throw new Error(`circular referene to '${name}'`);\n    }\n\n    if (!(name in referenceResolverState.definitions)) {\n        throw new Error(`definition '${name}' not found`);\n    }\n\n    const cachedEntry = referenceResolverState.cache.get(name);\n    if (cachedEntry !== undefined) {\n        return cachedEntry;\n    }\n    let definitionEntry = referenceResolverState.definitions[name] as any;\n    let result: Expr;\n    if (isLiteralDefinition(definitionEntry)) {\n        return Expr.fromJSON(definitionEntry);\n    } else if (isBoxedDefinition(definitionEntry)) {\n        if (isInterpolatedPropertyDefinition(definitionEntry.value)) {\n            // found a reference to an interpolation using\n            // the deprecated object-like syntax.\n            return Expr.fromJSON(interpolatedPropertyDefinitionToJsonExpr(definitionEntry.value));\n        } else if (isJsonExpr(definitionEntry.value)) {\n            definitionEntry = definitionEntry.value;\n        } else {\n            return Expr.fromJSON(definitionEntry.value);\n        }\n    }\n\n    if (isJsonExpr(definitionEntry)) {\n        referenceResolverState.lockedNames.add(name);\n        try {\n            result = parseNode(definitionEntry, referenceResolverState);\n        } finally {\n            referenceResolverState.lockedNames.delete(name);\n        }\n    } else {\n        throw new Error(`unsupported definition ${name}`);\n    }\n    referenceResolverState.cache.set(name, result);\n    return result;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from \"./index-common\";\nexport * from \"./lib/UrlPlatformUtils.web\";\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from \"./lib/coordinates/GeoBox\";\nexport * from \"./lib/coordinates/GeoBoxExtentLike\";\nexport * from \"./lib/coordinates/GeoCoordinatesLike\";\nexport * from \"./lib/coordinates/GeoCoordinates\";\nexport * from \"./lib/coordinates/GeoPointLike\";\nexport * from \"./lib/coordinates/LatLngLike\";\nexport * from \"./lib/projection/EarthConstants\";\nexport * from \"./lib/projection/EquirectangularProjection\";\nexport * from \"./lib/projection/IdentityProjection\";\nexport * from \"./lib/projection/Projection\";\nexport * from \"./lib/projection/MercatorProjection\";\nexport * from \"./lib/projection/TransverseMercatorProjection\";\nexport * from \"./lib/projection/SphereProjection\";\nexport * from \"./lib/tiling/FlatTileBoundingBoxGenerator\";\nexport * from \"./lib/tiling/HalfQuadTreeSubdivisionScheme\";\nexport * from \"./lib/tiling/QuadTreeSubdivisionScheme\";\nexport * from \"./lib/tiling/QuadTree\";\nexport * from \"./lib/tiling/SubTiles\";\nexport * from \"./lib/tiling/SubdivisionScheme\";\nexport * from \"./lib/tiling/TileKey\";\nexport * from \"./lib/tiling/TileKeyUtils\";\nexport * from \"./lib/tiling/TileTreeTraverse\";\nexport * from \"./lib/tiling/TilingScheme\";\nexport * from \"./lib/tiling/HereTilingScheme\";\nexport * from \"./lib/tiling/WebMercatorTilingScheme\";\nexport * from \"./lib/tiling/MercatorTilingScheme\";\nexport * from \"./lib/tiling/PolarTilingScheme\";\nexport * from \"./lib/math/Vector3Like\";\nexport * from \"./lib/math/Box3Like\";\nexport * from \"./lib/math/OrientedBox3Like\";\nexport * from \"./lib/math/MathUtils\";\nexport * from \"./lib/math/TransformLike\";\nexport * from \"./lib/math/OrientedBox3\";\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoCoordinatesLike, isGeoCoordinatesLike } from \"./GeoCoordinatesLike\";\nimport { GeoPointLike, isGeoPointLike } from \"./GeoPointLike\";\nimport { isLatLngLike, LatLngLike } from \"./LatLngLike\";\n\nimport * as THREE from \"three\";\n\n/**\n * Represents an object in different geo coordinate formats\n */\nexport type GeoCoordLike = GeoPointLike | GeoCoordinatesLike | LatLngLike;\n\n/**\n * `GeoCoordinates` is used to represent geo positions.\n */\nexport class GeoCoordinates implements GeoCoordinatesLike {\n    /**\n     * Returns a `GeoCoordinates` from the given latitude, longitude, and optional altitude.\n     *\n     * @param latitude Latitude in degrees.\n     * @param longitude Longitude in degrees.\n     * @param altitude Altitude in meters.\n     */\n    static fromDegrees(latitude: number, longitude: number, altitude?: number): GeoCoordinates {\n        return new GeoCoordinates(latitude, longitude, altitude);\n    }\n\n    /**\n     * Returns a `GeoCoordinates` from the given latitude, longitude, and optional altitude.\n     *\n     * @param latitude Latitude in radians.\n     * @param longitude Longitude in radians.\n     * @param altitude Altitude in meters.\n     */\n    static fromRadians(latitude: number, longitude: number, altitude?: number): GeoCoordinates {\n        return new GeoCoordinates(\n            THREE.MathUtils.radToDeg(latitude),\n            THREE.MathUtils.radToDeg(longitude),\n            altitude\n        );\n    }\n\n    /**\n     * Creates a [[GeoCoordinates]] from a [[LatLngLike]] literal.\n     * ```typescript\n     * const center = { lat: 53.3, lng: 13.4 };\n     * mapView.geoCenter = GeoCoordinates.fromLatLng(center);\n     * ```\n     * @param latLng A [[LatLngLike]] object literal.\n     */\n    static fromLatLng(latLng: LatLngLike) {\n        return new GeoCoordinates(latLng.lat, latLng.lng);\n    }\n\n    /**\n     * Creates a [[GeoCoordinates]] from a [[GeoPointLike]] tuple.\n     *\n     * Example:\n     * ```typescript\n     * mapView.geoCenter = GeoCoordinates.fromGeoPoint([longitude, latitude]);\n     *\n     * let geoCoords: number[] = ...;\n     *\n     * if (isGeoPointLike(geoCoords)) {\n     *     const p = GeoCoordinates.fromGeoPoint(geoCoords);\n     * }\n     * ```\n     * @param geoPoint An [[Array]] of at least two elements following the order\n     * longitude, latitude, altitude.\n     */\n    static fromGeoPoint(geoPoint: GeoPointLike): GeoCoordinates {\n        return new GeoCoordinates(geoPoint[1], geoPoint[0], geoPoint[2]);\n    }\n\n    /**\n     * Creates a [[GeoCoordinates]] from different types of geo coordinate objects.\n     *\n     * Example:\n     * ```typescript\n     * const fromGeoPointLike = GeoCoordinates.fromObject([longitude, latitude]);\n     * const fromGeoCoordinateLike = GeoCoordinates.fromObject({ longitude, latitude });\n     * const fromGeoCoordinate = GeoCoordinates.fromObject(new GeoCoordinates(latitude, longitude));\n     * const fromLatLngLike = GeoCoordinates.fromObject({ lat: latitude , lng: longitude });\n     * ```\n     *\n     * @param geoPoint Either [[GeoPointLike]], [[GeoCoordinatesLike]]\n     * or [[LatLngLike]] object literal.\n     */\n    static fromObject(geoPoint: GeoCoordLike): GeoCoordinates {\n        if (isGeoPointLike(geoPoint)) {\n            return GeoCoordinates.fromGeoPoint(geoPoint);\n        } else if (isGeoCoordinatesLike(geoPoint)) {\n            return GeoCoordinates.fromDegrees(\n                geoPoint.latitude,\n                geoPoint.longitude,\n                geoPoint.altitude\n            );\n        } else if (isLatLngLike(geoPoint)) {\n            return GeoCoordinates.fromDegrees(geoPoint.lat, geoPoint.lng);\n        }\n\n        throw new Error(\"Invalid input coordinate format.\");\n    }\n\n    /**\n     * Creates a `GeoCoordinates` from the given latitude, longitude, and optional altitude.\n     *\n     * @param latitude Latitude in degrees.\n     * @param longitude Longitude in degrees.\n     * @param altitude Altitude in meters.\n     */\n    constructor(public latitude: number, public longitude: number, public altitude?: number) {}\n\n    /**\n     * Returns the latitude in radians.\n     */\n    get latitudeInRadians(): number {\n        return THREE.MathUtils.degToRad(this.latitude);\n    }\n\n    /**\n     * Returns the longitude in radians.\n     */\n    get longitudeInRadians(): number {\n        return THREE.MathUtils.degToRad(this.longitude);\n    }\n\n    /**\n     * Returns the latitude in degrees.\n     * @deprecated Use the [[latitude]] property instead.\n     */\n    get latitudeInDegrees(): number {\n        return this.latitude;\n    } // compat api\n\n    /**\n     * Returns the longitude in degrees.\n     * @deprecated Use the [[longitude]] property instead.\n     */\n    get longitudeInDegrees(): number {\n        return this.longitude;\n    } // compat api\n\n    /**\n     * The latitude in the degrees.\n     */\n    get lat() {\n        return this.latitude;\n    }\n\n    /**\n     * The longitude in the degrees.\n     */\n    get lng() {\n        return this.longitude;\n    }\n\n    /**\n     * Returns `true` if this `GeoCoordinates` is valid; returns `false` otherwise.\n     */\n    isValid(): boolean {\n        return !isNaN(this.latitude) && !isNaN(this.longitude);\n    }\n\n    /**\n     * Returns the normalized `GeoCoordinates`.\n     */\n    normalized(): GeoCoordinates {\n        let { latitude, longitude } = this;\n\n        if (isNaN(latitude) || isNaN(longitude)) {\n            return this;\n        }\n\n        if (latitude > 90) {\n            let wrapped = (latitude + 90) % 360;\n            if (wrapped >= 180) {\n                longitude += 180;\n                wrapped = 360 - wrapped;\n            }\n\n            latitude = wrapped - 90;\n        }\n\n        if (latitude < -90) {\n            let wrapped = (latitude - 90) % 360;\n            if (wrapped <= -180) {\n                longitude += 180;\n                wrapped = -360 - wrapped;\n            }\n\n            latitude = wrapped + 90;\n        }\n\n        if (longitude < -180 || longitude > 180) {\n            const sign = Math.sign(longitude);\n            longitude = (((longitude % 360) + 180 * sign) % 360) - 180 * sign;\n        }\n\n        if (latitude === this.latitude && longitude === this.longitude) {\n            return this;\n        }\n\n        return new GeoCoordinates(latitude, longitude, this.altitude);\n    }\n\n    /**\n     * Returns `true` if this `GeoCoordinates` is equal to the other.\n     *\n     * @param other GeoCoordinatesLike to compare to.\n     */\n    equals(other: GeoCoordinatesLike): boolean {\n        return (\n            this.latitude === other.latitude &&\n            this.longitude === other.longitude &&\n            this.altitude === other.altitude\n        );\n    }\n\n    /**\n     * Copy values from the other.\n     *\n     * @param other GeoCoordinatesLike to copy all values from.\n     */\n    copy(other: GeoCoordinatesLike): GeoCoordinates {\n        this.latitude = other.latitude;\n        this.longitude = other.longitude;\n        this.altitude = other.altitude;\n        return this;\n    }\n\n    /**\n     * Clones this `GeoCoordinates`.\n     */\n    clone(): GeoCoordinates {\n        return new GeoCoordinates(this.latitude, this.longitude, this.altitude);\n    }\n\n    /**\n     * Returns this [[GeoCoordinates]] as [[LatLngLike]] literal.\n     */\n    toLatLng(): LatLngLike {\n        return { lat: this.latitude, lng: this.longitude };\n    }\n\n    /**\n     * Converts this [[GeoCoordinates]] to a [[GeoPointLike]].\n     */\n    toGeoPoint(): GeoPointLike {\n        return this.altitude !== undefined\n            ? [this.longitude, this.latitude, this.altitude]\n            : [this.longitude, this.latitude];\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from \"./lib/ColorUtils\";\nexport * from \"./lib/Expr\";\nexport * from \"./lib/Techniques\";\nexport * from \"./lib/TechniqueParams\";\nexport * from \"./lib/Theme\";\nexport * from \"./lib/PostEffects\";\nexport * from \"./lib/InterpolatedProperty\";\nexport * from \"./lib/InterpolatedPropertyDefs\";\nexport * from \"./lib/WorkerServiceProtocol\";\nexport * from \"./lib/WorkerTilerProtocol\";\nexport * from \"./lib/WorkerDecoderProtocol\";\nexport * from \"./lib/ITileDecoder\";\nexport * from \"./lib/ITiler\";\nexport * from \"./lib/DecodedTile\";\nexport * from \"./lib/TileInfo\";\nexport * from \"./lib/GeoJsonDataType\";\nexport * from \"./lib/ThemeVisitor\";\nexport * from \"./lib/StringEncodedNumeral\";\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Box3Like } from \"./Box3Like\";\nimport { Vector3Like } from \"./Vector3Like\";\n\nimport * as THREE from \"three\";\n\nexport namespace MathUtils {\n    /**\n     * Creates a new empty bounding box.\n     * @deprecated\n     */\n    export function newEmptyBox3(): Box3Like {\n        return {\n            min: { x: Infinity, y: Infinity, z: Infinity },\n            max: { x: -Infinity, y: -Infinity, z: -Infinity }\n        };\n    }\n\n    /**\n     * Creates a new [Vector3Like] instance.\n     *\n     * @param x The x component.\n     * @param y The y component.\n     * @param z The z component.\n     */\n    export function newVector3(x: number, y: number, z: number): Vector3Like;\n\n    /**\n     * Creates a new [Vector3Like] instance.\n     *\n     * @param x The x component.\n     * @param y The y component.\n     * @param z The z component.\n     * @param v The resulting [Vector3Like] instance.\n     */\n    export function newVector3<Vector extends Vector3Like>(\n        x: number,\n        y: number,\n        z: number,\n        v: Vector\n    ): Vector;\n\n    /**\n     * Set the components of the given [Vector3Like] instance.\n     *\n     * @param x The x component.\n     * @param y The y component.\n     * @param z The z component.\n     * @param v The [Vector3Like]\n     */\n    export function newVector3(x: number, y: number, z: number, v?: Vector3Like): Vector3Like {\n        if (v === undefined) {\n            return { x, y, z };\n        }\n        v.x = x;\n        v.y = y;\n        v.z = z;\n        return v;\n    }\n\n    /**\n     * Converts an angle measured in degrees to an equivalent value in radians.\n     *\n     * @param degrees Value in degrees.\n     * @returns Value in radians.\n     * @deprecated use THREE.MathUtils.degToRad instead\n     */\n    export const degToRad = THREE.MathUtils.degToRad;\n\n    /**\n     * Converts an angle measured in radians to an equivalent value in degrees.\n     *\n     * @param degrees Value in radians.\n     * @returns Value in degrees.\n     * @deprecated\n     */\n    export const radToDeg = THREE.MathUtils.radToDeg;\n\n    /**\n     * Ensures that input value fits in a given range.\n     *\n     * @param value The value to be clamped.\n     * @param min Minimum value.\n     * @param max Maximum value.\n     * @returns Clamped value.\n     * @deprecated\n     */\n    export const clamp = THREE.MathUtils.clamp;\n\n    /**\n     * Normalize angle in degrees to range `[0, 360)`.\n     *\n     * @param a Angle in degrees.\n     * @returns Angle in degrees in range `[0, 360)`.\n     */\n    export function normalizeAngleDeg(a: number): number {\n        a = a % 360;\n        if (a < 0) {\n            a = a + 360;\n        }\n        return a;\n    }\n\n    /**\n     * Normalize latitude angle in degrees to range `[-180, 180]`.\n     *\n     * @param a Latitude angle in degrees.\n     * @returns Latitude angle in degrees in range `[-180, 180]`.\n     */\n    export function normalizeLongitudeDeg(a: number): number {\n        a = normalizeAngleDeg(a);\n        if (a > 180) {\n            a = a - 360;\n        }\n        return a;\n    }\n\n    /**\n     * Return the minimal delta between angles `a` and `b` given in degrees.\n     *\n     * Equivalent to `a - b` in coordinate space with exception vector direction can be reversed\n     * that if `abs(a-b) > 180` because trip is shorter in 'other' direction.\n     *\n     * Useful when interpolating between `b` and `a` in angle space.\n     *\n     * @param a Start angle in degrees.\n     * @param b End angle in degrees.\n     * @returns Angle that that satisfies condition `a - b - d = 0` in angle space.\n     */\n    export function angleDistanceDeg(a: number, b: number): number {\n        a = normalizeAngleDeg(a);\n        b = normalizeAngleDeg(b);\n\n        const d = a - b;\n        if (d > 180) {\n            return d - 360;\n        } else if (d <= -180) {\n            return d + 360;\n        } else {\n            return d;\n        }\n    }\n\n    /**\n     * Interpolate linearly between two angles given in degrees.\n     *\n     * @param p0 Angle from in degrees\n     * @param p1 Angle to in degrees\n     * @param t Interpolation factor (alpha), in range `0-1`.\n     */\n    export function interpolateAnglesDeg(p0: number, p1: number, t: number): number {\n        // hand crafted version,\n        // see stack for maybe better versions:\n        //    https://stackoverflow.com/questions/2708476/rotation-interpolation\n\n        const d = angleDistanceDeg(p1, p0);\n        const r = (p0 + d * t) % 360;\n        return r;\n    }\n}\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n// global object reference\nutil.global = typeof window !== \"undefined\" && window\n           || typeof global !== \"undefined\" && global\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n * @const\n */\nutil.isNode = Boolean(util.global.process && util.global.process.versions && util.global.process.versions.node);\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: (new Error()).stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Vector3Like } from \"./Vector3Like\";\n\n/**\n * An interface representing bounding box in world coordinates.\n */\nexport interface Box3Like {\n    /**\n     * The minimum position in world coordinates of this bounding box.\n     */\n    readonly min: Vector3Like;\n\n    /**\n     * The maximum position in world coordinates of this bounding box.\n     */\n    readonly max: Vector3Like;\n}\n\n/**\n * Returns true if the given object implements the [[Box3Like]] interface.\n *\n * @param object A valid object.\n */\nexport function isBox3Like(object: {}): object is Box3Like {\n    const box3 = object as Partial<Box3Like>;\n    return box3.min !== undefined && box3.max !== undefined;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { TransformLike } from \"./TransformLike\";\nimport { Vector3Like } from \"./Vector3Like\";\n\n/**\n * The interface [[OrientedBox3Like]] is used to represent oriented bounding box.\n */\nexport interface OrientedBox3Like extends TransformLike {\n    /**\n     * The extents of this bounding box.\n     */\n    readonly extents: Vector3Like;\n}\n\n/**\n * Returns true if the given object implements the interface [[OrientedBox3Like]].\n *\n * @param object The object.\n */\nexport function isOrientedBox3Like(object: {}): object is OrientedBox3Like {\n    const obb = object as Partial<OrientedBox3Like>;\n    return (\n        obb.position !== undefined &&\n        obb.xAxis !== undefined &&\n        obb.yAxis !== undefined &&\n        obb.zAxis !== undefined &&\n        obb.extents !== undefined\n    );\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinates } from \"../coordinates/GeoCoordinates\";\nimport { GeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Box3Like } from \"../math/Box3Like\";\nimport { MathUtils } from \"../math/MathUtils\";\nimport { OrientedBox3Like } from \"../math/OrientedBox3Like\";\nimport { TransformLike } from \"../math/TransformLike\";\nimport { Vector3Like } from \"../math/Vector3Like\";\n\n/**\n * The type of projection.\n */\nexport enum ProjectionType {\n    /**\n     * A type of [Projection] with zero curvature.\n     */\n    Planar,\n\n    /**\n     * A spherical [Projection].\n     */\n    Spherical\n}\n\n/**\n * `Projection` is used to convert positions from geo coordinates to world coordinates and vice\n * versa.\n */\nexport abstract class Projection {\n    /**\n     * The type of this [Projection].\n     */\n    abstract get type(): ProjectionType;\n\n    /**\n     * Constructs the Projection\n     *\n     * @param unitScale How to transform the projected coordinates to world units.\n     */\n    constructor(readonly unitScale: number) {\n        //Prevent empty constructor error.\n    }\n\n    /**\n     * Returns the world extents in world coordinates.\n     *\n     * @param minElevation The minimum elevation in meters.\n     * @param maxElevation The maximum elevation in meters.\n     * @param result The optional object that will be used to create the resulting bounding box.\n     */\n    abstract worldExtent<Bounds extends Box3Like>(\n        minElevation: number,\n        maxElevation: number,\n        result?: Bounds\n    ): Bounds;\n\n    /**\n     * Projects a point from geo coordinates (latitude, longitude, altitude) to world coordinates\n     * (x,y,z).\n     *\n     * Example:\n     * ```typescript\n     * const worldPos = new THREE.Vector3();\n     * projection.projectPoint(geoPos, worldPos);\n     * ```\n     *\n     * @param geoPoint The position in geo coordinates.\n     * @param result The optional object used to store the resulting world position, result must\n     * implement [[Vector3Like]].\n     */\n    abstract projectPoint<WorldCoordinates extends Vector3Like>(\n        geoPoint: GeoCoordinatesLike,\n        result?: WorldCoordinates\n    ): WorldCoordinates;\n\n    /**\n     * Gets the [[TransformLike]] of the local tangent space at the given geo coordinates.\n     *\n     * @param geoPoint The geo coordinates.\n     * @param result The [[TransformLike]].\n     */\n    localTangentSpace(geoPoint: GeoCoordinatesLike, result: TransformLike): TransformLike {\n        this.projectPoint(geoPoint, result.position);\n        MathUtils.newVector3(1, 0, 0, result.xAxis);\n        MathUtils.newVector3(0, 1, 0, result.yAxis);\n        MathUtils.newVector3(0, 0, 1, result.zAxis);\n        return result;\n    }\n\n    /**\n     * Returns the geo coordinates (latitude, longitude, altitude) from the given world position\n     * (x,y,z).\n     *\n     * Example:\n     * ```typescript\n     * const geoPos = projection.unprojectPoint(worldPos);\n     * console.log(geoPos.latitude, geoPos.longitude, geoPos.altitude);\n     * ```\n     *\n     * @param worldPoint The position in world coordinates.\n     */\n    abstract unprojectPoint(worldPoint: Vector3Like): GeoCoordinates;\n\n    /**\n     * Returns the altitude at the given world position (x,y,z) in meters.\n     *\n     * @param worldPoint The position in world coordinates.\n     */\n    abstract unprojectAltitude(worldPoint: Vector3Like): number;\n\n    /**\n     * Projects bounds in geo coordinates to a bounding box in world coordinates.\n     *\n     * Example:\n     * ```typescript\n     * const bounds = projection.projectBox(geoBox);\n     * console.log(bounds.min, bounds.max);\n     * ```\n     *\n     * @param geoBox The bounding box in geo coordinates.\n     */\n    abstract projectBox(geoBox: GeoBox): Box3Like;\n\n    /**\n     * Projects bounds in geo coordinates to a bounding box in world coordinates.\n     *\n     * Example:\n     * ```typescript\n     * const bounds = projection.projectBox(geoBox, new THREE.Box3());\n     * console.log(bounds.min, bounds.max);\n     * ```\n     *\n     * @param geoBox The bounding box in geo coordinates.\n     * @param result The resulting [[OrientedBox3Like]].\n     */\n    abstract projectBox<WorldBoundingBox extends Box3Like | OrientedBox3Like>(\n        geoBox: GeoBox,\n        result: WorldBoundingBox\n    ): WorldBoundingBox;\n\n    /**\n     * Converts a bounding box in world coordinates to a bounding box in geo coordinates.\n     *\n     * Example:\n     * ```typescript\n     * const geoPos = projection.unprojectPoint(worldPos);\n     * console.log(geoPos.latitude, geoPos.longitude, geoPos.altitude);\n     * ```\n     *\n     * @param worldBox The bounding box in world coordinates.\n     */\n    abstract unprojectBox(worldBox: Box3Like): GeoBox;\n\n    /**\n     * Returns the scaling factor that must be used to convert the units used by `worldPoint` to\n     * meters.\n     *\n     * @param worldPoint The position in world coordinates.\n     */\n    abstract getScaleFactor(worldPoint: Vector3Like): number;\n\n    /**\n     * Returns the surface normal at the given world position.\n     *\n     * @param worldPoint The position in world coordinates.\n     */\n    abstract surfaceNormal(worldPoint: Vector3Like): Vector3Like;\n\n    /**\n     * Returns the surface normal at the given world position.\n     *\n     * @param worldPoint The position in world coordinates.\n     * @returns The resulting normal vector.\n     */\n    abstract surfaceNormal<Normal extends Vector3Like>(\n        worldPoint: Vector3Like,\n        result: Normal\n    ): Normal;\n\n    /**\n     * Returns the signed distance between the given coordinates and\n     * the closest point on the surface.\n     *\n     * @param worldPoint The position in world coordinates.\n     */\n    abstract groundDistance(worldPoint: Vector3Like): number;\n\n    /**\n     * Scales the given world coordinates to the surface.\n     *\n     * @param worldPoint The position in world coordinates.\n     */\n    abstract scalePointToSurface(worldPoint: Vector3Like): Vector3Like;\n\n    /**\n     * Reproject a world position from the given source [[Projection]].\n     *\n     * @param sourceProjection The source projection.\n     * @param worldPos A valid world position for the given source projection.\n     * @returns The world position reprojected using this [[Projection]].\n     */\n    reprojectPoint(sourceProjection: Projection, worldPos: Vector3Like): Vector3Like;\n\n    /**\n     * Reproject a world position from the given source [[Projection]].\n     *\n     * @param sourceProjection The source projection.\n     * @param worldPos A valid position in the world space defined by the source projection.\n     * @param result The resulting position reprojected using this [[Projection]].\n     */\n    reprojectPoint<WorldCoordinates extends Vector3Like>(\n        sourceProjection: Projection,\n        worldPos: Vector3Like,\n        result: WorldCoordinates\n    ): typeof result;\n\n    /**\n     * Reproject a world position from the given source [[Projection]].\n     * Implementations should be aware of worldPos and result may be one object\n     *\n     * @param sourceProjection The source projection.\n     * @param worldPos A valid position in the world space defined by the source projection.\n     * @param result The resulting position reprojected using this [[Projection]].\n     * @hidden\n     */\n    reprojectPoint(\n        sourceProjection: Projection,\n        worldPos: Vector3Like,\n        result?: Vector3Like\n    ): Vector3Like {\n        if (sourceProjection === this) {\n            if (result === undefined) {\n                return { x: worldPos.x, y: worldPos.y, z: worldPos.z };\n            }\n            result.x = worldPos.x;\n            result.y = worldPos.y;\n            result.z = worldPos.z;\n            return result;\n        }\n        return this.projectPoint(sourceProjection.unprojectPoint(worldPos), result);\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @hidden\n */\nexport type Value = null | boolean | number | string | object;\n\n/**\n * @hidden\n */\nexport interface ValueMap {\n    [name: string]: Value;\n}\n\n/**\n * @hidden\n */\nexport class Env {\n    /**\n     * Returns `true` if the given object is an instance of [[Env]].\n     *\n     * @param object The object to test.\n     */\n    static isEnv(object: any): object is Env {\n        return object instanceof Env;\n    }\n\n    /**\n     * Returns property in [[Env]] by name.\n     *\n     * @param name Name of property.\n     */\n    lookup(_name: string): Value | undefined {\n        return undefined;\n    }\n    /**\n     * Return an object containing all properties of this environment. (Here: empty object).\n     */\n    unmap(): ValueMap {\n        return {};\n    }\n}\n\n/**\n * Adds access to map specific environment properties.\n */\nexport class MapEnv extends Env {\n    constructor(readonly entries: ValueMap, private readonly parent?: Env) {\n        super();\n    }\n    /**\n     * Returns property in [[Env]] by name.\n     *\n     * @param name Name of property.\n     * @override\n     */\n    lookup(name: string): Value | undefined {\n        if (this.entries.hasOwnProperty(name)) {\n            const value = this.entries[name];\n            if (value !== undefined) {\n                return value;\n            }\n        }\n        return this.parent ? this.parent.lookup(name) : undefined;\n    }\n    /**\n     * Return an object containing all properties of this environment, takes care of the parent\n     * object.\n     * @override\n     */\n    unmap(): ValueMap {\n        const obj: any = this.parent ? this.parent.unmap() : {};\n        for (const key in this.entries) {\n            if (this.entries.hasOwnProperty(key)) {\n                obj[key] = this.entries[key];\n            }\n        }\n        return obj;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { JsonExpr } from \"./Expr\";\n\n/**\n * Interpolation mode used when computing a [[InterpolatedProperty]] value for a given zoom level.\n */\nexport enum InterpolationMode {\n    Discrete,\n    Linear,\n    Cubic,\n    Exponential\n}\n\n/**\n * Interpolated property could have its value (some initial value should be provided) changed\n * according to an interpolation type.\n *\n * Here is an example of an interpolated property from a map style:\n * \"lineWidth\": {\n *  \"interpolation\": \"Linear\",\n *  \"zoomLevels\": [13, 14, 15],\n *  \"values\": [ 1.5, 1.2, 0.9]\n * }\n */\nexport interface InterpolatedPropertyDefinition<T> {\n    interpolation?: \"Discrete\" | \"Linear\" | \"Cubic\" | \"Exponential\";\n    zoomLevels: number[];\n    values: T[];\n    exponent?: number;\n}\n\n/**\n * Checks if a property is interpolated.\n * @param p property to be checked\n */\nexport function isInterpolatedPropertyDefinition<T>(\n    p: any\n): p is InterpolatedPropertyDefinition<T> {\n    if (\n        p &&\n        p.interpolationMode === undefined &&\n        Array.isArray(p.values) &&\n        p.values.length > 0 &&\n        p.values[0] !== undefined &&\n        Array.isArray(p.zoomLevels) &&\n        p.zoomLevels.length > 0 &&\n        p.zoomLevels[0] !== undefined &&\n        p.values.length === p.zoomLevels.length\n    ) {\n        return true;\n    }\n    return false;\n}\n\n/**\n * Converts an [[InterpolatedPropertyDefinition]] to a [[JsonExpr]].\n *\n * @param property A valid [[InterpolatedPropertyDefinition]]\n */\nexport function interpolatedPropertyDefinitionToJsonExpr(\n    property: InterpolatedPropertyDefinition<any>\n): JsonExpr {\n    if (property.interpolation === undefined || property.interpolation === \"Discrete\") {\n        const step: JsonExpr = [\"step\", [\"zoom\"], property.values[0]];\n        for (let i = 1; i < property.zoomLevels.length; ++i) {\n            step.push(property.zoomLevels[i], property.values[i]);\n        }\n        return step;\n    }\n    const interpolation: JsonExpr = [\"interpolate\"];\n    switch (property.interpolation) {\n        case \"Linear\":\n            interpolation.push([\"linear\"]);\n            break;\n        case \"Cubic\":\n            interpolation.push([\"cubic\"]);\n            break;\n        case \"Exponential\":\n            interpolation.push([\n                \"exponential\",\n                property.exponent !== undefined ? property.exponent : 2\n            ]);\n            break;\n        default:\n            throw new Error(`interpolation mode '${property.interpolation}' is not supported`);\n    } //switch\n    interpolation.push([\"zoom\"]);\n    for (let i = 0; i < property.zoomLevels.length; ++i) {\n        interpolation.push(property.zoomLevels[i], property.values[i]);\n    }\n    return interpolation;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBoxExtentLike } from \"./GeoBoxExtentLike\";\nimport { GeoCoordinates } from \"./GeoCoordinates\";\n\nimport * as THREE from \"three\";\n\n/**\n * `GeoBox` is used to represent a bounding box in geo coordinates.\n */\nexport class GeoBox implements GeoBoxExtentLike {\n    /**\n     * Returns a `GeoBox` with the given geo coordinates.\n     *\n     * @param southWest The south west position in geo coordinates.\n     * @param northEast The north east position in geo coordinates.\n     */\n    static fromCoordinates(southWest: GeoCoordinates, northEast: GeoCoordinates): GeoBox {\n        return new GeoBox(southWest, northEast);\n    }\n\n    /**\n     * Returns a `GeoBox` with the given center and dimensions.\n     *\n     * @param center The center position of geo box.\n     * @param extent Box latitude and logitude span\n     */\n    static fromCenterAndExtents(center: GeoCoordinates, extent: GeoBoxExtentLike): GeoBox {\n        return new GeoBox(\n            new GeoCoordinates(\n                center.latitude - extent.latitudeSpan / 2,\n                center.longitude - extent.longitudeSpan / 2\n            ),\n            new GeoCoordinates(\n                center.latitude + extent.latitudeSpan / 2,\n                center.longitude + extent.longitudeSpan / 2\n            )\n        );\n    }\n\n    /**\n     * Constructs a new `GeoBox` with the given geo coordinates.\n     *\n     * @param southWest The south west position in geo coordinates.\n     * @param northEast The north east position in geo coordinates.\n     */\n    constructor(readonly southWest: GeoCoordinates, readonly northEast: GeoCoordinates) {}\n\n    /**\n     * Returns the minimum altitude or `undefined`.\n     */\n    get minAltitude(): number | undefined {\n        if (this.southWest.altitude === undefined || this.northEast.altitude === undefined) {\n            return undefined;\n        }\n        return Math.min(this.southWest.altitude, this.northEast.altitude);\n    }\n\n    /**\n     * Returns the maximum altitude or `undefined`.\n     */\n    get maxAltitude(): number | undefined {\n        if (this.southWest.altitude === undefined || this.northEast.altitude === undefined) {\n            return undefined;\n        }\n        return Math.max(this.southWest.altitude, this.northEast.altitude);\n    }\n\n    /**\n     * Returns the south latitude in degrees of this `GeoBox`.\n     */\n    get south(): number {\n        return this.southWest.latitude;\n    }\n\n    /**\n     * Returns the north altitude in degrees of this `GeoBox`.\n     */\n    get north(): number {\n        return this.northEast.latitude;\n    }\n\n    /**\n     * Returns the west longitude in degrees of this `GeoBox`.\n     */\n    get west(): number {\n        return this.southWest.longitude;\n    }\n\n    /**\n     * Returns the east longitude in degrees of this `GeoBox`.\n     */\n    get east(): number {\n        return this.northEast.longitude;\n    }\n\n    /**\n     * Returns the center of this `GeoBox`.\n     */\n    get center(): GeoCoordinates {\n        const latitude = (this.south + this.north) * 0.5;\n        const { west, east } = this;\n        const { minAltitude, altitudeSpan } = this;\n\n        let altitude: number | undefined;\n\n        if (minAltitude !== undefined && altitudeSpan !== undefined) {\n            altitude = minAltitude + altitudeSpan * 0.5;\n        }\n\n        if (west < east) {\n            return new GeoCoordinates(latitude, (west + east) * 0.5, altitude);\n        }\n\n        let longitude = (360 + east + west) * 0.5;\n\n        if (longitude > 360) {\n            longitude -= 360;\n        }\n\n        return new GeoCoordinates(latitude, longitude, altitude);\n    }\n\n    /**\n     * Returns the latitude span in radians.\n     */\n    get latitudeSpanInRadians(): number {\n        return THREE.MathUtils.degToRad(this.latitudeSpan);\n    }\n\n    /**\n     * Returns the longitude span in radians.\n     */\n    get longitudeSpanInRadians(): number {\n        return THREE.MathUtils.degToRad(this.longitudeSpan);\n    }\n\n    /**\n     * Returns the latitude span in degrees.\n     */\n    get latitudeSpan(): number {\n        return this.north - this.south;\n    }\n\n    get altitudeSpan(): number | undefined {\n        if (this.maxAltitude === undefined || this.minAltitude === undefined) {\n            return undefined;\n        }\n        return this.maxAltitude - this.minAltitude;\n    }\n\n    /**\n     * Returns the longitude span in degrees.\n     */\n    get longitudeSpan(): number {\n        let width = this.northEast.longitude - this.southWest.longitude;\n\n        if (width < 0) {\n            width += 360;\n        }\n\n        return width;\n    }\n\n    /**\n     * Returns the latitude span in degrees.\n     * @deprecated Use [[latitudeSpan]] instead.\n     */\n    get latitudeSpanInDegrees(): number {\n        return this.latitudeSpan;\n    }\n\n    /**\n     * Returns the longitude span in degrees.\n     * @deprecated Use [[longitudeSpan]] instead.\n     */\n    get longitudeSpanInDegrees(): number {\n        return this.longitudeSpan;\n    }\n\n    /**\n     * Returns `true` if the given geo coordinates are contained in this `GeoBox`.\n     *\n     * @param point The geo coordinates.\n     */\n    contains(point: GeoCoordinates): boolean {\n        if (\n            point.altitude === undefined ||\n            this.minAltitude === undefined ||\n            this.maxAltitude === undefined\n        ) {\n            return this.containsHelper(point);\n        }\n\n        const isFlat = this.minAltitude === this.maxAltitude;\n        const isSameAltitude = this.minAltitude === point.altitude;\n        const isWithinAltitudeRange =\n            this.minAltitude <= point.altitude && this.maxAltitude > point.altitude;\n\n        // If box is flat, we should check the altitude and containment,\n        // otherwise we should check also altitude difference where we consider\n        // point to be inside if alt is from [m_minAltitude, m_maxAltitude) range!\n        if (isFlat ? isSameAltitude : isWithinAltitudeRange) {\n            return this.containsHelper(point);\n        }\n\n        return false;\n    }\n\n    /**\n     * Clones this `GeoBox` instance.\n     */\n    clone(): GeoBox {\n        return new GeoBox(this.southWest, this.northEast);\n    }\n\n    /**\n     * Update the bounding box by considering a given point.\n     *\n     * @param point The point that may expand the bounding box.\n     */\n    growToContain(point: GeoCoordinates) {\n        this.southWest.latitude = Math.min(this.southWest.latitude, point.latitude);\n        this.southWest.longitude = Math.min(this.southWest.longitude, point.longitude);\n        this.southWest.altitude =\n            this.southWest.altitude !== undefined && point.altitude !== undefined\n                ? Math.min(this.southWest.altitude, point.altitude)\n                : this.southWest.altitude !== undefined\n                ? this.southWest.altitude\n                : point.altitude !== undefined\n                ? point.altitude\n                : undefined;\n\n        this.northEast.latitude = Math.max(this.northEast.latitude, point.latitude);\n        this.northEast.longitude = Math.max(this.northEast.longitude, point.longitude);\n        this.northEast.altitude =\n            this.northEast.altitude !== undefined && point.altitude !== undefined\n                ? Math.max(this.northEast.altitude, point.altitude)\n                : this.northEast.altitude !== undefined\n                ? this.northEast.altitude\n                : point.altitude !== undefined\n                ? point.altitude\n                : undefined;\n    }\n\n    private containsHelper(point: GeoCoordinates): boolean {\n        if (point.latitude < this.southWest.latitude || point.latitude >= this.northEast.latitude) {\n            return false;\n        }\n\n        const { west, east } = this;\n\n        if (east > west) {\n            return point.longitude >= west && point.longitude < east;\n        }\n\n        return point.longitude > east || point.longitude <= west;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport class EarthConstants {\n    /** The equatorial circumference in meters. */\n    static EQUATORIAL_CIRCUMFERENCE: number = 40075016.6855784861531768177614;\n\n    /** The equatorial radius in meters. */\n    static EQUATORIAL_RADIUS: number = 6378137.0;\n\n    /** The lowest point on earth (Dead Sea) in meters. */\n    static MIN_ELEVATION: number = -433.0;\n\n    /** The highest point on earth (Mt. Everest) in meters. */\n    static MAX_ELEVATION: number = 8848.0;\n\n    /** The highest artificial structure (building) on earth, Burj Khalifa tower in Dubai */\n    static MAX_BUILDING_HEIGHT: number = 828;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Box3Like } from \"../math/Box3Like\";\nimport { Projection } from \"../projection/Projection\";\nimport { FlatTileBoundingBoxGenerator } from \"./FlatTileBoundingBoxGenerator\";\nimport { SubdivisionScheme } from \"./SubdivisionScheme\";\nimport { TileKey } from \"./TileKey\";\nimport { TileKeyUtils } from \"./TileKeyUtils\";\nimport { TileTreeTraverse } from \"./TileTreeTraverse\";\n\n/**\n * The `TilingScheme` represents how the data is tiled.\n */\nexport class TilingScheme {\n    readonly boundingBoxGenerator: FlatTileBoundingBoxGenerator;\n    readonly tileTreeTraverse: TileTreeTraverse;\n\n    /**\n     * Constructs a new `TilingScheme` with the given subdivision scheme and projection.\n     *\n     * @param subdivisionScheme The subdivision scheme used by this `TilingScheme`.\n     * @param projection The projection used by this `TilingScheme`.\n     */\n    constructor(readonly subdivisionScheme: SubdivisionScheme, readonly projection: Projection) {\n        this.boundingBoxGenerator = new FlatTileBoundingBoxGenerator(this);\n        this.tileTreeTraverse = new TileTreeTraverse(subdivisionScheme);\n    }\n\n    /**\n     * Returns the sub tile keys of the given tile.\n     *\n     * @param tileKey The [[TileKey]].\n     * @returns The list of the sub tile keys.\n     */\n    getSubTileKeys(tileKey: TileKey): Iterable<TileKey> {\n        return this.tileTreeTraverse.subTiles(tileKey);\n    }\n\n    /**\n     * Gets the [[TileKey]] from the given geo position and level.\n     *\n     * @param geoPoint The position in geo coordinates.\n     * @param level The level of the resulting `TileKey`.\n     */\n    getTileKey(geoPoint: GeoCoordinatesLike, level: number): TileKey | null {\n        return TileKeyUtils.geoCoordinatesToTileKey(this, geoPoint, level);\n    }\n\n    /**\n     * Gets the list of [[TileKey]]s contained in the given [[GeoBox]].\n     *\n     * @param geoBox The bounding box in geo coordinates.\n     * @param level The level of the resulting `TileKey`.\n     */\n    getTileKeys(geoBox: GeoBox, level: number): TileKey[] {\n        return TileKeyUtils.geoRectangleToTileKeys(this, geoBox, level);\n    }\n\n    /**\n     * Returns the bounding box in geo coordinates for the given [[TileKey]].\n     *\n     * @param tileKey The `TileKey`.\n     */\n    getGeoBox(tileKey: TileKey): GeoBox {\n        return this.boundingBoxGenerator.getGeoBox(tileKey);\n    }\n\n    /**\n     * Returns the bounding box in world coordinates.\n     *\n     * @param tileKey The `TileKey`.\n     * @param result The optional object that will contain the resulting bounding box.\n     */\n    getWorldBox(tileKey: TileKey, result?: Box3Like): Box3Like {\n        return this.boundingBoxGenerator.getWorldBox(tileKey, result);\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { Value } from \"@here/harp-datasource-protocol/index-decoder\";\n\n/**\n * Feature Modifier ids to choose which OmvFeatureModifer should be used in OmvDecoder.\n */\nexport enum FeatureModifierId {\n    /**\n     * Identifier to use the OmvTomTomFeatureModifier in the OmvDecoder.\n     */\n    tomTom\n}\n\n/**\n * Definition of a filter.\n */\nexport interface OmvFilterString {\n    /**  String value */\n    value: string;\n    /** Match condition */\n    match: OmvFilterString.StringMatch;\n}\n\n/**\n * Adding the match condition type and the matching function to the namespace of `OmvFilterString`.\n */\nexport namespace OmvFilterString {\n    /**\n     * Match condition.\n     */\n    export enum StringMatch {\n        /** Matches any. */\n        Any,\n        /** Exact match. */\n        Match,\n        /** Matches if a test string starts with a filter string. */\n        StartsWith,\n        /** Matches if a test string contains a filter string. */\n        Contains,\n        /** Matches if a test string ends with a filter string. */\n        EndsWith\n    }\n\n    /**\n     * Check for a string against a filter.\n     *\n     * @param str The string to check against a filter.\n     * @param filterString The filter containing the match condition.\n     * @returns `true` if the match condition is satisfied.\n     */\n    export function matchString(str: string, filterString: OmvFilterString): boolean {\n        switch (filterString.match) {\n            case OmvFilterString.StringMatch.Any:\n                return true;\n            case OmvFilterString.StringMatch.Match:\n                return str === filterString.value;\n            case OmvFilterString.StringMatch.StartsWith:\n                return filterString.value.startsWith(str);\n            case OmvFilterString.StringMatch.EndsWith:\n                return filterString.value.endsWith(str);\n            default:\n                return str.indexOf(filterString.value) >= 0;\n        }\n    }\n}\n\n/**\n * Definition of a filter for a feature attribute\n */\nexport interface OmvFilterFeatureAttribute {\n    key: string;\n    value: Value;\n}\n\nexport enum OmvGeometryType {\n    UNKNOWN = 0,\n    POINT = 1,\n    LINESTRING = 2,\n    POLYGON = 3\n}\n\n/**\n * Internal type of a layer filter description, Should not be publicly available.\n *\n * @hidden\n */\nexport interface OmvLayerFilterDescription {\n    name: OmvFilterString;\n    minLevel: number;\n    maxLevel: number;\n}\n\n/**\n * Internal type of a single filter description, Should not be publicly available.\n *\n * @hidden\n */\nexport interface OmvFilterDescription {\n    layerName: OmvFilterString;\n    geometryTypes?: OmvGeometryType[];\n    classes?: OmvFilterString[];\n    minLevel: number;\n    maxLevel: number;\n    featureAttribute?: OmvFilterFeatureAttribute;\n}\n\n/**\n * Internal type of a complete [[OmvFeatureFilter]] description, should not be publicly available.\n *\n * @hidden\n */\nexport interface OmvFeatureFilterDescription {\n    processLayersDefault: boolean;\n    processPointsDefault: boolean;\n    processLinesDefault: boolean;\n    processPolygonsDefault: boolean;\n\n    layersToProcess: OmvLayerFilterDescription[];\n    layersToIgnore: OmvLayerFilterDescription[];\n    pointsToProcess: OmvFilterDescription[];\n    pointsToIgnore: OmvFilterDescription[];\n    linesToProcess: OmvFilterDescription[];\n    linesToIgnore: OmvFilterDescription[];\n    polygonsToProcess: OmvFilterDescription[];\n    polygonsToIgnore: OmvFilterDescription[];\n\n    // enabledKinds and disabledKinds\n    kindsToProcess: string[];\n    kindsToIgnore: string[];\n}\n\n/**\n * Internal interface for options passed from the [[OmvDataSource]] to the decoder.\n *\n * @hidden\n */\nexport interface OmvDecoderOptions {\n    /**\n     * If true, features that have no technique in the theme will be printed to the console (can be\n     * excessive!).\n     */\n    showMissingTechniques?: boolean;\n\n    /**\n     * Gather feature attributes from [[OmvData]]. Defaults to false.\n     */\n    gatherFeatureAttributes?: boolean;\n\n    /**\n     * @deprecated Tile info is not decoded anymore. The same information can be generated\n     * implementing a [[IGeometryProcessor]] and using [[OmvProtobufDataAdapter]] to decode OMV\n     * data.\n     */\n    createTileInfo?: boolean;\n\n    /**\n     * @deprecated Tile info is not decoded anymore. The same information can be generated\n     * implementing a [[IGeometryProcessor]] and using [[OmvProtobufDataAdapter]] to decode OMV\n     * data.\n     */\n    gatherRoadSegments?: boolean;\n\n    /**\n     * Optional storage level offset for [[Tile]]s. Default is -2.\n     */\n    storageLevelOffset?: number;\n\n    /**\n     * If not set to `false` very short text labels will be skipped during decoding based on a\n     * heuristic.\n     */\n    skipShortLabels?: boolean;\n\n    /**\n     * A description for the feature filter which can be safely passed down to the web workers.\n     * It has to be generated with the help of the [[OmvFeatureFilterDescriptionBuilder]] (to\n     * guarantee the correctness).\n     */\n    filterDescription?: OmvFeatureFilterDescription | null;\n\n    /**\n     * Identifier used to choose OmvFeatureModifier, if undefined [[OmvGenericFeatureModifier]] is\n     * used.\n     */\n    featureModifierId?: FeatureModifierId;\n\n    enableElevationOverlay?: boolean;\n}\n\n/**\n * Default OMV tile decoder service type.\n *\n * Used for requesting decoder services using [[WorkerServiceManager]].\n */\nexport const OMV_TILE_DECODER_SERVICE_TYPE = \"omv-tile-decoder\";\n\n/**\n * Default OMV tiler service type.\n *\n * Used for requesting tiler services using [[WorkerServiceManager]].\n */\nexport const OMV_TILER_SERVICE_TYPE = \"omv-tiler\";\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { assert } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\nconst SHIFT_TRANSPARENCY: number = 24;\nconst SHIFT_RED: number = 16;\nconst SHIFT_GREEN: number = 8;\nconst SHIFT_BLUE: number = 0;\n\n// tslint:disable: no-bitwise\n//    Allow bitwise operations for colors decoding\n\n// tslint:disable-next-line: no-bitwise\nconst HEX_FULL_CHANNEL: number = 0xff;\nconst HEX_RGB_MASK: number = 0xffffff;\nconst HEX_TRGB_MASK: number = 0xffffffff;\n\nconst tmpColor = new THREE.Color();\n\n/**\n * Utilities to convert RGBA colors encoded in custom number (hex) format to THREE.Color objects.\n *\n * The functions provided allows for conversion from and to our custom number based color format,\n * which contains transparency, red, green and blue color channels in a way that each channel\n * occupies 8 bits of resulting number (color format 0xTTRRGGBB).\n * In order to preserve compatibility with THREE.Color class and its hexadecimal color\n * representation, we do not store __alpha__ channel in encoded color's number, but replace it\n * with __transparency__ channel, which is simply opposite to alpha:\n * ```transparency = 0xFF - alpha```\n * Such channel value is stored on the oldest bits (octet) in the integral color (numeric) value,\n * so it is fully compatible with THREE.Color numerical representation (@see [[THREE.Color.getHex]],\n * [[THREE.Color.setHex]]).\n * See also [[getHexFromRgba]] and [[getRgbaFromHex]] for more info about conversion.\n */\nexport namespace ColorUtils {\n    /**\n     * Encodes RGBA channels in custom number coded format (represented in hex as 0xTTRRGGBB).\n     *\n     * We do not use direct alpha channel mapping to hex in order to preserve compatibility\n     * with THREE.js color format (0xRRGGBB). This is done by encoding transparency\n     * (255 - alpha) instead of alpha on the oldest bits, shifted by [[SHIFT_TRANSPARENCY]].\n     * This way simple 0xRRGGBB color is equal to 0x00RRGGBB without transparency and\n     * color defining transparency (alpha < 255) is always recognizable by the oldest\n     * bit set:\n     * ```typescript\n     * (color >> SHIFT_TRANSPARENCY) !== 0.\n     * ```\n     * @note All input components are floating points in <0, 1> range (inclusively).\n     * @note Although method encodes transparency channel in single number value, it is still\n     * compatible with THREE.js number based color coding (0xRRGGBB), so you may pass this value to\n     * [[THREE.Color]] c-tor, but keep in mind that transparency will be silently ignored.\n     */\n    export function getHexFromRgba(r: number, g: number, b: number, a: number): number {\n        assert(a >= 0 && a <= 1);\n        const t = HEX_FULL_CHANNEL - Math.floor(a * HEX_FULL_CHANNEL);\n        return (\n            (t << SHIFT_TRANSPARENCY) ^\n            ((r * HEX_FULL_CHANNEL) << SHIFT_RED) ^\n            ((g * HEX_FULL_CHANNEL) << SHIFT_GREEN) ^\n            ((b * HEX_FULL_CHANNEL) << SHIFT_BLUE)\n        );\n    }\n\n    /**\n     * Encodes RGB all color channels in single number with format 0xRRGGBB.\n     *\n     * All input channels should be in <0, 1> range (inclusively).\n     * See also [[getHexFromRgba]] for more information about [[THREE.Color]] compatibility.\n     *\n     * @note This method is fully compatible with THREE.js color encoding, so\n     * you may pass this value directly to THREE.Color c-tor.\n     */\n    export function getHexFromRgb(r: number, g: number, b: number): number {\n        assert(r >= 0 && r <= 1);\n        assert(g >= 0 && g <= 1);\n        assert(b >= 0 && b <= 1);\n        return (\n            ((r * HEX_FULL_CHANNEL) << SHIFT_RED) ^\n            ((g * HEX_FULL_CHANNEL) << SHIFT_GREEN) ^\n            ((b * HEX_FULL_CHANNEL) << SHIFT_BLUE)\n        );\n    }\n\n    /**\n     * Encode and convert HSL value to number coded color format (0xRRGGBB).\n     *\n     * @see getHexFromRgb.\n     * @param h Hue component value between 0 and 1.\n     * @param s Saturation value between 0 and 1.\n     * @param l Lightness channel between 0 and 1.\n     */\n    export function getHexFromHsl(h: number, s: number, l: number): number {\n        assert(h >= 0 && h <= 1);\n        assert(s >= 0 && s <= 1);\n        assert(l >= 0 && l <= 1);\n        return tmpColor.setHSL(h, s, l).getHex();\n    }\n\n    /**\n     * Retrieve RGBA channels separately from number encoded custom color format.\n     *\n     * Provides an easy way for channels extraction (r, g, b, a) from custom number coded color\n     * format.\n     *\n     * @see getHexFromRgba.\n     * @param hex The number encoded color value (0xRRGGBB or 0xTTRRGGBB in hex).\n     * @returns r, g, b, a channels in simple object, where each channel value is saved as floating\n     * point from 0 to 1 inclusively.\n     */\n    export function getRgbaFromHex(hex: number): { r: number; g: number; b: number; a: number } {\n        assert((hex & ~HEX_TRGB_MASK) === 0, \"Wrong hex format\");\n        return {\n            r: ((hex >> SHIFT_RED) & HEX_FULL_CHANNEL) / HEX_FULL_CHANNEL,\n            g: ((hex >> SHIFT_GREEN) & HEX_FULL_CHANNEL) / HEX_FULL_CHANNEL,\n            b: ((hex >> SHIFT_BLUE) & HEX_FULL_CHANNEL) / HEX_FULL_CHANNEL,\n            a:\n                (HEX_FULL_CHANNEL - ((hex >> SHIFT_TRANSPARENCY) & HEX_FULL_CHANNEL)) /\n                HEX_FULL_CHANNEL\n        };\n    }\n\n    /**\n     * Determines if number encoded color contains alpha (opacity) defined and different then 255.\n     *\n     * @param hex The number encoded color (0xRRGGBB or 0xTTRRGGBB in hex).\n     * @returns True if color has transparency defined.\n     */\n    export function hasAlphaInHex(hex: number): boolean {\n        assert((hex & ~HEX_TRGB_MASK) === 0, \"Wrong hex format\");\n        return hex >> SHIFT_TRANSPARENCY !== 0;\n    }\n\n    /**\n     * Retrieves alpha color channel from hex encoded color value.\n     *\n     * @see getHexFromRgba.\n     * @param hex The number encoded color value (representable as 0xRRGGBB or 0xTTRRGGBB in hex).\n     * @returns The floating point alpha component in <0, 1> range.\n     */\n    export function getAlphaFromHex(hex: number): number {\n        assert((hex & ~HEX_TRGB_MASK) === 0, \"Wrong hex format\");\n        return (\n            ((HEX_FULL_CHANNEL - (hex >> SHIFT_TRANSPARENCY)) & HEX_FULL_CHANNEL) / HEX_FULL_CHANNEL\n        );\n    }\n\n    /**\n     * Remove transparency info from the number coded color, makes it compatible with external libs.\n     *\n     * @see getAlphaFromHex.\n     * @param hex The number encoded color value (representable as 0xRRGGBB or 0xTTRRGGBB in hex).\n     * @returns number coded color value representable as 0xRRGGBB in hex.\n     */\n    export function removeAlphaFromHex(hex: number): number {\n        assert((hex & ~HEX_TRGB_MASK) === 0, \"Wrong hex format\");\n        return hex & HEX_RGB_MASK;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinates } from \"../coordinates/GeoCoordinates\";\nimport { GeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Box3Like, isBox3Like } from \"../math/Box3Like\";\nimport { MathUtils } from \"../math/MathUtils\";\nimport { isOrientedBox3Like, OrientedBox3Like } from \"../math/OrientedBox3Like\";\nimport { TransformLike } from \"../math/TransformLike\";\nimport { Vector3Like } from \"../math/Vector3Like\";\nimport { EarthConstants } from \"./EarthConstants\";\nimport { Projection, ProjectionType } from \"./Projection\";\n\nimport * as THREE from \"three\";\n\nclass MercatorProjection extends Projection {\n    protected static clamp(val: number, min: number, max: number): number {\n        return Math.min(Math.max(min, val), max);\n    }\n\n    protected static latitudeClamp(latitude: number): number {\n        return MercatorProjection.clamp(\n            latitude,\n            -MercatorConstants.MAXIMUM_LATITUDE,\n            MercatorConstants.MAXIMUM_LATITUDE\n        );\n    }\n\n    private static latitudeProject(latitude: number): number {\n        return Math.log(Math.tan(Math.PI * 0.25 + latitude * 0.5)) / Math.PI;\n    }\n\n    private static latitudeClampProject(latitude: number): number {\n        return MercatorProjection.latitudeProject(MercatorProjection.latitudeClamp(latitude));\n    }\n\n    private static unprojectLatitude(y: number): number {\n        return 2.0 * Math.atan(Math.exp(Math.PI * y)) - Math.PI * 0.5;\n    }\n\n    /** @override */\n    readonly type: ProjectionType = ProjectionType.Planar;\n\n    /** @override */\n    getScaleFactor(worldPoint: Vector3Like): number {\n        return Math.cosh(2 * Math.PI * (worldPoint.y / this.unitScale - 0.5));\n    }\n\n    /** @override */\n    worldExtent<WorldBoundingBox extends Box3Like>(\n        minAltitude: number,\n        maxAltitude: number,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        if (!result) {\n            result = (new THREE.Box3() as Box3Like) as WorldBoundingBox;\n        }\n        result.min.x = 0;\n        result.min.y = 0;\n        result.min.z = minAltitude;\n        result.max.x = this.unitScale;\n        result.max.y = this.unitScale;\n        result.max.z = maxAltitude;\n        return result;\n    }\n\n    /** @override */\n    projectPoint<WorldCoordinates extends Vector3Like>(\n        geoPointLike: GeoCoordinatesLike,\n        result?: WorldCoordinates\n    ): WorldCoordinates {\n        let geoPoint: GeoCoordinates;\n\n        if (geoPointLike instanceof GeoCoordinates) {\n            geoPoint = geoPointLike;\n        } else {\n            geoPoint = new GeoCoordinates(\n                geoPointLike.latitude,\n                geoPointLike.longitude,\n                geoPointLike.altitude\n            );\n        }\n\n        if (!result) {\n            // tslint:disable-next-line:no-object-literal-type-assertion\n            result = { x: 0, y: 0, z: 0 } as WorldCoordinates;\n        }\n        result.x = ((geoPoint.longitude + 180) / 360) * this.unitScale;\n        result.y =\n            (MercatorProjection.latitudeClampProject(geoPoint.latitudeInRadians) * 0.5 + 0.5) *\n            this.unitScale;\n        result.z = geoPoint.altitude || 0;\n        return result;\n    }\n\n    /** @override */\n    unprojectPoint(worldPoint: Vector3Like): GeoCoordinates {\n        const geoPoint = GeoCoordinates.fromRadians(\n            MercatorProjection.unprojectLatitude((worldPoint.y / this.unitScale - 0.5) * 2.0),\n            (worldPoint.x / this.unitScale) * 2 * Math.PI - Math.PI,\n            worldPoint.z\n        );\n        return geoPoint;\n    }\n\n    /** @override */\n    unprojectAltitude(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    projectBox<WorldBoundingBox extends Box3Like | OrientedBox3Like>(\n        geoBox: GeoBox,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        const worldCenter = this.projectPoint(geoBox.center);\n        const worldNorth =\n            (MercatorProjection.latitudeClampProject(geoBox.northEast.latitudeInRadians) * 0.5 +\n                0.5) *\n            this.unitScale;\n        const worldSouth =\n            (MercatorProjection.latitudeClampProject(geoBox.southWest.latitudeInRadians) * 0.5 +\n                0.5) *\n            this.unitScale;\n        const worldYCenter = (worldNorth + worldSouth) * 0.5;\n\n        worldCenter.y = worldYCenter;\n\n        const latitudeSpan = worldNorth - worldSouth;\n        const longitudeSpan = (geoBox.longitudeSpan / 360) * this.unitScale;\n        if (!result) {\n            result = (new THREE.Box3() as Box3Like) as WorldBoundingBox;\n        }\n        if (isBox3Like(result)) {\n            result.min.x = worldCenter.x - longitudeSpan * 0.5;\n            result.min.y = worldCenter.y - latitudeSpan * 0.5;\n            result.max.x = worldCenter.x + longitudeSpan * 0.5;\n            result.max.y = worldCenter.y + latitudeSpan * 0.5;\n            const altitudeSpan = geoBox.altitudeSpan;\n            if (altitudeSpan !== undefined) {\n                result.min.z = worldCenter.z - altitudeSpan * 0.5;\n                result.max.z = worldCenter.z + altitudeSpan * 0.5;\n            } else {\n                result.min.z = 0;\n                result.max.z = 0;\n            }\n        } else if (isOrientedBox3Like(result)) {\n            MathUtils.newVector3(1, 0, 0, result.xAxis);\n            MathUtils.newVector3(0, 1, 0, result.yAxis);\n            MathUtils.newVector3(0, 0, 1, result.zAxis);\n            result.position.x = worldCenter.x;\n            result.position.y = worldCenter.y;\n            result.position.z = worldCenter.z;\n            result.extents.x = longitudeSpan * 0.5;\n            result.extents.y = latitudeSpan * 0.5;\n            result.extents.z = Math.max(Number.EPSILON, (geoBox.altitudeSpan || 0) * 0.5);\n        } else {\n            throw new Error(\"invalid bounding box\");\n        }\n        return result;\n    }\n\n    /** @override */\n    unprojectBox(worldBox: Box3Like): GeoBox {\n        const minGeo = this.unprojectPoint(worldBox.min);\n        const maxGeo = this.unprojectPoint(worldBox.max);\n        const geoBox = GeoBox.fromCoordinates(minGeo, maxGeo);\n        return geoBox;\n    }\n\n    /** @override */\n    groundDistance(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    scalePointToSurface(worldPoint: Vector3Like): Vector3Like {\n        worldPoint.z = 0;\n        return worldPoint;\n    }\n\n    /** @override */\n    surfaceNormal(_worldPoint: Vector3Like, normal?: Vector3Like) {\n        if (normal === undefined) {\n            normal = { x: 0, y: 0, z: 1 };\n        } else {\n            normal.x = 0;\n            normal.y = 0;\n            normal.z = 1;\n        }\n        return normal;\n    }\n\n    /** @override */\n    reprojectPoint(\n        sourceProjection: Projection,\n        worldPos: Vector3Like,\n        result?: Vector3Like\n    ): Vector3Like {\n        // this implementation of [[reprojectPoint]] supports both\n        // [[WebMercatorProjection]] and [[MercatorProjection]]. The only\n        // difference betweeen these two variants of WEB Mercator\n        // is in the orientation of the Y axis, so we just flip Y coordinates\n        // when reprojecting between them.\n        if (\n            sourceProjection !== this &&\n            (sourceProjection === webMercatorProjection || sourceProjection === mercatorProjection)\n        ) {\n            if (result === undefined) {\n                // tslint:disable-next-line: no-object-literal-type-assertion\n                result = {} as Vector3Like;\n            }\n\n            result.x = worldPos.x;\n            result.y = this.unitScale - worldPos.y;\n            result.z = worldPos.z;\n\n            return result;\n        }\n\n        return super.reprojectPoint(sourceProjection, worldPos, result!);\n    }\n}\n\nclass WebMercatorProjection extends MercatorProjection {\n    /** @override */\n    projectPoint<WorldCoordinates extends Vector3Like>(\n        geoPointLike: GeoCoordinatesLike,\n        result?: WorldCoordinates\n    ): WorldCoordinates {\n        let geoPoint: GeoCoordinates;\n\n        if (geoPointLike instanceof GeoCoordinates) {\n            geoPoint = geoPointLike;\n        } else {\n            geoPoint = new GeoCoordinates(\n                geoPointLike.latitude,\n                geoPointLike.longitude,\n                geoPointLike.altitude\n            );\n        }\n\n        /*\n         * The following tslint:disable is due to the fact that the [[WorldCoordinates]]\n         * might be a concrete class which is not available at runtime.\n         * Consider the following example:\n         *\n         *  const x: THREE.Vector3 = new THREE.Vector3(0,0,0);\n         *  const result = EquirectangularProjection.projectPoint<THREE.Vector3>(x);\n         *\n         * Note: type of `result` is Vector3Like and not as expected: THREE.Vector3!\n         */\n        if (!result) {\n            // tslint:disable-next-line:no-object-literal-type-assertion\n            result = { x: 0, y: 0, z: 0 } as WorldCoordinates;\n        }\n\n        result.x = ((geoPoint.longitude + 180) / 360) * this.unitScale;\n        const sy = Math.sin(MercatorProjection.latitudeClamp(geoPoint.latitudeInRadians));\n        result.y = (0.5 - Math.log((1 + sy) / (1 - sy)) / (4 * Math.PI)) * this.unitScale;\n        result.z = geoPoint.altitude || 0;\n        return result;\n    }\n\n    /** @override */\n    unprojectPoint(worldPoint: Vector3Like): GeoCoordinates {\n        const x = worldPoint.x / this.unitScale - 0.5;\n        const y = 0.5 - worldPoint.y / this.unitScale;\n\n        const longitude = 360 * x;\n        const latitude = 90 - (360 * Math.atan(Math.exp(-y * 2 * Math.PI))) / Math.PI;\n\n        return new GeoCoordinates(latitude, longitude, worldPoint.z);\n    }\n\n    /** @override */\n    projectBox<WorldBoundingBox extends Box3Like | OrientedBox3Like>(\n        geoBox: GeoBox,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        const r = super.projectBox(geoBox, result);\n        if (isBox3Like(r)) {\n            // Invert the y axis for web mercator, this means that max => min & min => max\n            const maxY = r.max.y;\n            r.max.y = this.unitScale - r.min.y;\n            r.min.y = this.unitScale - maxY;\n        } else if (isOrientedBox3Like(r)) {\n            MathUtils.newVector3(1, 0, 0, r.xAxis);\n            MathUtils.newVector3(0, -1, 0, r.yAxis);\n            MathUtils.newVector3(0, 0, -1, r.zAxis);\n            r.position.y = this.unitScale - r.position.y;\n        }\n        return r;\n    }\n\n    /** @override */\n    unprojectBox(worldBox: Box3Like): GeoBox {\n        const minGeo = this.unprojectPoint(worldBox.min);\n        const maxGeo = this.unprojectPoint(worldBox.max);\n        const geoBox = new GeoBox(\n            new GeoCoordinates(maxGeo.latitude, minGeo.longitude, minGeo.altitude),\n            new GeoCoordinates(minGeo.latitude, maxGeo.longitude, maxGeo.altitude)\n        );\n        return geoBox;\n    }\n\n    /** @override */\n    surfaceNormal(_worldPoint: Vector3Like, normal?: Vector3Like) {\n        if (normal === undefined) {\n            normal = { x: 0, y: 0, z: -1 };\n        } else {\n            normal.x = 0;\n            normal.y = 0;\n            normal.z = -1;\n        }\n        return normal;\n    }\n\n    /** @override */\n    localTangentSpace(geoPoint: GeoCoordinatesLike, result: TransformLike): TransformLike {\n        this.projectPoint(geoPoint, result.position);\n        MathUtils.newVector3(1, 0, 0, result.xAxis);\n        MathUtils.newVector3(0, -1, 0, result.yAxis);\n        MathUtils.newVector3(0, 0, -1, result.zAxis);\n        return result;\n    }\n}\n\nexport class MercatorConstants {\n    // Math.atan(Math.sinh(Math.PI))\n    static readonly MAXIMUM_LATITUDE: number = 1.4844222297453323;\n}\n\n/**\n * Mercator [[Projection]] used to convert geo coordinates to world coordinates and vice versa.\n */\nexport const mercatorProjection: Projection = new MercatorProjection(\n    EarthConstants.EQUATORIAL_CIRCUMFERENCE\n);\n\n/**\n * Web Mercator [[Projection]] used to convert geo coordinates to world coordinates and vice versa.\n */\nexport const webMercatorProjection: Projection = new WebMercatorProjection(\n    EarthConstants.EQUATORIAL_CIRCUMFERENCE\n);\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { SubdivisionScheme } from \"./SubdivisionScheme\";\n\nclass QuadTreeSubdivisionScheme implements SubdivisionScheme {\n    getSubdivisionX(): number {\n        return 2;\n    }\n    getSubdivisionY(): number {\n        return 2;\n    }\n    getLevelDimensionX(level: number): number {\n        // tslint:disable-next-line:no-bitwise\n        return 1 << level;\n    }\n    getLevelDimensionY(level: number): number {\n        // tslint:disable-next-line:no-bitwise\n        return 1 << level;\n    }\n}\n\n/**\n * [[SubdivisionScheme]] representing a quadtree.\n */\nexport const quadTreeSubdivisionScheme: SubdivisionScheme = new QuadTreeSubdivisionScheme();\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/** @hidden */\nconst powerOfTwo = [\n    0x1,\n    0x2,\n    0x4,\n    0x8,\n    0x10,\n    0x20,\n    0x40,\n    0x80,\n    0x100,\n    0x200,\n    0x400,\n    0x800,\n    0x1000,\n    0x2000,\n    0x4000,\n    0x8000,\n    0x10000,\n    0x20000,\n    0x40000,\n    0x80000,\n    0x100000,\n    0x200000,\n    0x400000,\n    0x800000,\n    0x1000000,\n    0x2000000,\n    0x4000000,\n    0x8000000,\n    0x10000000,\n    0x20000000,\n    0x40000000,\n    0x80000000,\n    0x100000000,\n    0x200000000,\n    0x400000000,\n    0x800000000,\n    0x1000000000,\n    0x2000000000,\n    0x4000000000,\n    0x8000000000,\n    0x10000000000,\n    0x20000000000,\n    0x40000000000,\n    0x80000000000,\n    0x100000000000,\n    0x200000000000,\n    0x400000000000,\n    0x800000000000,\n    0x1000000000000,\n    0x2000000000000,\n    0x4000000000000,\n    0x8000000000000,\n    0x10000000000000 // Math.pow(2, 52), highest bit that can be set correctly.\n];\n\n/**\n * The `TileKey` instances are used to address a tile in a quadtree.\n *\n * A tile key is defined by a row, a column, and a level. The tree has a root at level 0, with one\n * single tile. On every level, each tile is divided into four children (therefore the name\n * quadtree).\n *\n * Within each [[level]], any particular tile is addressed with [[row]] and [[column]]. The number\n * of rows and columns in each level is 2 to the power of the level. This means: On level 0, only\n * one tile exists, [[columnsAtLevel]]() and [[rowsAtLevel]]() are both 1. On level 1, 4 tiles\n * exist, in 2 rows and 2 columns. On level 2 we have 16 tiles, in 4 rows and 4 columns. And so on.\n *\n * A tile key is usually created using [[fromRowColumnLevel]]() method.\n *\n * `TileKey` instances are immutable, all members return new instances of `TileKey` and do not\n * modify the original object.\n *\n * Utility functions like [[parent]](), [[changedLevelBy]](), and [[changedLevelTo]]() allow for\n * easy vertical navigation of the tree. The number of available rows and columns in the tile's\n * level is given with [[rowCount]]() and [[columnCount]]().\n *\n * Tile keys can be created from and converted into various alternative formats:\n *\n *  - [[toQuadKey]]() / [[fromQuadKey]]() - string representation 4-based\n *  - [[toHereTile]]() / [[fromHereTile]]() - string representation 10-based\n *  - [[mortonCode]]() / [[fromMortonCode]]() - number representation\n *\n * Note - as JavaScript's number type can hold 53 bits in its mantissa, only levels up to 26 can be\n * represented in the number representation returned by [[mortonCode]]().\n */\nexport class TileKey {\n    /**\n     * Creates a tile key.\n     *\n     * @param row The requested row. Must be less than 2 to the power of level.\n     * @param column The requested column. Must be less than 2 to the power of level.\n     * @param level The requested level.\n     */\n    static fromRowColumnLevel(row: number, column: number, level: number): TileKey {\n        return new TileKey(row, column, level);\n    }\n\n    /**\n     * Creates a tile key from a quad string.\n     *\n     * The quad string can be created with [[toQuadKey]].\n     *\n     * @param quadkey The quadkey to convert.\n     * @returns A new instance of `TileKey`.\n     */\n    static fromQuadKey(quadkey: string): TileKey {\n        const level = quadkey.length;\n        let row = 0;\n        let column = 0;\n        // tslint:disable:no-bitwise\n        for (let i = 0; i < quadkey.length; ++i) {\n            const mask = 1 << i;\n            const d = parseInt(quadkey.charAt(level - i - 1), 10);\n            if (d & 0x1) {\n                column |= mask;\n            }\n            if (d & 0x2) {\n                row |= mask;\n            }\n        }\n        // tslint:enable:no-bitwise\n        return TileKey.fromRowColumnLevel(row, column, level);\n    }\n    /**\n     * Creates a tile key from a numeric Morton code representation.\n     *\n     * You can convert a tile key into a numeric Morton code with [[mortonCode]].\n     *\n     * @param quadKey64 The Morton code to be converted.\n     * @returns A new instance of [[TileKey]].\n     */\n    static fromMortonCode(quadKey64: number): TileKey {\n        let level = 0;\n        let row = 0;\n        let column = 0;\n        let quadKey = quadKey64;\n        // tslint:disable:no-bitwise\n        while (quadKey > 1) {\n            const mask: number = 1 << level;\n\n            if (quadKey & 0x1) {\n                column |= mask;\n            }\n            if (quadKey & 0x2) {\n                row |= mask;\n            }\n\n            level++;\n            quadKey = (quadKey - (quadKey & 0x3)) / 4;\n        }\n        // tslint:enable:no-bitwise\n        const result = TileKey.fromRowColumnLevel(row, column, level);\n        result.m_mortonCode = quadKey64;\n        return result;\n    }\n\n    /**\n     * Creates a tile key from a heretile code string.\n     *\n     * The string can be created with [[toHereTile]].\n     *\n     * @param quadkey64 The string representation of the HERE tile key.\n     * @returns A new instance of `TileKey`.\n     */\n    static fromHereTile(quadkey64: string): TileKey {\n        const result = TileKey.fromMortonCode(parseInt(quadkey64, 10));\n        result.m_hereTile = quadkey64;\n        return result;\n    }\n\n    /**\n     * Returns the number of available columns at a given level.\n     *\n     * This is 2 to the power of the level.\n     *\n     * @param level The level for which to return the number of columns.\n     * @returns The available columns at the given level.\n     */\n    static columnsAtLevel(level: number): number {\n        return Math.pow(2, level);\n    }\n\n    /**\n     * Returns the number of available rows at a given level.\n     *\n     * This is 2 to the power of the level.\n     *\n     * @param level The level for which to return the number of rows.\n     * @returns The available rows at the given level.\n     */\n    static rowsAtLevel(level: number): number {\n        return Math.pow(2, level);\n    }\n\n    /**\n     * Returns the closest matching `TileKey` in a cartesian coordinate system.\n     *\n     * @param level The level for the tile key.\n     * @param coordX The X coordinate.\n     * @param coordY The Y coordinate.\n     * @param totalWidth The maximum X coordinate.\n     * @param totalHeight The maximum Y coordinate.\n     * @returns A new tile key at the given level that includes the given coordinates.\n     */\n    static atCoords(\n        level: number,\n        coordX: number,\n        coordY: number,\n        totalWidth: number,\n        totalHeight: number\n    ): TileKey {\n        return TileKey.fromRowColumnLevel(\n            Math.floor(coordY / (totalHeight / TileKey.rowsAtLevel(level))),\n            Math.floor(coordX / (totalWidth / TileKey.columnsAtLevel(level))),\n            level\n        );\n    }\n\n    /**\n     * Computes the Morton code of the parent tile key of the given Morton code.\n     *\n     * Note: The parent key of the root key is the root key itself.\n     *\n     * @param mortonCode A Morton code, for example, obtained from [[mortonCode]].\n     * @returns The Morton code of the parent tile.\n     */\n    static parentMortonCode(mortonCode: number): number {\n        return Math.floor(mortonCode / 4);\n    }\n\n    private m_mortonCode?: number;\n    private m_hereTile?: string;\n\n    /**\n     * Constructs a new immutable instance of a `TileKey`.\n     *\n     * For the better readability, [[TileKey.fromRowColumnLevel]] should be preferred.\n     *\n     * Note - row and column must not be greater than the maximum rows/columns for the given level.\n     *\n     * @param row Represents the row in the quadtree.\n     * @param column Represents the column in the quadtree.\n     * @param level Represents the level in the quadtree.\n     */\n    constructor(readonly row: number, readonly column: number, readonly level: number) {}\n\n    /**\n     * Returns a tile key representing the parent of the tile addressed by this tile key.\n     *\n     * Throws an exception is this tile is already the root.\n     */\n    parent(): TileKey {\n        if (this.level === 0) {\n            throw new Error(\"Cannot get the parent of the root tile key\");\n        }\n        // tslint:disable-next-line:no-bitwise\n        return TileKey.fromRowColumnLevel(this.row >>> 1, this.column >>> 1, this.level - 1);\n    }\n\n    /**\n     * Returns a new tile key at a level that differs from this tile's level by delta.\n     *\n     * Equivalent to `changedLevelTo(level() + delta)`.\n     *\n     * Note - root key is returned if `delta` is smaller than the level of this tile key.\n     *\n     * @param delta The numeric difference between the current level and the requested level.\n     */\n    changedLevelBy(delta: number): TileKey {\n        const level = Math.max(0, this.level + delta);\n        let row = this.row;\n        let column = this.column;\n\n        // tslint:disable:no-bitwise\n        if (delta >= 0) {\n            row <<= delta;\n            column <<= delta;\n        } else {\n            row >>>= -delta;\n            column >>>= -delta;\n        }\n        // tslint:enable:no-bitwise\n        return TileKey.fromRowColumnLevel(row, column, level);\n    }\n\n    /**\n     * Returns a new tile key at the requested level.\n     *\n     * If the requested level is smaller than the tile's level, then the key of an ancestor of this\n     * tile is returned. If the requested level is larger than the tile's level, then the key of\n     * first child or grandchild of this tile is returned, for example, the child with the lowest\n     * row and column number. If the requested level equals this tile's level, then the tile key\n     * itself is returned. If the requested level is negative, the root tile key is returned.\n     *\n     * @param level The requested level.\n     */\n    changedLevelTo(level: number): TileKey {\n        return this.changedLevelBy(level - this.level);\n    }\n\n    /**\n     * Converts the tile key to a numeric code representation.\n     *\n     * You can create a tile key from a numeric Morton code with [[fromMortonCode]].\n     *\n     * Note - only levels <= 26 are supported.\n     */\n    mortonCode(): number {\n        if (this.m_mortonCode === undefined) {\n            let column = this.column;\n            let row = this.row;\n\n            // tslint:disable:no-bitwise\n            let result = powerOfTwo[this.level << 1];\n            for (let i = 0; i < this.level; ++i) {\n                if (column & 0x1) {\n                    result += powerOfTwo[2 * i];\n                }\n                if (row & 0x1) {\n                    result += powerOfTwo[2 * i + 1];\n                }\n                column >>>= 1;\n                row >>>= 1;\n            }\n            // tslint:enable:no-bitwise\n\n            this.m_mortonCode = result;\n        }\n        return this.m_mortonCode;\n    }\n\n    /**\n     * Converts the tile key into a string for using in REST API calls.\n     *\n     * The string is a quadkey Morton code representation as a string.\n     *\n     * You can convert back from a quadkey string with [[fromHereTile]].\n     */\n    toHereTile(): string {\n        if (this.m_hereTile === undefined) {\n            this.m_hereTile = this.mortonCode().toString();\n        }\n        return this.m_hereTile;\n    }\n\n    /**\n     * Converts the tile key into a string for using in REST API calls.\n     *\n     * If the tile is the root tile, the quadkey is '-'. Otherwise the string is a number to the\n     * base of 4, but without the leading 1, with the following properties:\n     *  1. the number of digits equals the level.\n     *  2. removing the last digit gives the parent tile's quadkey string, i.e. appending 0,1,2,3\n     *     to a quadkey string gives the tiles's children.\n     *\n     * You can convert back from a quadkey string with [[fromQuadKey]].\n     */\n    toQuadKey(): string {\n        let result: string = \"\";\n\n        // tslint:disable:no-bitwise\n        for (let i = this.level; i > 0; --i) {\n            const mask = 1 << (i - 1);\n\n            const col = (this.column & mask) !== 0;\n            const row = (this.row & mask) !== 0;\n\n            if (col && row) {\n                result += \"3\";\n            } else if (row) {\n                result += \"2\";\n            } else if (col) {\n                result += \"1\";\n            } else {\n                result += \"0\";\n            }\n        }\n        // tslint:enable:no-bitwise\n\n        return result;\n    }\n\n    /**\n     * Equality operator.\n     *\n     * @param qnr The tile key to compare to.\n     * @returns `true` if this tile key has identical row, column and level, `false` otherwise.\n     */\n    equals(qnr: TileKey): boolean {\n        return this.row === qnr.row && this.column === qnr.column && this.level === qnr.level;\n    }\n\n    /**\n     * Returns the absolute quadkey that is constructed from its sub quadkey.\n     *\n     * @param sub The sub key.\n     * @returns The absolute tile key in the quadtree.\n     */\n    addedSubKey(sub: string): TileKey {\n        const subQuad = TileKey.fromQuadKey(sub.length === 0 ? \"-\" : sub);\n        const child = this.changedLevelBy(subQuad.level);\n        return TileKey.fromRowColumnLevel(\n            child.row + subQuad.row,\n            child.column + subQuad.column,\n            child.level\n        );\n    }\n\n    /**\n     * Returns the absolute quadkey that is constructed from its sub HERE tile key.\n     *\n     * @param sub The sub HERE key.\n     * @returns The absolute tile key in the quadtree.\n     */\n    addedSubHereTile(sub: string): TileKey {\n        const subQuad = TileKey.fromHereTile(sub);\n        const child = this.changedLevelBy(subQuad.level);\n        return TileKey.fromRowColumnLevel(\n            child.row + subQuad.row,\n            child.column + subQuad.column,\n            child.level\n        );\n    }\n\n    /**\n     * Returns a sub quadkey that is relative to its parent.\n     *\n     * This function can be used to generate sub keys that are relative to a parent that is delta\n     * levels up in the quadtree.\n     *\n     * This function can be used to create shortened keys for quads on lower levels if the parent is\n     * known.\n     *\n     * Note - the sub quadkeys fit in a 16-bit unsigned integer if the `delta` is smaller than 8. If\n     * `delta` is smaller than 16, the sub quadkey fits into an unsigned 32-bit integer.\n     *\n     * Deltas larger than 16 are not supported.\n     *\n     * @param delta The number of levels relative to its parent quadkey. Must be greater or equal to\n     * 0 and smaller than 16.\n     * @returns The quadkey relative to its parent that is `delta` levels up the tree.\n     */\n    getSubHereTile(delta: number): string {\n        const key = this.mortonCode();\n        // tslint:disable-next-line:no-bitwise\n        const msb = 1 << (delta * 2);\n        const mask = msb - 1;\n        // tslint:disable-next-line:no-bitwise\n        const result = (key & mask) | msb;\n        return result.toString();\n    }\n\n    /**\n     * Returns the number of available rows in the tile's [[level]].\n     *\n     * This is 2 to the power of the level.\n     */\n    rowCount(): number {\n        return TileKey.rowsAtLevel(this.level);\n    }\n\n    /**\n     * Returns the number of available columns in the tile's [[level]].\n     *\n     * This is 2 to the power of the level.\n     */\n    columnCount(): number {\n        return TileKey.columnsAtLevel(this.level);\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { WorkerServiceProtocol } from \"@here/harp-datasource-protocol\";\nimport { LoggerManager } from \"@here/harp-utils\";\n\nconst logger = LoggerManager.instance.create(\"WorkerService\", { enabled: false });\n\ndeclare let self: Worker;\n\n/**\n * Response for [[WorkerService]] procession results.\n */\nexport interface WorkerServiceResponse {\n    /**\n     * Response object.\n     */\n    response: any;\n\n    /**\n     * Transfer list containing a list of [[ArrayBuffer]] which transfer ownership from web worker\n     * to UI thread.\n     */\n    transferList?: ArrayBuffer[];\n}\n\n/**\n * Header information for a [[RequestMessage]].\n */\ninterface RequestEntry {\n    /**\n     * ID of service.\n     */\n    service: string;\n\n    /**\n     * Unique ID of message.\n     */\n    messageId: number;\n\n    /**\n     * Contains `true` if message has been processed, and response has been sent.\n     */\n    responseSent: boolean;\n}\n\n/**\n * Worker Service communication helper.\n *\n * Listens to Web Worker messages from [[ConcurrentWorkerSet]] and implements:\n *  - worker service initialization\n *  - request/response scheme\n *  - error handling.\n *\n * This class should be subclassed to provide concrete like [[TileDecoderService]].\n *\n * Communication peer for [[ConcurrentWorkerSet]].\n */\nexport abstract class WorkerService {\n    private m_pendingRequests: Map<number, RequestEntry> = new Map();\n\n    /**\n     * Sets up the `WorkerService` with the specified name, and starts processing messages.\n     *\n     * @param serviceId The service id.\n     */\n    constructor(readonly serviceId: string) {\n        self.addEventListener(\"message\", this.onMessage);\n\n        const isInitializedMessage: WorkerServiceProtocol.InitializedMessage = {\n            service: serviceId,\n            type: WorkerServiceProtocol.ServiceMessageName.Initialized\n        };\n        self.postMessage(isInitializedMessage);\n    }\n\n    /**\n     * Destroy the `WorkerService`. Cancels all pending requests ad removes itself from the message\n     * queue.\n     */\n    destroy() {\n        this.cancelAllPendingRequests();\n\n        self.removeEventListener(\"message\", this.onMessage);\n    }\n\n    /**\n     * Message handler to be overridden by implementation.\n     *\n     * @param message `MessageEvent.data` as received by `WorkerService`.\n     */\n    protected handleMessage(message: any): void {\n        logger.error(`[${this.serviceId}]: Invalid message ${message.type}`);\n    }\n\n    /**\n     * Call request handler to be overridden by implementation.\n     *\n     * @param request [[RequestMessage.request]] as received by `WorkerService`.\n     */\n    protected handleRequest(request: any): Promise<WorkerServiceResponse> {\n        throw new Error(`ServiceAdapter[${this.serviceId}]: Invalid request '${request.type}'`);\n    }\n\n    /**\n     * Central message handler for this service.\n     *\n     * Responsible for filtering message target and managing request/response sequence.\n     *\n     * @param message Message to be dispatched.\n     */\n    private onMessage = (message: MessageEvent) => {\n        if (typeof message.data.service !== \"string\" || message.data.service !== this.serviceId) {\n            return;\n        }\n\n        try {\n            if (WorkerServiceProtocol.isRequestMessage(message.data)) {\n                const request = message.data;\n                const requestEntry = {\n                    service: request.service,\n                    messageId: request.messageId,\n                    responseSent: false\n                };\n                this.m_pendingRequests.set(request.messageId, requestEntry);\n                this.tryHandleRequest(request.request)\n                    .then(response => {\n                        this.doSendResponse(\n                            requestEntry,\n                            {\n                                service: this.serviceId,\n                                type: WorkerServiceProtocol.ServiceMessageName.Response,\n                                messageId: request.messageId,\n                                response: response.response\n                            },\n                            response.transferList\n                        );\n                    })\n                    .catch(error => {\n                        this.doSendResponse(requestEntry, {\n                            service: this.serviceId,\n                            type: WorkerServiceProtocol.ServiceMessageName.Response,\n                            messageId: request.messageId,\n                            errorMessage: error.toString(),\n                            errorStack: error.stack\n                        });\n                    });\n            } else {\n                this.tryHandleMessage(message.data);\n            }\n        } catch (err) {\n            logger.error(`[${this.serviceId}]: Unhandled exception when handling ${message.type}`);\n        }\n    };\n\n    /**\n     * Safety belt over [[handleMessage]] for correct exception handling & logging.\n     */\n    private tryHandleMessage(message: any): void {\n        try {\n            this.handleMessage(message);\n        } catch (error) {\n            logger.error(`[${this.serviceId}]: Failed, handling message ${message.type}`);\n        }\n    }\n\n    /**\n     * Safety belt over [[handleRequest]] for correct exception handling in promise chain.\n     */\n    private tryHandleRequest(request: any): Promise<WorkerServiceResponse> {\n        try {\n            return this.handleRequest(request);\n        } catch (error) {\n            // we don't log exceptions here as they are propagated to client as responses\n            logger.error(`[${this.serviceId}]: Failure`, error);\n            return Promise.reject(error);\n        }\n    }\n\n    private doSendResponse(\n        requestEntry: RequestEntry,\n        response: WorkerServiceProtocol.ResponseMessage,\n        transferList?: ArrayBuffer[]\n    ) {\n        if (requestEntry.responseSent) {\n            return;\n        }\n\n        if (transferList !== undefined) {\n            self.postMessage(response, transferList);\n        } else {\n            self.postMessage(response);\n        }\n\n        requestEntry.responseSent = true;\n        this.m_pendingRequests.delete(requestEntry.messageId);\n    }\n\n    private cancelAllPendingRequests() {\n        this.m_pendingRequests.forEach(requestEntry => {\n            this.doSendResponse(requestEntry, {\n                service: this.serviceId,\n                type: WorkerServiceProtocol.ServiceMessageName.Response,\n                messageId: requestEntry.messageId,\n                errorMessage: \"cancelled\"\n            });\n        });\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { EarthConstants, webMercatorProjection } from \"@here/harp-geoutils\";\nimport * as THREE from \"three\";\n\nimport { DecodeInfo } from \"./DecodeInfo\";\nimport { VTJsonDataAdapterId } from \"./VTJsonDataAdapter\";\n\n/**\n * @hidden\n */\nexport function isArrayBufferLike(data: any): data is ArrayBufferLike {\n    if (typeof SharedArrayBuffer !== \"undefined\") {\n        return data instanceof ArrayBuffer || data instanceof SharedArrayBuffer;\n    } else {\n        return data instanceof ArrayBuffer;\n    }\n}\n\n/**\n * @hidden\n */\nexport function lat2tile(\n    lat: number,\n    zoom: number,\n    func: (x: number) => number = Math.floor\n): number {\n    return func(\n        ((1 -\n            Math.log(Math.tan((lat * Math.PI) / 180) + 1 / Math.cos((lat * Math.PI) / 180)) /\n                Math.PI) /\n            2) *\n            Math.pow(2, zoom)\n    );\n}\n\n/**\n * @hidden\n */\nexport function tile2lat(y: number, level: number): number {\n    const n = Math.PI - (2 * Math.PI * y) / Math.pow(2, level);\n    return (180 / Math.PI) * Math.atan(0.5 * (Math.exp(n) - Math.exp(-n)));\n}\n\nexport interface WorldTileProjectionCookie {\n    extents: number;\n    top: number;\n    left: number;\n    scale: number;\n}\n\nexport function createWorldTileTransformationCookie(extents: number, decodeInfo: DecodeInfo) {\n    const { north, west } = decodeInfo.geoBox;\n    const N = Math.log2(extents);\n    const scale = Math.pow(2, decodeInfo.tileKey.level + N);\n    return {\n        extents,\n        scale,\n        top: lat2tile(\n            north,\n            decodeInfo.tileKey.level + N,\n            decodeInfo.adapterId === VTJsonDataAdapterId ? Math.round : Math.floor\n        ),\n        left: ((west + 180) / 360) * scale\n    };\n}\n\n/**\n * @hidden\n */\nexport function tile2world(\n    extents: number,\n    decodeInfo: DecodeInfo,\n    position: THREE.Vector2,\n    flipY: boolean = false,\n    target: THREE.Vector2\n): THREE.Vector2 {\n    if (\n        decodeInfo.worldTileProjectionCookie === undefined ||\n        decodeInfo.worldTileProjectionCookie.extents !== extents\n    ) {\n        decodeInfo.worldTileProjectionCookie = createWorldTileTransformationCookie(\n            extents,\n            decodeInfo\n        );\n    }\n\n    const { top, left, scale } = decodeInfo.worldTileProjectionCookie;\n    const R = EarthConstants.EQUATORIAL_CIRCUMFERENCE;\n\n    return target.set(\n        ((left + position.x) / scale) * R,\n        ((top + (flipY ? -position.y : position.y)) / scale) * R\n    );\n}\n\n/**\n * @hidden\n */\nexport function world2tile(\n    extents: number,\n    decodeInfo: DecodeInfo,\n    position: THREE.Vector2,\n    flipY: boolean = false,\n    target: THREE.Vector2\n): THREE.Vector2 {\n    if (\n        decodeInfo.worldTileProjectionCookie === undefined ||\n        decodeInfo.worldTileProjectionCookie.extents !== extents\n    ) {\n        decodeInfo.worldTileProjectionCookie = createWorldTileTransformationCookie(\n            extents,\n            decodeInfo\n        );\n    }\n    const { top, left, scale } = decodeInfo.worldTileProjectionCookie;\n    const R = EarthConstants.EQUATORIAL_CIRCUMFERENCE;\n\n    return target.set(\n        (position.x / R) * scale - left,\n        (flipY ? -1 : 1) * ((position.y / R) * scale - top)\n    );\n}\n\nconst tempWorldPos = new THREE.Vector2();\n\nexport function webMercatorTile2TargetWorld(\n    extents: number,\n    decodeInfo: DecodeInfo,\n    position: THREE.Vector2,\n    target: THREE.Vector3,\n    flipY: boolean = false\n) {\n    const worldPos = tile2world(extents, decodeInfo, position, flipY, tempWorldPos);\n    target.set(worldPos.x, worldPos.y, 0);\n    decodeInfo.targetProjection.reprojectPoint(webMercatorProjection, target, target);\n}\n\nexport function webMercatorTile2TargetTile(\n    extents: number,\n    decodeInfo: DecodeInfo,\n    position: THREE.Vector2,\n    target: THREE.Vector3,\n    flipY: boolean = false\n) {\n    webMercatorTile2TargetWorld(extents, decodeInfo, position, target, flipY);\n    target.sub(decodeInfo.center);\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { IChannel } from \"./IChannel\";\n\n/**\n * Enum log levels\n */\nexport enum LogLevel {\n    Trace,\n    Debug,\n    Log,\n    Info,\n    Warn,\n    Error\n}\n\n/**\n * Logger options to configure logger\n */\nexport class LoggerOptions {\n    enabled?: boolean;\n    level?: LogLevel;\n}\n\n/**\n * Public interface for Logger class.\n */\nexport interface ILogger extends IChannel {\n    readonly name: string;\n\n    enabled: boolean;\n\n    level: LogLevel;\n\n    /**\n     * Update logger options\n     *\n     * @param  {LoggerOptions} options Set logger options and configure internal logger.\n     */\n    update(options: LoggerOptions): void;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Resolve URI of referenced object w.r.t parent URI.\n *\n * Resolves `childUri` as it would be loaded from location specified by `parentUri`.\n *\n * If `childUri` is absolute, then it is returned unchanged.\n * If `childUri` is origin-absolute path, then only origin path is taken from `parentUri`.\n *\n * See [[baseUri]] for reference how base URL of `parentUri` is determined.\n *\n * Supports `http:`, `https:`, `file:`, `data:` schemes.\n *\n * Examples:\n *\n *     // normal case, child is sibling\n *     https://foo.com/themes/day.json + images/foo.png -> https://foo.com/themes/images/foo.png\n *\n *     // parent is \"folder\", so child is just located in this folder\n *     https://foo.com/themes/ + images/foo.png -> https://foo.com/themes/images/foo.png\n *\n *     // parent looks like leaf, so last component is stripped\n *     https://foo.com/themes + images/foo.png -> https://foo.com/images/foo.png\n *\n *     // origin-absolute URL, takes only origin from parent\n *     https://foo.com/themes/day.json + /fonts/foo.json -> https://foo.com/fonts/foo.json\n *\n * @param parentUri URI of parent resource\n * @param childUri URI of child as referenced from parent resource\n * @return `childUrl` as if anchored in location of `parentUrl`\n */\nexport function resolveReferenceUri(parentUri: string | undefined, childUri: string): string {\n    if (absoluteUrlWithOriginRe.test(childUri)) {\n        return childUri;\n    } else if (childUri.startsWith(\"/\")) {\n        const origin = getUrlOrigin(parentUri);\n        return origin + childUri;\n    } else {\n        if (childUri.startsWith(\"./\")) {\n            childUri = childUri.substr(2);\n        }\n        const parentBaseUrl = baseUrl(parentUri);\n        return parentBaseUrl + childUri;\n    }\n}\n\nconst absoluteUrlWithOriginRe = new RegExp(\"^(((?:[a-z]+:)?//)|(file:/)|(data:))\", \"i\");\n\n/**\n * Returns base URL of given resource URL.\n *\n * `Url` with trailing slash are considered genuine 'locations', they are returned as is, however if\n * `url` ends with name component it is treated as \"leaf\", so last path component is removed.\n *\n * Standalone files (without any folder structure) are considered relative to `./`.\n *\n * Examples:\n * ```\n *     https://foo.com/themes/a.json -> https://foo.com/themes/\n *     https://foo.com/themes/ -> https://foo.com/themes/\n *     https://foo.com/themes -> https://foo.com/ // note, themes is treated as leaf\n *     themes/day.json -> themes/\n *     themes -> ./\n * ```\n */\nexport function baseUrl(url: string | undefined) {\n    if (url === undefined) {\n        return \"./\";\n    }\n    let idx = url.indexOf(\"#\");\n    if (idx !== -1) {\n        url = url.slice(0, idx);\n    }\n    idx = url.indexOf(\"?\");\n    if (idx !== -1) {\n        url = url.slice(0, idx);\n    }\n    idx = url.lastIndexOf(\"/\");\n    if (idx === -1) {\n        return \"./\";\n    } else {\n        return url.substring(0, idx + 1);\n    }\n}\n\n/**\n * Get `origin` part of URL.\n *\n * @example\n *    https://example.com/foo -> https://example.com\n *    //example.com:8080/ -> //example.com:8080\n *    file:///etc/hosts ->\n *\n * @param url input URL\n * @return origin of given URL\n */\nexport function getUrlOrigin(url: string | undefined): string {\n    if (url === undefined) {\n        return \"\";\n    }\n    const parsed = getUrlHostAndProtocol(url);\n    if (parsed.protocol === \"file:\") {\n        return \"file://\";\n    } else if (parsed.host && parsed.protocol) {\n        return parsed.protocol + \"//\" + parsed.host;\n    } else if (parsed.host) {\n        return \"//\" + parsed.host;\n    } else if (parsed.protocol) {\n        return parsed.protocol + \"//\";\n    } else {\n        return \"\";\n    }\n}\n\n/**\n * Parse `host` and `protocol` part from URL.\n */\nexport function getUrlHostAndProtocol(\n    url: string\n): {\n    protocol: string;\n    host: string;\n} {\n    const urlOriginRe = new RegExp(/^(?:([a-z]+:))?\\/\\/([^\\/]*)/, \"i\");\n\n    const match = url.match(urlOriginRe);\n    if (!match) {\n        throw new Error(`getUrlHostAndProtocol: unable to parse URL '${url}'`);\n    }\n    return {\n        protocol: match[1],\n        host: match[2]\n    };\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { assert } from \"@here/harp-utils\";\nimport { Color } from \"three\";\nimport { ColorUtils } from \"./ColorUtils\";\n\nconst tmpColor = new Color();\n\n/**\n * Enumeration of supported string encoded numerals.\n */\nexport enum StringEncodedNumeralType {\n    Meters,\n    Pixels,\n    Hex,\n    RGB,\n    RGBA,\n    HSL\n}\n\n/**\n * Interface containing information about a [[StringEncodedNumeral]] format, component size and\n * evaluation.\n */\nexport interface StringEncodedNumeralFormat {\n    readonly type: StringEncodedNumeralType;\n    readonly size: number;\n    readonly regExp: RegExp;\n    mask?: number;\n    decoder: (encodedValue: string, target: number[]) => boolean;\n}\nconst StringEncodedMeters: StringEncodedNumeralFormat = {\n    type: StringEncodedNumeralType.Meters,\n    size: 1,\n    regExp: /^((?=\\.\\d|\\d)(?:\\d+)?(?:\\.?\\d*))m$/,\n    decoder: (encodedValue: string, target: number[]) => {\n        const match = StringEncodedMeters.regExp.exec(encodedValue);\n        return match ? (target[0] = Number(match[1])) !== undefined : false;\n    }\n};\nconst StringEncodedPixels: StringEncodedNumeralFormat = {\n    type: StringEncodedNumeralType.Pixels,\n    size: 1,\n    mask: 1.0,\n    regExp: /^((?=\\.\\d|\\d)(?:\\d+)?(?:\\.?\\d*))px$/,\n    decoder: (encodedValue: string, target: number[]) => {\n        const match = StringEncodedPixels.regExp.exec(encodedValue);\n        if (match === null) {\n            return false;\n        }\n        target[0] = Number(match[1]);\n        return true;\n    }\n};\nconst StringEncodedHex: StringEncodedNumeralFormat = {\n    type: StringEncodedNumeralType.Hex,\n    size: 4,\n    regExp: /^\\#((?:[0-9A-Fa-f][0-9A-Fa-f]){3,4}|[0-9A-Fa-f]{3,4})$/,\n    decoder: (encodedValue: string, target: number[]) => {\n        const match = StringEncodedHex.regExp.exec(encodedValue);\n        if (match === null) {\n            return false;\n        }\n        const hex = match[1];\n        const size = hex.length;\n        // Only few sizes are possible for given reg-exp.\n        assert(\n            size === 3 || size === 4 || size === 6 || size === 8,\n            `Matched incorrect hex color format`\n        );\n        // Note that we simply ignore alpha channel value.\n        // TODO: To be resolved with HARP-7517\n        if (size === 3 || size === 4) {\n            // #RGB or #RGBA\n            target[0] = parseInt(hex.charAt(0) + hex.charAt(0), 16) / 255;\n            target[1] = parseInt(hex.charAt(1) + hex.charAt(1), 16) / 255;\n            target[2] = parseInt(hex.charAt(2) + hex.charAt(2), 16) / 255;\n            target[3] = size === 4 ? parseInt(hex.charAt(3) + hex.charAt(3), 16) / 255 : 1;\n        } else if (size === 6 || size === 8) {\n            // #RRGGBB or #RRGGBBAA\n            target[0] = parseInt(hex.charAt(0) + hex.charAt(1), 16) / 255;\n            target[1] = parseInt(hex.charAt(2) + hex.charAt(3), 16) / 255;\n            target[2] = parseInt(hex.charAt(4) + hex.charAt(5), 16) / 255;\n            target[3] = size === 8 ? parseInt(hex.charAt(6) + hex.charAt(7), 16) / 255 : 1;\n        }\n        return true;\n    }\n};\nconst StringEncodedRGB: StringEncodedNumeralFormat = {\n    type: StringEncodedNumeralType.RGB,\n    size: 3,\n    // tslint:disable-next-line:max-line-length\n    regExp: /^rgb\\( ?(?:([0-9]{1,2}|1[0-9]{1,2}|2[0-4][0-9]|25[0-5]), ?)(?:([0-9]{1,2}|1[0-9]{1,2}|2[0-4][0-9]|25[0-5]), ?)(?:([0-9]{1,2}|1[0-9]{1,2}|2[0-4][0-9]|25[0-5])) ?\\)$/,\n    decoder: (encodedValue: string, target: number[]) => {\n        const channels = StringEncodedRGB.regExp.exec(encodedValue);\n        if (channels === null) {\n            return false;\n        }\n        target[0] = parseInt(channels[1], 10) / 255;\n        target[1] = parseInt(channels[2], 10) / 255;\n        target[2] = parseInt(channels[3], 10) / 255;\n        return true;\n    }\n};\nconst StringEncodedRGBA: StringEncodedNumeralFormat = {\n    type: StringEncodedNumeralType.RGBA,\n    size: 4,\n    // tslint:disable-next-line:max-line-length\n    regExp: /^rgba\\( ?(?:([0-9]{1,2}|1[0-9]{1,2}|2[0-4][0-9]|25[0-5]), ?)(?:([0-9]{1,2}|1[0-9]{1,2}|2[0-4][0-9]|25[0-5]), ?)(?:([0-9]{1,2}|1[0-9]{1,2}|2[0-4][0-9]|25[0-5]), ?)(?:(0(?:\\.[0-9]+)?|1(?:\\.0+)?)) ?\\)$/,\n    decoder: (encodedValue: string, target: number[]) => {\n        const channels = StringEncodedRGBA.regExp.exec(encodedValue);\n        if (channels === null) {\n            return false;\n        }\n        target[0] = parseInt(channels[1], 10) / 255;\n        target[1] = parseInt(channels[2], 10) / 255;\n        target[2] = parseInt(channels[3], 10) / 255;\n        target[3] = parseFloat(channels[4]);\n        return true;\n    }\n};\nconst StringEncodedHSL: StringEncodedNumeralFormat = {\n    type: StringEncodedNumeralType.HSL,\n    size: 3,\n    // tslint:disable-next-line:max-line-length\n    regExp: /^hsl\\( ?((?:[0-9]|[1-9][0-9]|1[0-9]{1,2}|2[0-9]{1,2}|3[0-5][0-9]|360)), ?(?:([0-9]|[1-9][0-9]|100)%), ?(?:([0-9]|[1-9][0-9]|100)%) ?\\)$/,\n    decoder: (encodedValue: string, target: number[]) => {\n        const channels = StringEncodedHSL.regExp.exec(encodedValue);\n        if (channels === null) {\n            return false;\n        }\n        tmpColor.setHSL(\n            parseInt(channels[1], 10) / 360,\n            parseInt(channels[2], 10) / 100,\n            parseInt(channels[3], 10) / 100\n        );\n        target[0] = tmpColor.r;\n        target[1] = tmpColor.g;\n        target[2] = tmpColor.b;\n        return true;\n    }\n};\n\n/**\n * Array of all supported [[StringEncodedNumeralFormat]]s describing sizes, lengths and distances.\n */\nexport const StringEncodedMetricFormats: StringEncodedNumeralFormat[] = [\n    StringEncodedMeters,\n    StringEncodedPixels\n];\n\nconst StringEncodedMetricFormatMaxSize = StringEncodedMetricFormats.reduce(\n    (a, b) => Math.max(a, b.size),\n    0\n);\n\n/**\n * Array of all supported [[StringEncodedNumeralFormat]]s describing color data.\n */\nexport const StringEncodedColorFormats: StringEncodedNumeralFormat[] = [\n    StringEncodedHex,\n    StringEncodedRGB,\n    StringEncodedRGBA,\n    StringEncodedHSL\n];\n\nconst StringEncodedColorFormatMaxSize = StringEncodedColorFormats.reduce(\n    (a, b) => Math.max(a, b.size),\n    0\n);\n\n/**\n * Array of supported [[StringEncodedNumeralFormat]]s (intended to be indexed with\n * [[StringEncodedNumeralType]] enum).\n */\nexport const StringEncodedNumeralFormats: StringEncodedNumeralFormat[] = [\n    ...StringEncodedMetricFormats,\n    ...StringEncodedColorFormats\n];\n\nexport const StringEncodedNumeralFormatMaxSize = Math.max(\n    StringEncodedColorFormatMaxSize,\n    StringEncodedMetricFormatMaxSize\n);\n\nconst tmpBuffer: number[] = new Array(StringEncodedNumeralFormatMaxSize);\n\n/**\n * Parse string encoded numeral values using all known [[StringEncodedNumeralFormats]].\n *\n * @param numeral The string representing numeric value.\n * @param pixelToMeters The ratio used to convert from meters to pixels (default 1.0).\n * @returns Number parsed or __undefined__ if non of the numeral patterns matches the expression\n * provided in [[numeral]].\n */\nexport function parseStringEncodedNumeral(\n    numeral: string,\n    pixelToMeters: number = 1.0\n): number | undefined {\n    let result: number | undefined;\n    const formatMatch = (format: StringEncodedNumeralFormat) => {\n        if (format.decoder(numeral, tmpBuffer)) {\n            switch (format.type) {\n                case StringEncodedNumeralType.Meters:\n                    result = tmpBuffer[0];\n                    break;\n                case StringEncodedNumeralType.Pixels:\n                    result = tmpBuffer[0] * pixelToMeters;\n                    break;\n                case StringEncodedNumeralType.Hex:\n                case StringEncodedNumeralType.RGBA:\n                    result = ColorUtils.getHexFromRgba(\n                        tmpBuffer[0],\n                        tmpBuffer[1],\n                        tmpBuffer[2],\n                        tmpBuffer[3]\n                    );\n                    break;\n                case StringEncodedNumeralType.RGB:\n                case StringEncodedNumeralType.HSL:\n                    result = ColorUtils.getHexFromRgb(tmpBuffer[0], tmpBuffer[1], tmpBuffer[2]);\n                    break;\n                default:\n                    result = tmpBuffer[0];\n                    break;\n            }\n            return true;\n        }\n        return false;\n    };\n    StringEncodedNumeralFormats.some(formatMatch);\n    return result;\n}\n\n/**\n * Parse string encoded color value using all known [[StringEncodedColorFormats]].\n *\n * @param color The string encoded color expression (i.e. '#FFF', 'rgb(255, 0, 0)', etc.).\n * @returns The color parsed or __undefined__ if non of the known representations matches\n * the expression provided in [[color]].\n */\nexport function parseStringEncodedColor(color: string): number | undefined {\n    const matchedFormat = matchFormat(StringEncodedColorFormats, color, tmpBuffer);\n    if (matchedFormat === undefined) {\n        return undefined;\n    }\n    switch (matchedFormat.type) {\n        case StringEncodedNumeralType.Hex:\n        case StringEncodedNumeralType.RGBA:\n            return ColorUtils.getHexFromRgba(\n                tmpBuffer[0],\n                tmpBuffer[1],\n                tmpBuffer[2],\n                tmpBuffer[3]\n            );\n        case StringEncodedNumeralType.RGB:\n        case StringEncodedNumeralType.HSL:\n            return ColorUtils.getHexFromRgb(tmpBuffer[0], tmpBuffer[1], tmpBuffer[2]);\n        default:\n            return tmpBuffer[0];\n    }\n}\n\nfunction matchFormat(\n    formats: StringEncodedNumeralFormat[],\n    numeral: string,\n    result: number[]\n): StringEncodedNumeralFormat | undefined {\n    return formats.find(format => {\n        return format.decoder(numeral, result) ? true : false;\n    });\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Vector3Like } from \"@here/harp-geoutils/lib/math/Vector3Like\";\nimport { isJsonExpr, JsonExpr } from \"./Expr\";\nimport { isInterpolatedPropertyDefinition } from \"./InterpolatedPropertyDefs\";\nimport {\n    BaseTechniqueParams,\n    BasicExtrudedLineTechniqueParams,\n    DynamicProperty,\n    ExtrudedPolygonTechniqueParams,\n    FillTechniqueParams,\n    MarkerTechniqueParams,\n    PointTechniqueParams,\n    SegmentsTechniqueParams,\n    ShaderTechniqueParams,\n    SolidLineTechniqueParams,\n    StandardExtrudedLineTechniqueParams,\n    StandardTechniqueParams,\n    TerrainTechniqueParams,\n    TextTechniqueParams\n} from \"./TechniqueParams\";\n\n/**\n * Map theme is used to define what features are shown and how the map is styled, for example\n * which lightning is used or whether fog should be displayed.\n */\nexport interface Theme {\n    /**\n     * The URI of the JSON schema describing themes.\n     */\n    $schema?: string;\n\n    /**\n     * The base `Theme`s or `theme` URLs to extend.\n     *\n     * If used, base themes are loaded first, and then all the properties from inherited theme\n     * overwrite these defined in base theme.\n     */\n    extends?: string | Theme | Array<string | Theme>;\n\n    /**\n     * Actual URL the theme has been loaded from.\n     */\n    url?: string;\n\n    /**\n     * Color to be used as a clear background - no map objects.\n     * @format color-hex\n     */\n    clearColor?: string;\n\n    /**\n     * Alpha to be used as a clear background - no map objects.\n     * @format 0-1\n     */\n    clearAlpha?: number;\n\n    /**\n     * Define the default text style for styling labels and texts.\n     */\n    defaultTextStyle?: TextStyleDefinition;\n\n    /**\n     * Define the lightning available on the three.js scene.\n     */\n    lights?: Light[];\n\n    /**\n     * Define the style of the sky presented in the map scene.\n     */\n    sky?: Sky;\n\n    /**\n     * Define the fog used in the map scene.\n     */\n    fog?: Fog;\n\n    /**\n     * The definitions exported by these theme.\n     */\n    definitions?: Definitions;\n\n    /**\n     * Map styles available for datasources used to render the map.\n     */\n    styles?: Styles;\n\n    /**\n     * Define the style to render different types of text used on the map.\n     */\n    textStyles?: TextStyleDefinition[];\n\n    /**\n     * List available fonts to be used while rendering text.\n     */\n    fontCatalogs?: FontCatalogConfig[];\n\n    /**\n     * Optional images to be rendered on the map view.\n     */\n    images?: ImageDefinitions;\n\n    /**\n     * Image textures to be used while rendering geometries on the map view.\n     */\n    imageTextures?: ImageTexture[];\n\n    /**\n     * Optional list of [[ThemePoiTableDef]]s.\n     */\n    poiTables?: PoiTableRef[];\n\n    /**\n     * Optional list of symbolic priorities for the object\n     * created using this [[Theme]].\n     *\n     * The attribute `styleSet` and `category` of the [[Technique]]\n     * are used together with [[Theme.priorities]] to sort\n     * the objects created using this [[Theme]], for example:\n     *\n     * ```json\n     * {\n     *      \"priorities\": [\n     *          { \"group\": \"tilezen\", \"category\": \"outline-1\" }\n     *      ],\n     *      \"styles\": [\n     *          {\n     *              \"technique\": \"solid-line\",\n     *              \"styleSet\": \"tilezen\",\n     *              \"category\": \"outline-1\"\n     *          }\n     *      ]\n     * }\n     * ```\n     */\n    priorities?: StylePriority[];\n\n    /**\n     * Optional list of priorities for the screen-space\n     * objects created using this style.\n     *\n     * The name of the `category` attribute of the screen-space\n     * technique (e.g. `\"text\"`) must match on the strings\n     * defined by this [[Theme.labelPriorities]], for example:\n     *\n     * ```json\n     * {\n     *      \"labelPriorities\": [\n     *          \"continent-labels\",\n     *          \"country-labels\",\n     *          \"state-labels\"\n     *      ],\n     *      \"styles\": [\n     *          {\n     *              \"technique\": \"text\",\n     *              \"category\": \"state-labels\"\n     *          }\n     *      ]\n     * }\n     * ```\n     */\n    labelPriorities?: string[];\n}\n\n/**\n * A type representing symbolic render orders.\n */\nexport interface StylePriority {\n    /**\n     * The group of this [[StylePriority]].\n     */\n    group: string;\n\n    /**\n     * The category of this [[StylePriority]].\n     */\n    category?: string;\n}\n\n/**\n * A type representing HARP themes with all the styleset declarations\n * grouped in one [[Array]].\n *\n * @internal This type will merge with [[Theme]].\n */\nexport type FlatTheme = Omit<Theme, \"styles\"> & {\n    /**\n     * The style rules used to render the map.\n     */\n    styles?: StyleSet;\n};\n\n/**\n * Checks if the given definition implements the [[BoxedDefinition]] interface.\n */\nexport function isBoxedDefinition(def: Definition): def is BoxedDefinition {\n    const bdef = def as BoxedDefinition;\n    return (\n        typeof bdef === \"object\" &&\n        bdef !== null &&\n        (typeof bdef.type === \"string\" || typeof bdef.type === \"undefined\") &&\n        (typeof bdef.value === \"string\" ||\n            typeof bdef.value === \"number\" ||\n            typeof bdef.value === \"boolean\" ||\n            isInterpolatedPropertyDefinition(bdef.value) ||\n            isJsonExpr(bdef.value))\n    );\n}\n\nexport function isLiteralDefinition(def: Definition): def is LiteralValue {\n    return typeof def === \"string\" || typeof def === \"number\" || typeof def === \"boolean\";\n}\n\n/**\n * Value definition commons.\n */\nexport interface BaseValueDefinition {\n    /**\n     * The type of the definition.\n     */\n    type?: string;\n\n    /**\n     * The description of the definition.\n     */\n    description?: string;\n}\n\n/**\n * Possible types of unboxed literal values carried by [[Definition]].\n */\nexport type LiteralValue = string | number | boolean;\n\n/**\n * Boxed definition without type.\n */\nexport interface BoxedAnyDefinition extends BaseValueDefinition {\n    /**\n     * The value of the definition.\n     */\n    value: LiteralValue | JsonExpr;\n}\n\n/**\n * A boxed boolean value definition.\n */\nexport interface BoxedBooleanDefinition extends BaseValueDefinition {\n    /**\n     * The type of the definition.\n     */\n    type: \"boolean\";\n\n    /**\n     * The value of the definition.\n     */\n    value: DynamicProperty<boolean>;\n}\n\n/**\n * A boxed numerical value definition.\n */\nexport interface BoxedNumericDefinition extends BaseValueDefinition {\n    /**\n     * The type of the definition.\n     */\n    type: \"number\";\n\n    /**\n     * The value of the definition.\n     */\n    value: DynamicProperty<number>;\n}\n\n/**\n * A boxed string value definition.\n */\nexport interface BoxedStringDefinition extends BaseValueDefinition {\n    /**\n     * The type of the definition.\n     */\n    type: \"string\";\n\n    /**\n     * The value of the definition.\n     */\n    value: DynamicProperty<string>;\n}\n\n/**\n * A boxed color value definition.\n */\nexport interface BoxedColorDefinition extends BaseValueDefinition {\n    /**\n     * The type of the definition.\n     */\n    type: \"color\";\n\n    /**\n     * The value of the definition.\n     */\n    value: DynamicProperty<string>;\n}\n\n/**\n * A boxed selector value definition.\n */\nexport interface BoxedSelectorDefinition extends BaseValueDefinition {\n    /**\n     * The type of the definition.\n     */\n    type: \"selector\";\n\n    /**\n     * The value of the definition.\n     *\n     * See [[BaseStyle.when]].\n     */\n    value: string | JsonExpr;\n}\n\n/**\n * A boxed value definition.\n */\nexport type BoxedDefinition =\n    | BoxedAnyDefinition\n    | BoxedBooleanDefinition\n    | BoxedNumericDefinition\n    | BoxedStringDefinition\n    | BoxedColorDefinition\n    | BoxedSelectorDefinition;\n\n/**\n * Possible values for `definitions` element of [Theme].\n */\nexport type Definition = LiteralValue | JsonExpr | BoxedDefinition | StyleDeclaration;\n\n/**\n * An array of [[Definition]]s.\n */\nexport interface Definitions {\n    [name: string]: Definition;\n}\n\n/**\n * Base [StyleSelector] attributes required to match [Style] object against given feature.\n *\n * Contains [Style]'s members related to feature matching in [[StyleSetEvaluator]].\n */\nexport interface StyleSelector {\n    /**\n     * Condition that is applied to feature properties to check if given [[Style]] this feature\n     * should emit geometry of this style.\n     *\n     * Conditions are defined using [[Array]]s describing literals, built-in symbols and function\n     * calls:\n     *  - `[\"has\", string]` returns `true` if the given property exists.\n     *  - `[\"get\", string]` returns the value of the given feature property with the given name.\n     *  - `[\"all\", expressions...]` returns `true` if all the sub expressions evaluate to true.\n     *  - `[\"any\", expressions...]` returns `true` if any sub expression evaluates to true.\n     *  - `[\"in\", expression, [literals...]]` returns `true` if the result of evaluating the first\n     *    expression is included in the given `Array` of literals.\n     *  - `[\"!\", expression]` returns `false` if the sub expression evaluates to `true`.\n     *  - `[\"<\", expression, expression]` returns `true` if the result of evaluating the first\n     *    expression is less than the result of evaluating the second expression.\n     *  - `[\">\", expression, expression]` returns `true` if the result of evaluating the first\n     *    expression is greater than the result of evaluating the second expression.\n     *  - `[\"<=\", expression, expression]` returns `true` if the result of evaluating the first\n     *    expression is less than or equal the result of evaluating the second expression.\n     *  - `[\">=\", expression, expression]` returns `true` if the result of evaluating the first\n     *    expression is greater than or equal the result of evaluating the second expression.\n     *  - `[\"==\", expression, expression]` returns `true` if the result of evaluating the first\n     *    expression is equal the result of evaluating the second expression.\n     *  - `[\"!=\", expression, expression]` returns `true` if the result of evaluating the first\n     *    expression is not equal to the result of evaluating the second expression.\n     *  - `[\"length\", expression]` returns the length of the given expression if it evaluates to\n     *    a `string` or an `Array`; otherwise, returns `undefined`.\n     *  - `[\"~=\", expression, expression]` if the expressions evaluate to `string`, returns `true`\n     *    if the `string` obtained from the first expression contains the `string` obtained from the\n     *    second expression; otherwise, returns `undefined`.\n     *  - `[\"^=\", expression, expression]` if the expressions evaluate to `string`, returns `true`\n     *    if the `string` obtained from the first expression starts with the `string` obtained from\n     *    the second expression; otherwise, returns `undefined`.\n     *  - `[\"$=\", expression, expression]` if the expressions evaluate to `string`, returns `true`\n     *    if the `string` obtained from the first expression ends with the `string` obtained from\n     *    the second expression; otherwise, returns `undefined`.\n     */\n    when: string | JsonExpr;\n\n    /**\n     * The layer containing the carto features processed by this style rule.\n     */\n    layer?: string;\n\n    /**\n     * Optional. If `true`, no more matching styles will be evaluated.\n     */\n    final?: boolean;\n}\n\nexport type JsonExprReference = [\"ref\", string];\n\n/**\n * Checks if the given value is a reference to a definition.\n *\n * @param value The value of a technique property.\n */\nexport function isJsonExprReference(value: any): value is JsonExprReference {\n    return (\n        Array.isArray(value) &&\n        value.length === 2 &&\n        value[0] === \"ref\" &&\n        typeof value[1] === \"string\"\n    );\n}\n\n/**\n * Like [[StyleDeclaration]], but without [[Reference]] type.\n */\nexport type ResolvedStyleDeclaration = Style & StyleSelector;\n\n/**\n * Like [[StyleSet]], but without [[Reference]] type.\n */\nexport type ResolvedStyleSet = ResolvedStyleDeclaration[];\n\n/**\n * Compound type that merges all raw [Style] with selector arguments from [BaseSelector], optionally\n * a [[Reference]].\n */\nexport type StyleDeclaration = (Style & StyleSelector) | JsonExpr;\n\nexport function isActualSelectorDefinition(def: Definition): def is Style & StyleSelector {\n    const styleDef = def as StyleDeclaration;\n    return (\n        typeof styleDef === \"object\" &&\n        styleDef !== null &&\n        !Array.isArray(styleDef) &&\n        typeof styleDef.technique === \"string\"\n    );\n}\n\n/**\n * An array of [[StyleSelector]]s that are used together to define how a [[DataSource]] should be\n * rendered. `StyleSet`s are applied to sources providing vector tiles via their method\n * `setStyleSet`. This is also handle internally when a whole theme is passed to a [[MapView]] via\n * `mapview.theme`.\n */\nexport type StyleSet = StyleDeclaration[];\n\n/**\n * The object that defines what way an item of a [[DataSource]] should be decoded to assemble a\n * tile. [[Style]] is describing which features are shown on a map and in what way they are being\n * shown.\n */\nexport interface BaseStyle {\n    /**\n     * Human readable description.\n     */\n    description?: string;\n\n    /**\n     * The style set referenced by this styling rule.\n     */\n    styleSet?: string;\n\n    /**\n     * The category of this style.\n     */\n    category?: string | JsonExpr;\n\n    /**\n     * Technique name. See the classes extending from this class to determine what possible\n     * techniques are possible, includes `\"line\"`, `\"fill\"`, `\"solid-line\"`, `\"extruded-line\"`,\n     * `\"extruded-polygon\"`, `\"text\"`, `\"none\"`.\n     */\n    technique?: string;\n\n    /**\n     * Specify `renderOrder` of value.\n     *\n     * @default If not specified in style file, `renderOrder` will be assigned with monotonically\n     * increasing values according to style position in file.\n     */\n    renderOrder?: number | JsonExpr;\n\n    /**\n     * Minimal zoom level. If the current zoom level is smaller, the technique will not be used.\n     */\n    minZoomLevel?: number | JsonExpr;\n\n    /**\n     * Maximum zoom level. If the current zoom level is larger, the technique will not be used.\n     */\n    maxZoomLevel?: number | JsonExpr;\n\n    /**\n     * Optional. If `true`, no IDs will be saved for the geometry this style creates. Default is\n     * `false`.\n     */\n    transient?: boolean;\n\n    /**\n     * Optional: If `true`, the objects with matching `when` statement will be printed to the\n     * console.\n     */\n    debug?: boolean;\n\n    // TODO: Make pixel units default.\n    /**\n     * Units in which different size properties are specified. Either `Meter` (default) or `Pixel`.\n     *\n     * @deprecated use \"string encoded numerals\" as documented in TODO, wher eis the doc ?\n     */\n    metricUnit?: \"Meter\" | \"Pixel\";\n\n    /**\n     * XYZ defines the property to display as text label of a feature in the styles.\n     */\n    labelProperty?: string;\n}\n\n/**\n *\n * @defaultSnippets [\n *     {\n *         \"label\": \"New solid-line\",\n *         \"description\": \"Add a new 'solid-line' Styling Rule\",\n *         \"body\": {\n *             \"technique\": \"solid-line\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"color\": \"#${2:fff}\",\n *                 \"lineWidth\": \"^${3:1}\",\n *                 \"secondaryColor\": \"#$4ddd\",\n *                 \"secondaryWidth\": \"^${5:2}\"\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New dashed-line\",\n *         \"description\": \"Add a new 'dashed-line' Styling Rule\",\n *         \"body\": {\n *             \"technique\": \"solid-line\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"color\": \"#${2:fff}\",\n *                 \"lineWidth\": \"^${3:1}\",\n *                 \"gapSize\": \"^${4:10}\",\n *                 \"dashSize\": \"^${5:10}\"\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New fill\",\n *         \"description\": \"Add a new 'fill' Styling Rule\",\n *         \"body\": {\n *             \"technique\": \"fill\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"color\": \"#${2:fff}\",\n *                 \"lineWidth\": \"^${3:0}\"\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New text\",\n *         \"description\": \"Add a new 'text' Styling Rule\",\n *         \"body\": {\n *             \"technique\": \"text\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"size\": \"^${2:24}\",\n *                 \"color\": \"#${3:fff}\"\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New labeled-icon\",\n *         \"description\": \"Add a new 'labeled-icon' marker styling\",\n *         \"body\": {\n *             \"technique\": \"labeled-icon\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"size\": \"^${2:24}\",\n *                 \"color\": \"#${3:fff}\",\n *                 \"backgroundSize\": \"^${4:32}\",\n *                 \"backgroundColor\": \"#${5:aaa}\"\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New line-marker\",\n *         \"description\": \"Add a new 'line-marker' marker styling\",\n *         \"body\": {\n *             \"technique\": \"line-marker\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"size\": \"^${2:24}\",\n *                 \"color\": \"#${3:fff}\",\n *                 \"backgroundSize\": \"^${4:32}\",\n *                 \"backgroundColor\": \"#${5:aaa}\"\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New line\",\n *         \"description\": \"Add a new 'line' Styling Rule\",\n *         \"body\": {\n *             \"technique\": \"line\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"color\": \"#${2:fff}\",\n *                 \"lineWidth\": \"^${3:1}\"\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New segments\",\n *         \"description\": \"Add a new 'segments' Styling Rule\",\n *         \"body\": {\n *             \"technique\": \"segments\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"color\": \"#${2:fff}\",\n *                 \"lineWidth\": \"^${3:1}\"\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New standard\",\n *         \"description\": \"Add a new 'standard' Styling Rule\",\n *         \"body\": {\n *             \"technique\": \"standard\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"color\": \"#${2:fff}\",\n *                 \"roughness\": \"^${3:0.5}\",\n *                 \"metalness\": \"^${4:0.5}\",\n *                 \"emissive\": \"#${5:c44}\",\n *                 \"emissiveIntensity\": \"^${6:0.8}\"\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New extruded-line\",\n *         \"description\": \"Add a new 'extruded-line' Styling Rule\",\n *         \"body\": {\n *             \"technique\": \"extruded-line\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"shading\": \"${2:standard}\",\n *                 \"color\": \"#${3:fff}\",\n *                 \"lineWidth\": \"^${4:1}\",\n *                 \"caps\": \"${5:Circle}\"\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New extruded-polygon\",\n *         \"description\": \"Add a new 'extruded-polygon' Styling Rule\",\n *         \"body\": {\n *             \"technique\": \"extruded-polygon\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"color\": \"#${2:fff}\",\n *                 \"roughness\": \"^${3:0.5}\",\n *                 \"metalness\": \"^${4:0.5}\",\n *                 \"emissive\": \"#${5:c44}\",\n *                 \"emissiveIntensity\": \"^${6:0.8}\",\n *                 \"lineWidth\": \"^${7:1}\",\n *                 \"lineColor\": \"#${8:c0f}\",\n *                 \"defaultHeight\": \"^${9:20}\",\n *                 \"animateExtrusion\": \"^${10:true}\",\n *                 \"animateExtrusionDuration\": \"^${11:300}\"\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New none\",\n *         \"description\": \"Add a new 'none' Styling Rule\",\n *         \"body\": {\n *             \"technique\": \"none\",\n *             \"when\": \"$1\",\n *             \"attr\": {}\n *         }\n *     },\n *     {\n *         \"label\": \"New shader\",\n *         \"description\": \"Add a new 'shader' Styling Rule\",\n *         \"body\": {\n *             \"technique\": \"shader\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"primitive\": \"${2:mesh}\",\n *                 \"params\": {}\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New squares\",\n *         \"description\": \"Add a new 'squares' point styling\",\n *         \"body\": {\n *             \"technique\": \"squares\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"color\": \"#${2:fff}\",\n *                 \"size\": \"^${3:32}\",\n *                 \"texture\": \"${4:url}\",\n *                 \"enablePicking\": \"^${5:true}\"\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New circles\",\n *         \"description\": \"Add a new 'circles' point styling\",\n *         \"body\": {\n *             \"technique\": \"circles\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"color\": \"#${2:fff}\",\n *                 \"size\": \"^${3:32}\",\n *                 \"texture\": \"${4:url}\",\n *                 \"enablePicking\": \"^${5:true}\"\n *             }\n *         }\n *     }\n * ]\n *\n */\nexport type AllStyles =\n    | SquaresStyle\n    | CirclesStyle\n    | PoiStyle\n    | LineMarkerStyle\n    | LineStyle\n    | SegmentsStyle\n    | SolidLineStyle\n    | LabelRejectionLineStyle\n    | FillStyle\n    | StandardStyle\n    | BasicExtrudedLineStyle\n    | StandardExtrudedLineStyle\n    | ExtrudedPolygonStyle\n    | ShaderStyle\n    | TerrainStyle\n    | TextTechniqueStyle\n    | NoneStyle;\n\nexport type Style = AllStyles;\n/**\n * A dictionary of [[StyleSet]]s.\n */\nexport interface Styles {\n    [styleSetName: string]: StyleSet;\n}\n\n/**\n * A reference to a style definition.\n *\n * Use as value `attrs` to reference value from `definitions`.\n *\n * Example of usage:\n * ```json\n * {\n *   \"definitions\": {\n *     \"roadColor\": { \"type\": \"color\", \"value\": \"#f00\" }\n *   },\n *   \"styles\": { \"tilezen\": [\n *      {\n *       \"when\": \"kind == 'road\",\n *       \"technique\": \"solid-line\",\n *       \"attr\": {\n *         \"lineColor\": { \"$ref\": \"roadColor\" }\n *       }\n *     }\n *   ] }\n * }\n * ```\n */\n\n/**\n * The attributes of a technique.\n */\nexport type Attr<T> = { [P in keyof T]?: T[P] | JsonExpr };\n\n/**\n * Render feature as set of squares rendered in screen space.\n *\n * @see [[PointTechniqueParams]].\n */\nexport interface SquaresStyle extends BaseStyle {\n    technique: \"squares\";\n    attr?: Attr<PointTechniqueParams>;\n}\n\n/**\n * Render feature as set of circles rendered in screen space.\n *\n * @see [[PointTechniqueParams]].\n */\nexport interface CirclesStyle extends BaseStyle {\n    technique: \"circles\";\n    attr?: Attr<PointTechniqueParams>;\n}\n\n/**\n * Render feature as POIs (icons and text) rendered in screen space.\n *\n * @see [[MarkerTechniqueParams]].\n */\nexport interface PoiStyle extends BaseStyle {\n    technique: \"labeled-icon\";\n    attr?: Attr<MarkerTechniqueParams>;\n}\n\n/**\n * Render feature as line markers, which is a recurring marker along a line (usually road).\n *\n * @see [[MarkerTechniqueParams]].\n */\nexport interface LineMarkerStyle extends BaseStyle {\n    technique: \"line-marker\";\n    attr?: Attr<MarkerTechniqueParams>;\n}\n\n/**\n * Render feature as line.\n */\nexport interface LineStyle extends BaseStyle {\n    technique: \"line\";\n    secondaryRenderOrder?: number;\n    secondaryCategory?: string;\n    attr?: Attr<MarkerTechniqueParams>;\n}\n\n/**\n * Render feature as segments.\n */\nexport interface SegmentsStyle extends BaseStyle {\n    technique: \"segments\";\n    attr?: Attr<SegmentsTechniqueParams>;\n}\n\nexport interface SolidLineStyle extends BaseStyle {\n    technique: \"solid-line\" | \"dashed-line\";\n    secondaryRenderOrder?: number;\n    secondaryCategory?: string;\n    attr?: Attr<SolidLineTechniqueParams>;\n}\n\nexport interface LabelRejectionLineStyle extends BaseStyle {\n    technique: \"label-rejection-line\";\n    attr?: Attr<BaseTechniqueParams>;\n}\n\nexport interface FillStyle extends BaseStyle {\n    technique: \"fill\";\n    attr?: Attr<FillTechniqueParams>;\n}\n\nexport interface StandardStyle extends BaseStyle {\n    technique: \"standard\";\n    attr?: Attr<StandardTechniqueParams>;\n}\n\nexport interface TerrainStyle extends BaseStyle {\n    technique: \"terrain\";\n    attr?: Attr<TerrainTechniqueParams>;\n}\n\nexport interface BasicExtrudedLineStyle extends BaseStyle {\n    technique: \"extruded-line\";\n    shading?: \"basic\";\n    attr?: Attr<BasicExtrudedLineTechniqueParams>;\n}\n\nexport interface StandardExtrudedLineStyle extends BaseStyle {\n    technique: \"extruded-line\";\n    shading: \"standard\";\n    attr?: Attr<StandardExtrudedLineTechniqueParams>;\n}\n\n/**\n * Style used to draw a geometry as an extruded polygon, for example extruded buildings.\n */\nexport interface ExtrudedPolygonStyle extends BaseStyle {\n    technique: \"extruded-polygon\";\n    attr?: Attr<ExtrudedPolygonTechniqueParams>;\n}\n\nexport interface ShaderStyle extends BaseStyle {\n    technique: \"shader\";\n    attr?: Attr<ShaderTechniqueParams>;\n}\n\nexport interface TextTechniqueStyle extends BaseStyle {\n    technique: \"text\";\n    attr?: Attr<TextTechniqueParams>;\n}\n\nexport interface NoneStyle extends BaseStyle {\n    technique: \"none\";\n    attr?: {\n        [name: string]: any;\n    };\n}\n\n/**\n * Possible lights used for light the map.\n */\nexport type Light = AmbientLight | DirectionalLight;\n\nexport interface BaseLight {\n    type: string;\n    name: string;\n}\n\n/**\n * Light type: ambient.\n * @defaultSnippets [\n *     {\n *         \"label\": \"New Ambient Light\",\n *         \"description\": \"Adds a new Ambient Light\",\n *         \"body\": {\n *             \"type\": \"ambient\",\n *             \"name\": \"${1:ambient light}\",\n *             \"color\": \"#${2:fff}\",\n *             \"intensity\": \"^${3:1}\"\n *         }\n *     }\n * ]\n */\nexport interface AmbientLight extends BaseLight {\n    type: \"ambient\";\n    /**\n     * @format color-hex\n     */\n    color: string;\n    intensity?: number;\n}\n\n/**\n * Light type: directional.\n * @defaultSnippets [\n *     {\n *         \"label\": \"New Directional Light\",\n *         \"description\": \"Adds a new Directional Light\",\n *         \"body\": {\n *             \"type\": \"directional\",\n *             \"name\": \"${1:directional-light$:1}\",\n *             \"color\": \"#${2:fff}\",\n *             \"intensity\": \"^${3:1}\",\n *             \"direction\": {\n *                 \"x\": \"^${4:1}\",\n *                 \"y\": \"^${5:0}\",\n *                 \"z\": \"^${6:0}\"\n *             }\n *         }\n *     }\n * ]\n */\nexport interface DirectionalLight extends BaseLight {\n    type: \"directional\";\n    /**\n     * @format color-hex\n     */\n    color: string;\n    intensity: number;\n    direction: Vector3Like;\n    castShadow?: boolean;\n}\n\n/**\n * Various text styles used with labels and texts.\n */\nexport interface TextStyleDefinition {\n    name?: string;\n    fontCatalogName?: string;\n\n    fontName?: string;\n    size?: number;\n    backgroundSize?: number;\n    fontStyle?: \"Regular\" | \"Bold\" | \"Italic\" | \"BoldItalic\";\n    fontVariant?: \"Regular\" | \"AllCaps\" | \"SmallCaps\";\n    rotation?: number;\n    /**\n     * @format color-hex\n     */\n    color?: string;\n    /**\n     * @format color-hex\n     */\n    backgroundColor?: string;\n    opacity?: number;\n    backgroundOpacity?: number;\n\n    tracking?: number;\n    leading?: number;\n    maxLines?: number;\n    lineWidth?: number;\n    canvasRotation?: number;\n    lineRotation?: number;\n    wrappingMode?: \"None\" | \"Character\" | \"Word\";\n    hAlignment?: \"Left\" | \"Center\" | \"Right\";\n    vAlignment?: \"Above\" | \"Center\" | \"Below\";\n}\n\n/**\n * Interface that defines a procedural gradient sky.\n */\nexport interface GradientSky {\n    /** Sky type. */\n    type: \"gradient\";\n    /**\n     * Color of the upper part of the gradient.\n     * @format color-hex\n     */\n    topColor: string;\n    /**\n     * Color of bottom part of the gradient.\n     * @format color-hex\n     */\n    bottomColor: string;\n    /**\n     * Color of the ground plane.\n     * @format color-hex\n     */\n    groundColor: string;\n    /** Texture's gradient power. */\n    monomialPower?: number;\n}\n\n/**\n * Interface that defines a cubemap sky.\n */\nexport interface CubemapSky {\n    /** Sky type. */\n    type: \"cubemap\";\n    /** Positive X cube map face. */\n    positiveX: string;\n    /** Negative X cube map face. */\n    negativeX: string;\n    /** Positive Y cube map face. */\n    positiveY: string;\n    /** Negative Y cube map face. */\n    negativeY: string;\n    /** Positive Z cube map face. */\n    positiveZ: string;\n    /** Negative Z cube map face. */\n    negativeZ: string;\n}\n\n/**\n * Interface that defines the options to configure the sky.\n */\nexport type Sky = GradientSky | CubemapSky;\n\n/**\n * Interface that defines the options to configure fog.\n */\nexport interface Fog {\n    /** Fog's color. */\n    color: string;\n    /** Distance ratio to far plane at which the linear fog begins. */\n    startRatio: number;\n}\n\n/**\n * Define an image (e.g. icon).\n */\nexport interface ImageDefinition {\n    /** Url to load content from. */\n    url: string;\n    /** `true` to start loading at init tile, `false` to lazily wait until required. */\n    preload: boolean;\n    /** Url of JSON file containing the texture atlas */\n    atlas?: string;\n}\n\nexport interface ImageDefinitions {\n    /** Name of Image. */\n    [name: string]: ImageDefinition;\n}\n\n/**\n * Can be used to create a texture atlas.\n */\nexport interface ImageTexture {\n    /** Name of ImageTexture. Used to reference texture in the styles. */\n    name: string;\n    /** Name of ImageDefinition to use. */\n    image: string;\n    /** Origin of image, defaults to \"topleft\" */\n    origin?: string;\n    /** Specify sub-region: Defaults to 0. */\n    xOffset?: number;\n    /** Specify sub-region: Defaults to 0. */\n    yOffset?: number;\n    /** Specify sub-region:  Defaults to 0, meaning width is taken from loaded image. */\n    width?: number;\n    /** Specify sub-region:  Defaults to 0, meaning height is taken from loaded image. */\n    height?: number;\n    /** Defaults to false. */\n    flipH?: boolean;\n    /** Defaults to false. */\n    flipV?: boolean;\n    /** Defaults to 1. */\n    opacity?: number;\n}\n\n/**\n * Definition for a [[PoiTable]] reference as part of the [[Theme]] object.\n */\nexport interface PoiTableRef {\n    /** Required name of the [[PoiTable]] for later reference. */\n    name: string;\n    /**\n     * Required URL from where to load [[PoiTable]].\n     *\n     * Should refer to JSON that is matched [[PoiTableDef]] interface.\n     */\n    url: string;\n    /**\n     * If set to `true`, the list of values in the field \"altNames\" will be used as names for this\n     * POI.\n     */\n    useAltNamesForKey: boolean;\n}\n\n/**\n * Interface for the JSON description of the [[PoiTable]]. It is being implemented in [[PoiTable]].\n */\nexport interface PoiTableDef {\n    /** Name of the `PoiTable`. Must be unique. */\n    name?: string;\n    /**\n     * Stores the list of [[PoiTableEntry]]s.\n     */\n    poiList?: PoiTableEntryDef[];\n}\n\n/**\n * Interface for the JSON description of the [[PoiTableEntry]]. The interface is being implemented\n * as [[PoiTableEntry]].\n */\nexport interface PoiTableEntryDef {\n    /** Default name of the POI as the key for looking it up. */\n    name?: string;\n    /** Alternative names of the POI. */\n    altNames?: string[];\n    /** Visibility of the POI. If `false`, the POI will not be rendered. */\n    visible?: boolean;\n    /** Name of the icon, defined in the the texture atlases. */\n    iconName?: string;\n    /** Stacking mode of the POI. For future use. */\n    stackMode?: string;\n    /**\n     * Priority of the POI to select the visible set in case there are more POIs than can be\n     * handled.\n     */\n    priority?: number;\n    /** Minimum zoom level to render the icon on. */\n    iconMinLevel?: number;\n    /** Maximum zoom level to render the icon on. */\n    iconMaxLevel?: number;\n    /** Minimum zoom level to render the text label on. */\n    textMinLevel?: number;\n    /** Maximum zoom level to render the text label on. */\n    textMaxLevel?: number;\n}\n\n/**\n * Fonts used for all text related rendering.\n */\nexport interface FontCatalogConfig {\n    url: string;\n    name: string;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    BaseTechniqueParams,\n    BasicExtrudedLineTechniqueParams,\n    ExtrudedPolygonTechniqueParams,\n    FillTechniqueParams,\n    isTextureBuffer,\n    LineTechniqueParams,\n    MarkerTechniqueParams,\n    PointTechniqueParams,\n    PolygonalTechniqueParams,\n    SegmentsTechniqueParams,\n    ShaderTechniqueParams,\n    SolidLineTechniqueParams,\n    StandardExtrudedLineTechniqueParams,\n    StandardTechniqueParams,\n    TerrainTechniqueParams,\n    TextTechniqueParams,\n    TextureCoordinateType\n} from \"./TechniqueParams\";\n\nimport { Expr, JsonExpr } from \"./Expr\";\nimport { InterpolatedPropertyDefinition } from \"./InterpolatedPropertyDefs\";\nimport {\n    AttrScope,\n    mergeTechniqueDescriptor,\n    TechniqueDescriptor,\n    TechniqueDescriptorRegistry\n} from \"./TechniqueDescriptor\";\n/**\n * Names of the supported texture properties.\n */\nexport const TEXTURE_PROPERTY_KEYS = [\n    \"map\",\n    \"normalMap\",\n    \"displacementMap\",\n    \"roughnessMap\",\n    \"emissiveMap\",\n    \"alphaMap\",\n    \"metalnessMap\",\n    \"bumpMap\"\n];\n\n/**\n * Names of the properties controlling transparency.\n */\nexport const TRANSPARENCY_PROPERTY_KEYS = [\"opacity\", \"transparent\"];\n\n// TODO: Can be removed, when all when interpolators are implemented as [[Expr]]s\nexport type RemoveInterpolatedPropDef<T> = T | InterpolatedPropertyDefinition<any> extends T\n    ? Exclude<T, InterpolatedPropertyDefinition<any>>\n    : T;\nexport type RemoveJsonExpr<T> = T | JsonExpr extends T ? Exclude<T, JsonExpr> : T;\n\n/**\n * Make runtime representation of technique attributes from JSON-compatible typings.\n *\n * Translates\n *  - InterpolatedPropertyDefinition -> InterpolatedProperty\n *  - JsonExpr -> Expr\n */\nexport type MakeTechniqueAttrs<T> = {\n    [P in keyof T]: T[P] | JsonExpr extends T[P]\n        ? RemoveInterpolatedPropDef<RemoveJsonExpr<T[P]>> | Expr\n        : T[P];\n};\n\nexport const techniqueDescriptors: TechniqueDescriptorRegistry = {};\n\nexport const baseTechniqueParamsDescriptor: TechniqueDescriptor<BaseTechniqueParams> = {\n    // TODO: Choose which techniques should support color with transparency.\n    // For now we chosen all, but it maybe not suitable for text or line marker techniques.\n    attrTransparencyColor: \"color\",\n    attrScopes: {\n        renderOrder: AttrScope.TechniqueGeometry,\n        enabled: AttrScope.FeatureGeometry,\n        kind: AttrScope.TechniqueGeometry,\n        transient: AttrScope.TechniqueGeometry,\n        fadeFar: AttrScope.TechniqueRendering,\n        fadeNear: AttrScope.TechniqueRendering\n    }\n};\n\nexport const pointTechniquePropTypes = mergeTechniqueDescriptor<PointTechniqueParams>(\n    baseTechniqueParamsDescriptor,\n    {\n        attrScopes: {\n            texture: AttrScope.TechniqueGeometry,\n            enablePicking: AttrScope.TechniqueGeometry,\n            color: AttrScope.TechniqueRendering,\n            transparent: AttrScope.TechniqueRendering,\n            opacity: AttrScope.TechniqueGeometry\n        }\n    }\n);\n\n/**\n * Runtime representation of [[SquaresStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[PointTechniqueParams]].\n */\nexport interface SquaresTechnique extends MakeTechniqueAttrs<PointTechniqueParams> {\n    name: \"squares\";\n}\n\nexport const squaresTechniquePropTypes = mergeTechniqueDescriptor<SquaresTechnique>(\n    baseTechniqueParamsDescriptor,\n    pointTechniquePropTypes\n);\ntechniqueDescriptors.squares = squaresTechniquePropTypes;\n\n/**\n * Runtime representation of [[CirclesStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[PointTechniqueParams]].\n */\nexport interface CirclesTechnique extends MakeTechniqueAttrs<PointTechniqueParams> {\n    name: \"circles\";\n}\n\nexport const circlesTechniquePropTypes = mergeTechniqueDescriptor<CirclesTechnique>(\n    baseTechniqueParamsDescriptor,\n    pointTechniquePropTypes\n);\ntechniqueDescriptors.circles = circlesTechniquePropTypes;\n\n/**\n * Runtime representation of [[PoiStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[MarkerTechniqueParams]].\n */\nexport interface PoiTechnique extends MakeTechniqueAttrs<MarkerTechniqueParams> {\n    name: \"labeled-icon\";\n}\n\n/**\n * Runtime representation of [[LineMarkerStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[MarkerTechniqueParams]].\n */\nexport interface LineMarkerTechnique extends MakeTechniqueAttrs<MarkerTechniqueParams> {\n    name: \"line-marker\";\n}\n\nconst lineMarkerTechniquePropTypes = mergeTechniqueDescriptor<LineMarkerTechnique>(\n    baseTechniqueParamsDescriptor,\n    {\n        attrScopes: {\n            text: AttrScope.FeatureGeometry,\n            label: AttrScope.FeatureGeometry,\n            useAbbreviation: AttrScope.FeatureGeometry,\n            useIsoCode: AttrScope.FeatureGeometry,\n            priority: AttrScope.TechniqueGeometry,\n            textMinZoomLevel: AttrScope.TechniqueGeometry,\n            textMaxZoomLevel: AttrScope.TechniqueGeometry,\n            iconMinZoomLevel: AttrScope.TechniqueGeometry,\n            iconMaxZoomLevel: AttrScope.TechniqueGeometry,\n            distanceScale: AttrScope.TechniqueGeometry,\n            textMayOverlap: AttrScope.TechniqueGeometry,\n            iconMayOverlap: AttrScope.TechniqueGeometry,\n            textReserveSpace: AttrScope.TechniqueGeometry,\n            iconReserveSpace: AttrScope.TechniqueGeometry,\n            renderTextDuringMovements: AttrScope.TechniqueGeometry,\n            alwaysOnTop: AttrScope.TechniqueGeometry,\n            textIsOptional: AttrScope.TechniqueGeometry,\n            showOnMap: AttrScope.TechniqueGeometry,\n            stackMode: AttrScope.TechniqueGeometry,\n            minDistance: AttrScope.TechniqueGeometry,\n            iconIsOptional: AttrScope.TechniqueGeometry,\n            iconFadeTime: AttrScope.TechniqueGeometry,\n            textFadeTime: AttrScope.TechniqueGeometry,\n            xOffset: AttrScope.TechniqueGeometry,\n            yOffset: AttrScope.TechniqueGeometry,\n            iconXOffset: AttrScope.TechniqueGeometry,\n            iconYOffset: AttrScope.TechniqueGeometry,\n            iconScale: AttrScope.TechniqueGeometry,\n            screenHeight: AttrScope.TechniqueGeometry,\n            screenWidth: AttrScope.TechniqueGeometry,\n            poiTable: AttrScope.TechniqueGeometry,\n            poiName: AttrScope.FeatureGeometry,\n            poiNameField: AttrScope.TechniqueGeometry,\n            imageTexture: AttrScope.FeatureGeometry,\n            imageTextureField: AttrScope.TechniqueGeometry,\n            imageTexturePrefix: AttrScope.TechniqueGeometry,\n            imageTexturePostfix: AttrScope.TechniqueGeometry,\n            style: AttrScope.TechniqueGeometry,\n            fontName: AttrScope.TechniqueGeometry,\n            fontStyle: AttrScope.TechniqueGeometry,\n            fontVariant: AttrScope.TechniqueGeometry,\n            rotation: AttrScope.TechniqueGeometry,\n            tracking: AttrScope.TechniqueGeometry,\n            leading: AttrScope.TechniqueGeometry,\n            maxLines: AttrScope.TechniqueGeometry,\n            lineWidth: AttrScope.TechniqueGeometry,\n            canvasRotation: AttrScope.TechniqueGeometry,\n            lineRotation: AttrScope.TechniqueGeometry,\n            wrappingMode: AttrScope.TechniqueGeometry,\n            hAlignment: AttrScope.TechniqueGeometry,\n            vAlignment: AttrScope.TechniqueGeometry,\n            backgroundColor: AttrScope.TechniqueRendering,\n            backgroundSize: AttrScope.TechniqueRendering,\n            backgroundOpacity: AttrScope.TechniqueRendering,\n            color: AttrScope.TechniqueRendering,\n            opacity: AttrScope.TechniqueRendering,\n            size: AttrScope.TechniqueRendering\n        }\n    }\n);\ntechniqueDescriptors[\"line-marker\"] = lineMarkerTechniquePropTypes;\ntechniqueDescriptors[\"labeled-icon\"] = lineMarkerTechniquePropTypes;\n\n/**\n * Runtime representation of [[SegmentsStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[SegmentsTechniqueParams]].\n */\nexport interface SegmentsTechnique extends MakeTechniqueAttrs<SegmentsTechniqueParams> {\n    name: \"segments\";\n}\n\nconst polygonalTechniqueDescriptor: TechniqueDescriptor<PolygonalTechniqueParams> = {\n    attrScopes: {\n        polygonOffset: AttrScope.TechniqueRendering,\n        polygonOffsetFactor: AttrScope.TechniqueRendering,\n        polygonOffsetUnits: AttrScope.TechniqueRendering,\n        lineColor: AttrScope.TechniqueRendering,\n        lineFadeFar: AttrScope.TechniqueRendering,\n        lineFadeNear: AttrScope.TechniqueRendering\n    }\n};\n/**\n * Runtime representation of [[BasicExtrudedLineStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[BasicExtrudedLineTechniqueParams]].\n */\nexport interface BasicExtrudedLineTechnique\n    extends MakeTechniqueAttrs<BasicExtrudedLineTechniqueParams> {\n    name: \"extruded-line\";\n}\n\n/**\n * Runtime representation of [[StandardExtrudedLineStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[StandardExtrudedLineTechniqueParams]].\n */\nexport interface StandardExtrudedLineTechnique\n    extends MakeTechniqueAttrs<StandardExtrudedLineTechniqueParams> {\n    name: \"extruded-line\";\n}\n\n/**\n * Runtime representation of [[SolidLineStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[SolidLineTechniqueParams]].\n */\nexport interface SolidLineTechnique extends MakeTechniqueAttrs<SolidLineTechniqueParams> {\n    name: \"solid-line\" | \"dashed-line\";\n}\n\nexport const solidLineTechniqueDescriptor = mergeTechniqueDescriptor<SolidLineTechnique>(\n    baseTechniqueParamsDescriptor,\n    polygonalTechniqueDescriptor,\n    {\n        attrScopes: {\n            clipping: AttrScope.TechniqueGeometry,\n            secondaryRenderOrder: AttrScope.TechniqueGeometry,\n            color: AttrScope.TechniqueRendering,\n            opacity: AttrScope.TechniqueRendering,\n            transparent: AttrScope.TechniqueRendering,\n            lineWidth: AttrScope.TechniqueRendering,\n            secondaryWidth: AttrScope.TechniqueRendering,\n            secondaryColor: AttrScope.TechniqueRendering,\n            dashSize: AttrScope.TechniqueRendering,\n            gapSize: AttrScope.TechniqueRendering\n        }\n    }\n);\ntechniqueDescriptors[\"solid-line\"] = solidLineTechniqueDescriptor;\n// TODO: Remove deprecated \"dashed-line\" support in future releases.\ntechniqueDescriptors[\"dashed-line\"] = solidLineTechniqueDescriptor;\n\n/**\n * Runtime representation of [[LineStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[LineTechniqueParams]].\n */\nexport interface LineTechnique extends MakeTechniqueAttrs<LineTechniqueParams> {\n    name: \"line\";\n}\n\nexport const lineTechniqueDescriptor = mergeTechniqueDescriptor<LineTechnique>(\n    baseTechniqueParamsDescriptor,\n    {\n        attrScopes: {\n            // TODO, check, which are really dynamic !\n            color: AttrScope.TechniqueRendering,\n            opacity: AttrScope.TechniqueRendering,\n            transparent: AttrScope.TechniqueRendering,\n            lineWidth: AttrScope.FeatureGeometry\n        }\n    }\n);\n\ntechniqueDescriptors.line = lineTechniqueDescriptor;\n\n/**\n * Runtime representation of [[FillStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[FillTechniqueParams]].\n */\nexport interface FillTechnique extends MakeTechniqueAttrs<FillTechniqueParams> {\n    name: \"fill\";\n}\n\nconst fillTechniqueDescriptor = mergeTechniqueDescriptor<FillTechnique>(\n    baseTechniqueParamsDescriptor,\n    polygonalTechniqueDescriptor,\n    {\n        attrScopes: {\n            color: AttrScope.TechniqueRendering,\n            opacity: AttrScope.TechniqueRendering,\n            transparent: AttrScope.TechniqueRendering,\n            lineWidth: AttrScope.TechniqueRendering\n        }\n    }\n);\ntechniqueDescriptors.fill = fillTechniqueDescriptor;\n\n/**\n * Technique used to render a mesh geometry.\n * For technique parameters see [[StandardTechniqueParams]].\n */\nexport interface StandardTechnique extends MakeTechniqueAttrs<StandardTechniqueParams> {\n    name: \"standard\";\n}\nconst standardTechniqueDescriptor = mergeTechniqueDescriptor<StandardTechnique>(\n    baseTechniqueParamsDescriptor,\n    {\n        attrScopes: {\n            color: AttrScope.FeatureGeometry,\n            vertexColors: AttrScope.FeatureGeometry,\n            wireframe: AttrScope.TechniqueRendering,\n            roughness: AttrScope.TechniqueRendering,\n            metalness: AttrScope.TechniqueRendering,\n            alphaTest: AttrScope.TechniqueRendering,\n            depthTest: AttrScope.TechniqueRendering,\n            transparent: AttrScope.TechniqueRendering,\n            opacity: AttrScope.TechniqueRendering,\n            emissive: AttrScope.TechniqueRendering,\n            emissiveIntensity: AttrScope.TechniqueRendering,\n            refractionRatio: AttrScope.TechniqueRendering,\n            map: AttrScope.TechniqueGeometry,\n            mapProperties: AttrScope.TechniqueGeometry,\n            normalMap: AttrScope.TechniqueGeometry,\n            normalMapProperties: AttrScope.TechniqueGeometry,\n            displacementMap: AttrScope.TechniqueGeometry,\n            displacementMapProperties: AttrScope.TechniqueGeometry,\n            roughnessMap: AttrScope.TechniqueGeometry,\n            roughnessMapProperties: AttrScope.TechniqueGeometry,\n            emissiveMap: AttrScope.TechniqueGeometry,\n            emissiveMapProperties: AttrScope.TechniqueGeometry,\n            bumpMap: AttrScope.TechniqueGeometry,\n            bumpMapProperties: AttrScope.TechniqueGeometry,\n            metalnessMap: AttrScope.TechniqueGeometry,\n            metalnessMapProperties: AttrScope.TechniqueGeometry,\n            alphaMap: AttrScope.TechniqueGeometry,\n            alphaMapProperties: AttrScope.TechniqueGeometry\n        }\n    }\n);\ntechniqueDescriptors.standard = standardTechniqueDescriptor;\n\n/**\n * Runtime representation of [[ExtrudedPolygonStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[ExtrudedPolygonTechniqueParams]].\n */\nexport interface ExtrudedPolygonTechnique\n    extends MakeTechniqueAttrs<ExtrudedPolygonTechniqueParams> {\n    name: \"extruded-polygon\";\n}\n\nconst extrudedPolygonTechniqueDescriptor = mergeTechniqueDescriptor<ExtrudedPolygonTechnique>(\n    baseTechniqueParamsDescriptor,\n    standardTechniqueDescriptor,\n    {\n        attrScopes: {\n            height: AttrScope.FeatureGeometry,\n            floorHeight: AttrScope.FeatureGeometry,\n            color: AttrScope.FeatureGeometry,\n            defaultColor: AttrScope.FeatureGeometry,\n            defaultHeight: AttrScope.FeatureGeometry,\n            constantHeight: AttrScope.FeatureGeometry,\n            boundaryWalls: AttrScope.FeatureGeometry,\n            footprint: AttrScope.FeatureGeometry,\n            maxSlope: AttrScope.FeatureGeometry,\n            enableDepthPrePass: AttrScope.TechniqueGeometry,\n            animateExtrusionDuration: AttrScope.TechniqueGeometry,\n            animateExtrusion: AttrScope.TechniqueRendering,\n            opacity: AttrScope.TechniqueRendering,\n            transparent: AttrScope.TechniqueRendering,\n            lineWidth: AttrScope.TechniqueRendering,\n            lineFadeNear: AttrScope.TechniqueRendering,\n            lineFadeFar: AttrScope.TechniqueRendering,\n            lineColorMix: AttrScope.TechniqueGeometry,\n            lineColor: AttrScope.TechniqueRendering\n        }\n    }\n);\ntechniqueDescriptors[\"extruded-polygon\"] = extrudedPolygonTechniqueDescriptor;\n/**\n * Runtime representation of [[TextStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[TextTechniqueParams]].\n */\nexport interface TextTechnique extends MakeTechniqueAttrs<TextTechniqueParams> {\n    name: \"text\";\n}\n\nconst textTechniqueDescriptor = mergeTechniqueDescriptor<TextTechnique>(\n    baseTechniqueParamsDescriptor,\n    {\n        attrScopes: {\n            text: AttrScope.FeatureGeometry,\n            label: AttrScope.FeatureGeometry,\n            useAbbreviation: AttrScope.FeatureGeometry,\n            useIsoCode: AttrScope.FeatureGeometry,\n\n            minZoomLevel: AttrScope.TechniqueGeometry,\n            maxZoomLevel: AttrScope.TechniqueGeometry,\n            distanceScale: AttrScope.TechniqueGeometry,\n            mayOverlap: AttrScope.TechniqueGeometry,\n            reserveSpace: AttrScope.TechniqueGeometry,\n            textFadeTime: AttrScope.TechniqueGeometry,\n            xOffset: AttrScope.TechniqueGeometry,\n            yOffset: AttrScope.TechniqueGeometry,\n            style: AttrScope.TechniqueGeometry,\n            fontName: AttrScope.TechniqueGeometry,\n            fontStyle: AttrScope.TechniqueGeometry,\n            fontVariant: AttrScope.TechniqueGeometry,\n            rotation: AttrScope.TechniqueGeometry,\n            tracking: AttrScope.TechniqueGeometry,\n            leading: AttrScope.TechniqueGeometry,\n            maxLines: AttrScope.TechniqueGeometry,\n            lineWidth: AttrScope.TechniqueGeometry,\n            canvasRotation: AttrScope.TechniqueGeometry,\n            lineRotation: AttrScope.TechniqueGeometry,\n            wrappingMode: AttrScope.TechniqueGeometry,\n            hAlignment: AttrScope.TechniqueGeometry,\n            vAlignment: AttrScope.TechniqueGeometry,\n            backgroundColor: AttrScope.TechniqueRendering,\n            backgroundSize: AttrScope.TechniqueRendering,\n            backgroundOpacity: AttrScope.TechniqueRendering,\n            color: AttrScope.TechniqueRendering,\n            opacity: AttrScope.TechniqueRendering,\n            priority: AttrScope.TechniqueRendering,\n            size: AttrScope.TechniqueRendering\n        }\n    }\n);\ntechniqueDescriptors.text = textTechniqueDescriptor;\n\n/**\n * Special technique for user-defined shaders.\n * For technique parameters see [[ShaderTechniqueParams]].\n */\nexport interface ShaderTechnique extends MakeTechniqueAttrs<ShaderTechniqueParams> {\n    name: \"shader\";\n}\n\nconst shaderTechniqueDescriptor = mergeTechniqueDescriptor<ShaderTechnique>(\n    baseTechniqueParamsDescriptor,\n    {\n        attrScopes: {\n            primitive: AttrScope.TechniqueGeometry,\n            params: AttrScope.TechniqueRendering\n        }\n    }\n);\n\ntechniqueDescriptors.shader = shaderTechniqueDescriptor;\n\n/**\n * Technique used to render a terrain geometry with textures.\n * For technique parameters see [[TerrainTechniqueParams]].\n */\nexport interface TerrainTechnique extends MakeTechniqueAttrs<TerrainTechniqueParams> {\n    name: \"terrain\";\n}\n\n/**\n * Technique to avoid label rendering on top of certain line geometries.\n * For technique parameters see [[BaseTechniqueParams]].\n */\nexport interface LabelRejectionLineTechnique extends MakeTechniqueAttrs<BaseTechniqueParams> {\n    name: \"label-rejection-line\";\n}\n\n/**\n * Possible techniques that can be used to draw a geometry on the map.\n */\nexport type Technique =\n    | SquaresTechnique\n    | CirclesTechnique\n    | PoiTechnique\n    | LineMarkerTechnique\n    | LineTechnique\n    | SegmentsTechnique\n    | SolidLineTechnique\n    | FillTechnique\n    | StandardTechnique\n    | TerrainTechnique\n    | BasicExtrudedLineTechnique\n    | StandardExtrudedLineTechnique\n    | ExtrudedPolygonTechnique\n    | ShaderTechnique\n    | TextTechnique\n    | LabelRejectionLineTechnique;\n\n/**\n * Additional params used for optimized usage of `Techniques`.\n */\nexport interface IndexedTechniqueParams {\n    /**\n     * Optimization: Index into table in [[StyleSetEvaluator]] or in [[DecodedTile]].\n     * @hidden\n     */\n    _index: number;\n\n    /**\n     * Optimization: Unique [[Technique]] index of [[Style]] from which technique was derived.\n     * @hidden\n     */\n    _styleSetIndex: number;\n\n    /**\n     * The styleSet associated to this [[Technique]].\n     * @hidden\n     */\n    _styleSet?: string;\n\n    /**\n     * The category used to assign render orders to objects created using this [[Technique]].\n     * @hidden\n     */\n    _category?: string;\n\n    /**\n     * The category used to assign render orders to secondary objects\n     * created using this [[Technique]].\n     * @hidden\n     */\n    _secondaryCategory?: string;\n\n    /**\n     * `true` if any of the properties of this technique needs to access\n     * the feature's state.\n     *\n     * @hidden\n     */\n    _usesFeatureState?: boolean;\n\n    /**\n     * Last computed state derived from [[Technique.kind]].\n     */\n    _kindState?: boolean;\n}\n\n/**\n * For efficiency, [[StyleSetEvaluator]] returns [[Techniques]] additional params as defined in\n * [[IndexedTechniqueParams]].\n */\nexport type IndexedTechnique = Technique & IndexedTechniqueParams;\n\n/**\n * Type guard to check if an object is an instance of [[CirclesTechnique]].\n */\nexport function isCirclesTechnique(technique: Technique): technique is CirclesTechnique {\n    return technique.name === \"circles\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[SquaresTechnique]].\n */\nexport function isSquaresTechnique(technique: Technique): technique is SquaresTechnique {\n    return technique.name === \"squares\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[PoiTechnique]].\n */\nexport function isPoiTechnique(technique: Technique): technique is PoiTechnique {\n    return technique.name === \"labeled-icon\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[LineMarkerTechnique]].\n */\nexport function isLineMarkerTechnique(technique: Technique): technique is LineMarkerTechnique {\n    return technique.name === \"line-marker\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[LineTechnique]].\n */\nexport function isLineTechnique(technique: Technique): technique is LineTechnique {\n    return technique.name === \"line\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[SolidLineTechnique]].\n */\nexport function isSolidLineTechnique(technique: Technique): technique is SolidLineTechnique {\n    return technique.name === \"solid-line\" || technique.name === \"dashed-line\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[SolidLineTechnique]] and is a kind that\n * has special dashes.\n * @note Lines with special dashes need line caps to render properly.\n */\nexport function isSpecialDashesLineTechnique(\n    technique: Technique\n): technique is SolidLineTechnique {\n    return (\n        (technique.name === \"solid-line\" || technique.name === \"dashed-line\") &&\n        technique.dashes !== undefined &&\n        technique.dashes !== \"Square\"\n    );\n}\n\n/**\n * Type guard to check if an object is an instance of [[SegmentsTechnique]].\n */\nexport function isSegmentsTechnique(technique: Technique): technique is SegmentsTechnique {\n    return technique.name === \"segments\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[BasicExtrudedLineTechnique]]\n * or [[StandardExtrudedLineTechnique]].\n */\nexport function isExtrudedLineTechnique(\n    technique: Technique\n): technique is BasicExtrudedLineTechnique | StandardExtrudedLineTechnique {\n    return technique.name === \"extruded-line\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[BasicExtrudedLineTechnique]].\n */\nexport function isBasicExtrudedLineTechnique(\n    technique: Technique\n): technique is BasicExtrudedLineTechnique {\n    return isExtrudedLineTechnique(technique) && technique.shading === \"basic\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[StandardExtrudedLineTechnique]].\n */\nexport function isStandardExtrudedLineTechnique(\n    technique: Technique\n): technique is StandardExtrudedLineTechnique {\n    return isExtrudedLineTechnique(technique) && technique.shading === \"standard\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[FillTechnique]].\n */\nexport function isFillTechnique(technique: Technique): technique is FillTechnique {\n    return technique.name === \"fill\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[ExtrudedPolygonTechnique]].\n */\nexport function isExtrudedPolygonTechnique(\n    technique: Technique\n): technique is ExtrudedPolygonTechnique {\n    return technique.name === \"extruded-polygon\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[StandardTechnique]].\n */\nexport function isStandardTechnique(technique: Technique): technique is StandardTechnique {\n    return technique.name === \"standard\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[TerrainTechnique]].\n */\nexport function isTerrainTechnique(technique: Technique): technique is TerrainTechnique {\n    return technique.name === \"terrain\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[TextTechnique]].\n */\nexport function isTextTechnique(technique: Technique): technique is TextTechnique {\n    return technique.name === \"text\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[ShaderTechnique]].\n */\nexport function isShaderTechnique(technique: Technique): technique is ShaderTechnique {\n    return technique.name === \"shader\";\n}\n\nexport function isLabelRejectionLineTechnique(\n    technique: Technique\n): technique is LabelRejectionLineTechnique {\n    return technique.name === \"label-rejection-line\";\n}\n\n/**\n * Check if vertex normals should be generated for this technique (if no normals are in the data).\n * @param technique Technique to check.\n */\nexport function needsVertexNormals(technique: Technique): boolean {\n    return (\n        isFillTechnique(technique) ||\n        isStandardTechnique(technique) ||\n        isTerrainTechnique(technique) ||\n        isStandardExtrudedLineTechnique(technique)\n    );\n}\n\n/**\n * Get the texture coordinate type if the technique supports it.\n */\nexport function textureCoordinateType(technique: Technique): TextureCoordinateType | undefined {\n    if (isStandardTechnique(technique)) {\n        return technique.textureCoordinateType;\n    } else if (isExtrudedPolygonTechnique(technique)) {\n        return technique.textureCoordinateType;\n    } else if (isTerrainTechnique(technique)) {\n        return technique.textureCoordinateType;\n    } else {\n        return undefined;\n    }\n}\n\n/**\n * Add all the buffers of the technique to the transfer list.\n */\nexport function addBuffersToTransferList(technique: Technique, transferList: ArrayBuffer[]) {\n    if (\n        isStandardTechnique(technique) ||\n        isExtrudedPolygonTechnique(technique) ||\n        isTerrainTechnique(technique)\n    ) {\n        for (const texturePropertyKey of TEXTURE_PROPERTY_KEYS) {\n            const textureProperty = (technique as any)[texturePropertyKey];\n            if (isTextureBuffer(textureProperty)) {\n                if (textureProperty.buffer instanceof ArrayBuffer) {\n                    transferList.push(textureProperty.buffer);\n                }\n            }\n        }\n    }\n}\n\n/**\n * Compose full texture name for given image name with technique specified.\n * Some techniques allows to add prefix/postfix to icons names specified, this\n * function uses technique information to create fully qualified texture name.\n * @param imageName base name of the marker icon.\n * @param technique the technique describing POI or line marker.\n * @returns fully qualified texture name for loading from atlas (without extension).\n */\nexport function composeTechniqueTextureName(\n    imageName: string,\n    technique: PoiTechnique | LineMarkerTechnique\n): string {\n    let textureName = imageName;\n    if (typeof technique.imageTexturePrefix === \"string\") {\n        textureName = technique.imageTexturePrefix + textureName;\n    }\n    if (typeof technique.imageTexturePostfix === \"string\") {\n        textureName = textureName + technique.imageTexturePostfix;\n    }\n    return textureName;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from \"./lib/StyleSetEvaluator\";\nexport * from \"./lib/Extruder\";\nexport * from \"./lib/IMeshBuffers\";\nexport * from \"./lib/Outliner\";\nexport * from \"./lib/Expr\";\nexport * from \"./lib/ThreeBufferUtils\";\nexport * from \"./lib/GeoJsonDataType\";\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    DecodedTile,\n    Definitions,\n    GeometryKind,\n    IndexedTechnique,\n    OptionsMap,\n    StyleSet\n} from \"@here/harp-datasource-protocol\";\nimport { MapEnv, StyleSetEvaluator } from \"@here/harp-datasource-protocol/index-decoder\";\nimport { Projection, TileKey } from \"@here/harp-geoutils\";\nimport {\n    ThemedTileDecoder,\n    TileDecoderService,\n    WorkerServiceManager\n} from \"@here/harp-mapview-decoder/index-worker\";\nimport { LoggerManager, PerformanceTimer } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\n// tslint:disable-next-line:max-line-length\nimport { AttrEvaluationContext } from \"@here/harp-datasource-protocol/lib/TechniqueAttr\";\nimport { DecodeInfo } from \"./DecodeInfo\";\nimport { IGeometryProcessor, ILineGeometry, IPolygonGeometry } from \"./IGeometryProcessor\";\nimport { OmvProtobufDataAdapter } from \"./OmvData\";\nimport {\n    ComposedDataFilter,\n    OmvFeatureFilter,\n    OmvFeatureModifier,\n    OmvGenericFeatureFilter,\n    OmvGenericFeatureModifier\n} from \"./OmvDataFilter\";\nimport { OmvDecodedTileEmitter } from \"./OmvDecodedTileEmitter\";\nimport {\n    FeatureModifierId,\n    OMV_TILE_DECODER_SERVICE_TYPE,\n    OmvDecoderOptions,\n    OmvFeatureFilterDescription\n} from \"./OmvDecoderDefs\";\nimport { OmvTomTomFeatureModifier } from \"./OmvTomTomFeatureModifier\";\nimport { StyleSetDataFilter } from \"./StyleSetDataFilter\";\nimport { TiledGeoJsonDataAdapter } from \"./TiledGeoJsonAdapter\";\nimport { VTJsonDataAdapter } from \"./VTJsonDataAdapter\";\n\nconst logger = LoggerManager.instance.create(\"OmvDecoder\", { enabled: false });\n\nexport class Ring {\n    readonly winding: boolean;\n\n    /**\n     * Constructs a new [[Ring]].\n     *\n     * @param extents The extents of the enclosing layer.\n     * @param vertexStride The stride of this elements stored in 'contour'.\n     * @param contour The [[Array]] containing the projected world coordinates.\n     */\n    constructor(\n        readonly extents: number,\n        readonly vertexStride: number,\n        readonly contour: number[]\n    ) {\n        this.winding = this.area() < 0;\n    }\n\n    area(): number {\n        const points = this.contour;\n        const stride = this.vertexStride;\n        const n = points.length / stride;\n\n        let area = 0.0;\n\n        for (let p = n - 1, q = 0; q < n; p = q++) {\n            area +=\n                points[p * stride] * points[q * stride + 1] -\n                points[q * stride] * points[p * stride + 1];\n        }\n\n        return area / 2;\n    }\n}\n\nexport interface IOmvEmitter {\n    processPointFeature(\n        layer: string,\n        extents: number,\n        geometry: THREE.Vector2[],\n        context: AttrEvaluationContext,\n        techniques: IndexedTechnique[],\n        featureId: number | undefined\n    ): void;\n\n    processLineFeature(\n        layer: string,\n        extents: number,\n        feature: ILineGeometry[],\n        context: AttrEvaluationContext,\n        techniques: IndexedTechnique[],\n        featureId: number | undefined\n    ): void;\n\n    processPolygonFeature(\n        layer: string,\n        extents: number,\n        feature: IPolygonGeometry[],\n        context: AttrEvaluationContext,\n        techniques: IndexedTechnique[],\n        featureId: number | undefined\n    ): void;\n}\n\n/**\n * The class [[OmvDataAdapter]] prepares protobuf encoded OMV data so they\n * can be processed by [[OmvDecoder]].\n */\nexport interface OmvDataAdapter {\n    /**\n     * OmvDataAdapter's id.\n     */\n    id: string;\n\n    /**\n     * Checks if the given data can be processed by this OmvDataAdapter.\n     *\n     * @param data The raw data to adapt.\n     */\n    canProcess(data: ArrayBufferLike | {}): boolean;\n\n    /**\n     * Process the given raw data.\n     *\n     * @param data The raw data to process.\n     * @param decodeInfo The [[DecodeInfo]] of the tile to process.\n     */\n    process(data: ArrayBufferLike | {}, decodeInfo: DecodeInfo): void;\n}\n\nexport class OmvDecoder implements IGeometryProcessor {\n    // The emitter is optional now.\n    // TODO: Add option to control emitter generation.\n    private m_decodedTileEmitter: OmvDecodedTileEmitter | undefined;\n    private readonly m_dataAdapters: OmvDataAdapter[] = [];\n\n    constructor(\n        private readonly m_projection: Projection,\n        private readonly m_styleSetEvaluator: StyleSetEvaluator,\n        private readonly m_showMissingTechniques: boolean,\n        private readonly m_dataFilter?: OmvFeatureFilter,\n        private readonly m_featureModifier?: OmvFeatureModifier,\n        private readonly m_gatherFeatureAttributes = false,\n        private readonly m_skipShortLabels = true,\n        private readonly m_storageLevelOffset = 0,\n        private readonly m_enableElevationOverlay = false,\n        private readonly m_languages?: string[]\n    ) {\n        const styleSetDataFilter = new StyleSetDataFilter(m_styleSetEvaluator);\n        const dataPreFilter = m_dataFilter\n            ? new ComposedDataFilter([styleSetDataFilter, m_dataFilter])\n            : styleSetDataFilter;\n        // Register the default adapters.\n        this.m_dataAdapters.push(new OmvProtobufDataAdapter(this, dataPreFilter, logger));\n        this.m_dataAdapters.push(new VTJsonDataAdapter(this, dataPreFilter, logger));\n        this.m_dataAdapters.push(new TiledGeoJsonDataAdapter(this, dataPreFilter, logger));\n    }\n\n    get storageLevelOffset() {\n        return this.m_storageLevelOffset;\n    }\n\n    /**\n     * Given a tile and a protobuffer, it returns a decoded tile and it creates the geometries that\n     * belong to it.\n     *\n     * @param tileKey The tile to be decoded.\n     * @param data The protobuffer to decode from.\n     * @returns A [[DecodedTile]]\n     */\n    getDecodedTile(tileKey: TileKey, data: ArrayBufferLike | {}): DecodedTile {\n        let dataAdapter;\n        for (const adapter of this.m_dataAdapters.values()) {\n            if (adapter.canProcess(data)) {\n                dataAdapter = adapter;\n                break;\n            }\n        }\n        if (dataAdapter === undefined) {\n            return {\n                techniques: [],\n                geometries: []\n            };\n        }\n\n        this.m_styleSetEvaluator.resetTechniques();\n\n        const decodeInfo = new DecodeInfo(\n            dataAdapter.id,\n            this.m_projection,\n            tileKey,\n            this.m_storageLevelOffset\n        );\n\n        this.m_decodedTileEmitter = new OmvDecodedTileEmitter(\n            decodeInfo,\n            this.m_styleSetEvaluator,\n            this.m_gatherFeatureAttributes,\n            this.m_skipShortLabels,\n            this.m_enableElevationOverlay,\n            this.m_languages\n        );\n\n        dataAdapter.process(data, decodeInfo);\n        return this.m_decodedTileEmitter.getDecodedTile();\n    }\n\n    processPointFeature(\n        layer: string,\n        extents: number,\n        geometry: THREE.Vector2[],\n        env: MapEnv,\n        storageLevel: number\n    ): void {\n        if (\n            this.m_featureModifier !== undefined &&\n            !this.m_featureModifier.doProcessPointFeature(layer, env, storageLevel)\n        ) {\n            return;\n        }\n\n        const techniques = this.applyKindFilter(\n            this.m_styleSetEvaluator.getMatchingTechniques(env, layer, \"point\"),\n            GeometryKind.Label\n        );\n\n        if (techniques.length === 0) {\n            if (this.m_showMissingTechniques) {\n                logger.log(\n                    \"OmvDecoder#processPointFeature: no techniques for object:\",\n                    JSON.stringify(env.unmap())\n                );\n            }\n            return;\n        }\n        const context = {\n            env,\n            storageLevel,\n            zoomLevel: this.getZoomLevel(storageLevel),\n            cachedExprResults: this.m_styleSetEvaluator.expressionEvaluatorCache\n        };\n\n        const featureId = env.lookup(\"$id\") as number | undefined;\n\n        if (this.m_decodedTileEmitter) {\n            this.m_decodedTileEmitter.processPointFeature(\n                layer,\n                extents,\n                geometry,\n                context,\n                techniques,\n                featureId\n            );\n        }\n    }\n\n    processLineFeature(\n        layer: string,\n        extents: number,\n        geometry: ILineGeometry[],\n        env: MapEnv,\n        storageLevel: number\n    ): void {\n        if (\n            this.m_featureModifier !== undefined &&\n            !this.m_featureModifier.doProcessLineFeature(layer, env, storageLevel)\n        ) {\n            return;\n        }\n\n        const techniques = this.applyKindFilter(\n            this.m_styleSetEvaluator.getMatchingTechniques(env, layer, \"line\"),\n            GeometryKind.Line\n        );\n\n        if (techniques.length === 0) {\n            if (this.m_showMissingTechniques) {\n                logger.log(\n                    \"OmvDecoder#processLineFeature: no techniques for object:\",\n                    JSON.stringify(env.unmap())\n                );\n            }\n            return;\n        }\n\n        const context = {\n            env,\n            storageLevel,\n            zoomLevel: this.getZoomLevel(storageLevel),\n            cachedExprResults: this.m_styleSetEvaluator.expressionEvaluatorCache\n        };\n        const featureId = env.lookup(\"$id\") as number | undefined;\n\n        if (this.m_decodedTileEmitter) {\n            this.m_decodedTileEmitter.processLineFeature(\n                layer,\n                extents,\n                geometry,\n                context,\n                techniques,\n                featureId\n            );\n        }\n    }\n\n    processPolygonFeature(\n        layer: string,\n        extents: number,\n        geometry: IPolygonGeometry[],\n        env: MapEnv,\n        storageLevel: number\n    ): void {\n        if (\n            this.m_featureModifier !== undefined &&\n            !this.m_featureModifier.doProcessPolygonFeature(layer, env, storageLevel)\n        ) {\n            return;\n        }\n\n        const techniques = this.applyKindFilter(\n            this.m_styleSetEvaluator.getMatchingTechniques(env, layer, \"polygon\"),\n            GeometryKind.Area\n        );\n\n        if (techniques.length === 0) {\n            if (this.m_showMissingTechniques) {\n                logger.log(\n                    \"OmvDecoder#processPolygonFeature: no techniques for object:\",\n                    JSON.stringify(env.unmap())\n                );\n            }\n            return;\n        }\n\n        const context = {\n            env,\n            storageLevel,\n            zoomLevel: this.getZoomLevel(storageLevel),\n            cachedExprResults: this.m_styleSetEvaluator.expressionEvaluatorCache\n        };\n        const featureId = env.lookup(\"$id\") as number | undefined;\n\n        if (this.m_decodedTileEmitter) {\n            this.m_decodedTileEmitter.processPolygonFeature(\n                layer,\n                extents,\n                geometry,\n                context,\n                techniques,\n                featureId\n            );\n        }\n    }\n\n    private getZoomLevel(storageLevel: number) {\n        return Math.max(0, storageLevel - (this.m_storageLevelOffset || 0));\n    }\n\n    private applyKindFilter(\n        techniques: IndexedTechnique[],\n        defaultKind: GeometryKind\n    ): IndexedTechnique[] {\n        if (this.m_dataFilter !== undefined && this.m_dataFilter.hasKindFilter) {\n            techniques = techniques.filter(technique => {\n                const kind =\n                    // tslint:disable-next-line: deprecation\n                    technique.kind === undefined ? defaultKind : (technique.kind as GeometryKind);\n                return this.m_dataFilter!.wantsKind(kind);\n            });\n        }\n        return techniques;\n    }\n}\nexport class OmvTileDecoder extends ThemedTileDecoder {\n    private m_showMissingTechniques: boolean = false;\n    private m_featureFilter?: OmvFeatureFilter;\n    private m_featureModifier?: OmvFeatureModifier;\n    private m_gatherFeatureAttributes: boolean = false;\n    private m_skipShortLabels: boolean = true;\n    private m_enableElevationOverlay: boolean = false;\n\n    /** @override */\n    connect(): Promise<void> {\n        return Promise.resolve();\n    }\n\n    /** @override */\n    decodeThemedTile(\n        data: ArrayBufferLike,\n        tileKey: TileKey,\n        styleSetEvaluator: StyleSetEvaluator,\n        projection: Projection\n    ): Promise<DecodedTile> {\n        const startTime = PerformanceTimer.now();\n\n        const decoder = new OmvDecoder(\n            projection,\n            styleSetEvaluator,\n            this.m_showMissingTechniques,\n            this.m_featureFilter,\n            this.m_featureModifier,\n            this.m_gatherFeatureAttributes,\n            this.m_skipShortLabels,\n            this.m_storageLevelOffset,\n            this.m_enableElevationOverlay,\n            this.languages\n        );\n\n        const decodedTile = decoder.getDecodedTile(tileKey, data);\n\n        decodedTile.decodeTime = PerformanceTimer.now() - startTime;\n\n        return Promise.resolve(decodedTile);\n    }\n\n    /** @override */\n    configure(\n        styleSet: StyleSet,\n        definitions?: Definitions,\n        languages?: string[],\n        options?: OptionsMap\n    ): void {\n        super.configure(styleSet, definitions, languages, options);\n\n        if (options) {\n            const omvOptions = options as OmvDecoderOptions;\n\n            if (omvOptions.showMissingTechniques !== undefined) {\n                this.m_showMissingTechniques = omvOptions.showMissingTechniques === true;\n            }\n\n            if (omvOptions && omvOptions.filterDescription !== undefined) {\n                if (omvOptions.filterDescription !== null) {\n                    // create new filter/modifier from description\n                    this.m_featureFilter = new OmvGenericFeatureFilter(\n                        omvOptions.filterDescription\n                    );\n                    this.m_featureModifier = this.createFeatureModifier(\n                        omvOptions.filterDescription,\n                        omvOptions.featureModifierId\n                    );\n                } else {\n                    // null is the signal to clear the filter/modifier\n                    this.m_featureFilter = undefined;\n                    this.m_featureModifier = undefined;\n                }\n            }\n\n            if (omvOptions.gatherFeatureAttributes !== undefined) {\n                this.m_gatherFeatureAttributes = omvOptions.gatherFeatureAttributes === true;\n            }\n            if (omvOptions.skipShortLabels !== undefined) {\n                this.m_skipShortLabels = omvOptions.skipShortLabels;\n            }\n            if (omvOptions.enableElevationOverlay !== undefined) {\n                this.m_enableElevationOverlay = omvOptions.enableElevationOverlay;\n            }\n        }\n        if (languages !== undefined) {\n            this.languages = languages;\n        }\n    }\n\n    private createFeatureModifier(\n        filterDescription: OmvFeatureFilterDescription,\n        featureModifierId?: FeatureModifierId\n    ): OmvFeatureModifier {\n        if (featureModifierId === FeatureModifierId.tomTom) {\n            return new OmvTomTomFeatureModifier(filterDescription);\n        } else {\n            return new OmvGenericFeatureModifier(filterDescription);\n        }\n    }\n}\n\n/**\n * OMV tile decoder service.\n */\nexport class OmvTileDecoderService {\n    /**\n     * Register[[OmvTileDecoder]] service class in [[WorkerServiceManager]].\n     *\n     * Has to be called during initialization of decoder bundle.\n     */\n    static start() {\n        WorkerServiceManager.getInstance().register({\n            serviceType: OMV_TILE_DECODER_SERVICE_TYPE,\n            factory: (serviceId: string) =>\n                TileDecoderService.start(serviceId, new OmvTileDecoder())\n        });\n    }\n}\n\n/**\n * Starts an OMV decoder service.\n *\n * @deprecated Please use [[OmvTileDecoderService.start]].\n */\nexport default class OmvWorkerClient {\n    // TODO(HARP-3651): remove this class when clients are ready\n    constructor() {\n        logger.warn(\"OmvWorkerClient class is deprecated, please use OmvTileDecoderService.start\");\n        OmvTileDecoderService.start();\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { IChannel } from \"./IChannel\";\n\n/**\n * Class for the default console channel.\n */\n\nexport class ConsoleChannel implements IChannel {\n    error(message?: any, ...optionalParams: any[]) {\n        // tslint:disable-next-line:no-console\n        console.error(message, ...optionalParams);\n    }\n\n    debug(message?: any, ...optionalParams: any[]) {\n        // tslint:disable-next-line:no-console\n        console.debug(message, ...optionalParams);\n    }\n\n    info(message?: any, ...optionalParams: any[]) {\n        // tslint:disable-next-line:no-console\n        console.info(message, ...optionalParams);\n    }\n\n    log(message?: any, ...optionalParams: any[]) {\n        // tslint:disable-next-line:no-console\n        console.log(message, ...optionalParams);\n    }\n\n    trace(message?: any, ...optionalParams: any[]) {\n        // tslint:disable-next-line:no-console\n        console.trace(message, ...optionalParams);\n    }\n\n    warn(message?: any, ...optionalParams: any[]) {\n        // tslint:disable-next-line:no-console\n        console.warn(message, ...optionalParams);\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { IChannel } from \"./IChannel\";\nimport { ILogger, LoggerOptions, LogLevel } from \"./ILogger\";\n\n/**\n * Logger class.\n */\nexport class Logger implements ILogger {\n    enabled: boolean = true;\n    level: LogLevel = LogLevel.Trace;\n\n    constructor(readonly name: string, private m_channel: IChannel, options?: LoggerOptions) {\n        if (options !== undefined) {\n            this.update(options);\n        }\n    }\n\n    error(message?: any, ...optionalParams: any[]) {\n        if (this.enabled && this.level <= LogLevel.Error) {\n            this.m_channel.error(this.prefix, message, ...optionalParams);\n        }\n    }\n\n    debug(message?: any, ...optionalParams: any[]) {\n        if (this.enabled && this.level <= LogLevel.Debug) {\n            this.m_channel.debug(this.prefix, message, ...optionalParams);\n        }\n    }\n\n    info(message?: any, ...optionalParams: any[]) {\n        if (this.enabled && this.level <= LogLevel.Info) {\n            this.m_channel.info(this.prefix, message, ...optionalParams);\n        }\n    }\n\n    log(message?: any, ...optionalParams: any[]) {\n        if (this.enabled && this.level <= LogLevel.Log) {\n            this.m_channel.log(this.prefix, message, ...optionalParams);\n        }\n    }\n\n    trace(message?: any, ...optionalParams: any[]) {\n        if (this.enabled && this.level <= LogLevel.Trace) {\n            this.m_channel.trace(this.prefix, message, ...optionalParams);\n        }\n    }\n\n    warn(message?: any, ...optionalParams: any[]) {\n        if (this.enabled && this.level <= LogLevel.Warn) {\n            this.m_channel.warn(this.prefix, message, ...optionalParams);\n        }\n    }\n\n    update(options: LoggerOptions) {\n        this.enabled = options.enabled === undefined ? this.enabled : options.enabled;\n        this.level = options.level === undefined ? this.level : options.level;\n    }\n\n    private get prefix(): string {\n        return this.name + \":\";\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { IChannel } from \"./IChannel\";\nimport { LogLevel } from \"./ILogger\";\n\ndeclare let self: Worker;\n\nexport const WORKERCHANNEL_MSG_TYPE = \"worker-channel-message\";\n\n/**\n * The interface for the messages of the WorkerChannel.\n */\nexport interface IWorkerChannelMessage {\n    message: any[];\n    type: \"worker-channel-message\";\n    level: LogLevel;\n}\n\n/**\n * The class for the worker channel.\n */\nexport class WorkerChannel implements IChannel {\n    error(message?: any, ...optionalParams: any[]) {\n        const workerMessage: IWorkerChannelMessage = {\n            message: [message, ...optionalParams],\n            type: WORKERCHANNEL_MSG_TYPE,\n            level: LogLevel.Error\n        };\n        self.postMessage(workerMessage);\n    }\n\n    debug(message?: any, ...optionalParams: any[]) {\n        const workerMessage: IWorkerChannelMessage = {\n            message: [message, ...optionalParams],\n            type: WORKERCHANNEL_MSG_TYPE,\n            level: LogLevel.Debug\n        };\n        self.postMessage(workerMessage);\n    }\n\n    info(message?: any, ...optionalParams: any[]) {\n        const workerMessage: IWorkerChannelMessage = {\n            message: [message, ...optionalParams],\n            type: WORKERCHANNEL_MSG_TYPE,\n            level: LogLevel.Info\n        };\n        self.postMessage(workerMessage);\n    }\n\n    log(message?: any, ...optionalParams: any[]) {\n        const workerMessage: IWorkerChannelMessage = {\n            message: [message, ...optionalParams],\n            type: WORKERCHANNEL_MSG_TYPE,\n            level: LogLevel.Log\n        };\n        self.postMessage(workerMessage);\n    }\n\n    trace(message?: any, ...optionalParams: any[]) {\n        const workerMessage: IWorkerChannelMessage = {\n            message: [message, ...optionalParams],\n            type: WORKERCHANNEL_MSG_TYPE,\n            level: LogLevel.Trace\n        };\n        self.postMessage(workerMessage);\n    }\n\n    warn(message?: any, ...optionalParams: any[]) {\n        const workerMessage: IWorkerChannelMessage = {\n            message: [message, ...optionalParams],\n            type: WORKERCHANNEL_MSG_TYPE,\n            level: LogLevel.Warn\n        };\n        self.postMessage(workerMessage);\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nimport { assert, LoggerManager } from \"@here/harp-utils\";\nimport { ColorUtils } from \"./ColorUtils\";\nimport { Env } from \"./Env\";\nimport { ExponentialInterpolant } from \"./ExponentialInterpolant\";\nimport { Expr, ExprScope, Value } from \"./Expr\";\nimport { InterpolatedPropertyDefinition, InterpolationMode } from \"./InterpolatedPropertyDefs\";\nimport {\n    parseStringEncodedNumeral,\n    StringEncodedColorFormats,\n    StringEncodedMetricFormats,\n    StringEncodedNumeralFormat,\n    StringEncodedNumeralFormatMaxSize,\n    StringEncodedNumeralFormats,\n    StringEncodedNumeralType\n} from \"./StringEncodedNumeral\";\n\nconst logger = LoggerManager.instance.create(\"InterpolatedProperty\");\n\nconst interpolants = [\n    THREE.DiscreteInterpolant,\n    THREE.LinearInterpolant,\n    THREE.CubicInterpolant,\n    ExponentialInterpolant\n];\n\nconst tmpBuffer = new Array<number>(StringEncodedNumeralFormatMaxSize);\n\n/**\n * Property which value is interpolated across different zoom levels.\n */\nexport interface InterpolatedPropertyDescriptor {\n    /**\n     * Interpolation mode that should be used for this property.\n     */\n    interpolationMode: InterpolationMode;\n\n    /**\n     * Zoom level keys array.\n     */\n    zoomLevels: ArrayLike<number>;\n\n    /**\n     * Property values array.\n     */\n    values: ArrayLike<Value>;\n\n    /**\n     * Exponent used in interpolation. Only valid with `Exponential` [[InterpolationMode]].\n     */\n    exponent?: number;\n\n    /**\n     * @hidden\n     * true if the result should be stored as vector.\n     */\n    _vectorInterpolation?: boolean;\n\n    /**\n     * @hidden\n     * [[StringEncodedNumeral]] type needed to interpret interpolated values back to numbers.\n     */\n    _stringEncodedNumeralType?: StringEncodedNumeralType;\n\n    /**\n     * @hidden\n     * Array of `0` and `1`mask values used to modify the interpolation behaviour of some\n     * [[StringEncodedNumeral]]s.\n     */\n    _stringEncodedNumeralDynamicMask?: Float32Array;\n}\n\nexport class InterpolatedProperty {\n    /**\n     * Convert JSON representation of interpolated property to internal, normalized version that\n     * can be evaluated by [[getPropertyValue]].\n     *\n     * @internal\n     */\n    static fromDefinition(\n        def: InterpolatedPropertyDefinition<Value>\n    ): InterpolatedProperty | undefined {\n        removeDuplicatePropertyValues(def);\n\n        const interpolationMode =\n            def.interpolation !== undefined\n                ? InterpolationMode[def.interpolation]\n                : InterpolationMode.Discrete;\n\n        const zoomLevels = new Float32Array(def.zoomLevels);\n\n        let vectorComponents: number | undefined;\n        if (def.values.every(v => v instanceof THREE.Vector2)) {\n            vectorComponents = 2;\n        } else if (def.values.every(v => v instanceof THREE.Vector3)) {\n            vectorComponents = 3;\n        } else if (def.values.every(v => v instanceof THREE.Vector4)) {\n            vectorComponents = 4;\n        }\n\n        if (vectorComponents !== undefined) {\n            const values = new Float32Array(def.values.length * vectorComponents);\n\n            (def.values as Array<THREE.Vector2 | THREE.Vector3 | THREE.Vector4>).forEach((v, i) =>\n                v.toArray(values, i * vectorComponents!)\n            );\n\n            return new InterpolatedProperty({\n                interpolationMode,\n                zoomLevels,\n                values,\n                _vectorInterpolation: true,\n                exponent: def.exponent\n            });\n        }\n\n        const firstValue = def.values[0];\n        switch (typeof firstValue) {\n            default:\n            case \"number\":\n            case \"boolean\":\n                return new InterpolatedProperty({\n                    interpolationMode,\n                    zoomLevels,\n                    values: new Float32Array(def.values as any),\n                    exponent: def.exponent\n                });\n            case \"string\":\n                // TODO: Minimize effort for pre-matching the numeral format.\n                const matchedFormat = StringEncodedNumeralFormats.find(format =>\n                    format.regExp.test(firstValue)\n                );\n\n                if (matchedFormat === undefined) {\n                    if (interpolationMode === InterpolationMode.Discrete) {\n                        return new InterpolatedProperty({\n                            interpolationMode,\n                            zoomLevels,\n                            values: def.values\n                        });\n                    }\n\n                    logger.error(`No StringEncodedNumeralFormat matched ${firstValue}.`);\n                    return undefined;\n                }\n\n                let needsMask = false;\n\n                const propValues = new Float32Array(def.values.length * matchedFormat.size);\n                const maskValues = new Float32Array(def.values.length);\n                needsMask = processStringEnocodedNumeralInterpolatedProperty(\n                    matchedFormat,\n                    def as InterpolatedPropertyDefinition<string>,\n                    propValues,\n                    maskValues\n                );\n\n                return new InterpolatedProperty({\n                    interpolationMode,\n                    zoomLevels,\n                    values: propValues,\n                    exponent: def.exponent,\n                    _stringEncodedNumeralType: matchedFormat.type,\n                    _stringEncodedNumeralDynamicMask: needsMask ? maskValues : undefined\n                });\n        }\n    }\n\n    constructor(readonly descriptor: InterpolatedPropertyDescriptor) {}\n\n    evaluate(env: Env): Value {\n        const zoom = env.lookup(\"$zoom\") as number;\n        const pixelToMeters = env.lookup(\"$pixelToMeters\") as number;\n        const { _stringEncodedNumeralType } = this.descriptor;\n\n        switch (_stringEncodedNumeralType) {\n            case StringEncodedNumeralType.Meters:\n            case StringEncodedNumeralType.Pixels:\n                return this.getInterpolatedMetric(zoom, pixelToMeters);\n\n            case StringEncodedNumeralType.Hex:\n            case StringEncodedNumeralType.RGB:\n            case StringEncodedNumeralType.RGBA:\n            case StringEncodedNumeralType.HSL:\n                return this.getInterpolatedColor(zoom);\n\n            default:\n                return this.getInterpolatedMetric(zoom, pixelToMeters);\n        }\n    }\n\n    private getInterpolatedMetric(\n        zoom: number,\n        pixelToMeters: number\n    ): number | number[] | THREE.Vector2 | THREE.Vector3 | THREE.Vector4 {\n        const {\n            values,\n            zoomLevels,\n            interpolationMode,\n            exponent,\n            _stringEncodedNumeralDynamicMask,\n            _vectorInterpolation\n        } = this.descriptor;\n        const nChannels = values.length / zoomLevels.length;\n        const interpolant = new interpolants[interpolationMode](zoomLevels, values, nChannels);\n        if (interpolationMode === InterpolationMode.Exponential && exponent !== undefined) {\n            (interpolant as ExponentialInterpolant).exponent = exponent;\n        }\n        interpolant.evaluate(zoom);\n\n        if (_stringEncodedNumeralDynamicMask === undefined) {\n            if (_vectorInterpolation) {\n                if (nChannels === 2) {\n                    return new THREE.Vector2().fromArray(interpolant.resultBuffer);\n                } else if (nChannels === 3) {\n                    return new THREE.Vector3().fromArray(interpolant.resultBuffer);\n                } else if (nChannels === 4) {\n                    return new THREE.Vector4().fromArray(interpolant.resultBuffer);\n                }\n                throw new Error(\"invalid number of components\");\n            }\n            return nChannels === 1 ? interpolant.resultBuffer[0] : [...interpolant.resultBuffer];\n        } else {\n            const maskInterpolant = new interpolants[interpolationMode](\n                zoomLevels,\n                _stringEncodedNumeralDynamicMask,\n                1\n            );\n            if (interpolationMode === InterpolationMode.Exponential && exponent !== undefined) {\n                (maskInterpolant as ExponentialInterpolant).exponent = exponent;\n            }\n            maskInterpolant.evaluate(zoom);\n\n            return (\n                interpolant.resultBuffer[0] *\n                (1 + maskInterpolant.resultBuffer[0] * (pixelToMeters - 1))\n            );\n        }\n    }\n\n    private getInterpolatedColor(level: number): number {\n        const { values, zoomLevels, interpolationMode, exponent } = this.descriptor;\n\n        const nChannels = values.length / zoomLevels.length;\n        const interpolant = new interpolants[interpolationMode](zoomLevels, values, nChannels);\n        if (interpolationMode === InterpolationMode.Exponential && exponent !== undefined) {\n            (interpolant as ExponentialInterpolant).exponent = exponent;\n        }\n        interpolant.evaluate(level);\n\n        assert(nChannels === 3 || nChannels === 4);\n        // ColorUtils.getHexFromRgba() does not clamp the values which may be out of\n        // color channels range (0 <= c <= 1) after interpolation.\n        if (nChannels === 4) {\n            return ColorUtils.getHexFromRgba(\n                THREE.MathUtils.clamp(interpolant.resultBuffer[0], 0, 1),\n                THREE.MathUtils.clamp(interpolant.resultBuffer[1], 0, 1),\n                THREE.MathUtils.clamp(interpolant.resultBuffer[2], 0, 1),\n                THREE.MathUtils.clamp(interpolant.resultBuffer[3], 0, 1)\n            );\n        } else {\n            return ColorUtils.getHexFromRgb(\n                THREE.MathUtils.clamp(interpolant.resultBuffer[0], 0, 1),\n                THREE.MathUtils.clamp(interpolant.resultBuffer[1], 0, 1),\n                THREE.MathUtils.clamp(interpolant.resultBuffer[2], 0, 1)\n            );\n        }\n    }\n}\n\n/**\n * Type guard to check if an object is an instance of `InterpolatedProperty`.\n */\nexport function isInterpolatedProperty(p: any): p is InterpolatedProperty {\n    return p instanceof InterpolatedProperty;\n}\n\n/**\n* Get the value of the specified property in given `env`.\n\n* @param property Property of a technique.\n* @param env The [[Env]] used to evaluate the property\n*/\nexport function getPropertyValue(property: Value | Expr | undefined, env: Env): any {\n    if (Expr.isExpr(property)) {\n        try {\n            return property.evaluate(env, ExprScope.Dynamic);\n        } catch (error) {\n            logger.error(\n                \"failed to evaluate expression\",\n                JSON.stringify(property),\n                \"error\",\n                String(error)\n            );\n            return null;\n        }\n    }\n\n    if (property === null || typeof property === \"undefined\") {\n        return null;\n    } else if (typeof property !== \"string\") {\n        // Property in numeric or array, etc. format\n        return property;\n    } else {\n        // Non-interpolated string encoded numeral parsing\n        const pixelToMeters = (env.lookup(\"$pixelToMeters\") as number) || 1;\n        const value = parseStringEncodedNumeral(property, pixelToMeters);\n        return value !== undefined ? value : property;\n    }\n}\n\nfunction removeDuplicatePropertyValues<T>(p: InterpolatedPropertyDefinition<T>) {\n    const eps = 0.001;\n\n    // detect cubic interpolations and remove stops\n    // closer than `eps`, this is needed to avoid\n    // possible NaN generated by the cubic interpolator.\n    const isCubic = p.interpolation === \"Cubic\";\n\n    for (let i = 0; i < p.values.length; ++i) {\n        const firstIdx = p.zoomLevels.findIndex(a => {\n            return isCubic ? Math.abs(a - p.zoomLevels[i]) < eps : a === p.zoomLevels[i];\n        });\n        if (firstIdx !== i) {\n            p.zoomLevels.splice(--i, 1);\n            p.values.splice(--i, 1);\n        }\n    }\n}\n\nfunction processStringEnocodedNumeralInterpolatedProperty(\n    baseFormat: StringEncodedNumeralFormat,\n    prop: InterpolatedPropertyDefinition<string>,\n    propValues: Float32Array,\n    maskValues: Float32Array\n): boolean {\n    let needsMask = false;\n    const allowedValueFormats =\n        baseFormat.type === StringEncodedNumeralType.Meters ||\n        baseFormat.type === StringEncodedNumeralType.Pixels\n            ? StringEncodedMetricFormats\n            : StringEncodedColorFormats;\n\n    for (let valueIdx = 0; valueIdx < prop.values.length; ++valueIdx) {\n        let matched = false;\n        for (const valueFormat of allowedValueFormats) {\n            const value = prop.values[valueIdx];\n            matched = valueFormat.decoder(value, tmpBuffer);\n            if (!matched) {\n                continue;\n            }\n\n            if (valueFormat.mask !== undefined) {\n                maskValues[valueIdx] = valueFormat.mask;\n                needsMask = true;\n            }\n\n            for (let i = 0; i < valueFormat.size; ++i) {\n                propValues[valueIdx * valueFormat.size + i] = tmpBuffer[i];\n            }\n            break;\n        }\n        if (!matched) {\n            throw Error(\n                `Not all interpolation values match the same format: ${JSON.stringify(prop)}`\n            );\n        }\n    }\n\n    return needsMask;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { JsonExpr } from \"./Expr\";\nimport { InterpolatedPropertyDefinition } from \"./InterpolatedPropertyDefs\";\n\n/**\n * Available line caps types(`\"None\"`, `\"Round\"`, `\"Square\"`, `\"TriangleOut\"`, `\"TriangleIn\"`).\n * Default is `\"Round\"`.\n */\nexport type LineCaps = \"Square\" | \"Round\" | \"None\" | \"TriangleOut\" | \"TriangleIn\";\n\n/**\n * Available line dash types(`\"Round\"`, `\"Square\"`, `\"Diamond\"`).\n * Default is `\"Square\"`.\n */\nexport type LineDashes = \"Square\" | \"Round\" | \"Diamond\";\n\n/**\n * Standard kinds of geometry.\n */\nexport enum StandardGeometryKind {\n    /**\n     * Used in the enabledKinds/disabledKinds filter to match any kind.\n     */\n    All = \"_all_\",\n\n    /**\n     * Background geometry.\n     */\n    Background = \"background\",\n\n    /**\n     * Terrain geometry.\n     */\n    Terrain = \"terrain\",\n\n    /**\n     * Default value for the FillTechnique.\n     */\n    Area = \"area\",\n\n    /**\n     * Default value for all line techniques.\n     */\n    Line = \"line\",\n\n    /**\n     * Default value for the FillTechnique.\n     */\n    Water = \"water\",\n\n    /**\n     * Political borders.\n     */\n    Border = \"border\",\n\n    /**\n     * Basis for all roads.\n     */\n    Road = \"road\",\n\n    /**\n     * Default value for the ExtrudedPolygonTechnique.\n     */\n    Building = \"building\",\n\n    /**\n     * Default value for the TextTechnique, LineMarkerTechnique and the PoiTechnique.\n     */\n    Label = \"label\",\n\n    /**\n     * Anything that may show up last.\n     */\n    Detail = \"detail\"\n}\n\n/**\n * Geometry kind used for use by [[BaseTechniqueParams.kind]].\n *\n * The kind of geometry is used to group objects together,\n * allowing the group to be hidden or displayed.\n *\n * Any string can be used to specify the kind of the technique in a style in the theme file. Is is\n * suggested to specify multiple kinds for specific types of data. For a highway, the following list\n * of kinds is suggested:\n *\n *    [\"line\", \"road\", \"road:highway\"]\n *\n * If it is a tunnel for a highway:\n *\n *    [\"line\", \"road\", \"road:highway\", \"tunnel\", \"road:tunnel\", \"road:highway:tunnel\"]\n *\n * If specified in this way, specific types of data (here: highway roads) can be enabled and/or\n * disabled.\n */\nexport type GeometryKind = string | StandardGeometryKind;\nexport const GeometryKind = StandardGeometryKind;\n\n/**\n * Decorate property type with possible dynamic variants.\n */\nexport type DynamicProperty<T> = T | JsonExpr | InterpolatedPropertyDefinition<T>;\n\n/*\n * Description of length units inside a style. Supports literal values (interpreted as `m`), `m` and\n * `px`(i.e. `80`, `14px`, `0.6m`, etc.).\n */\nexport type StyleLength = string | number;\n\n/**\n * Description of colors inside a style. Supports hex values as well as CSS hex, rgb and hsl values\n * (i.e. `0xffffff`, `#f00fab`, `#aaa`, `rgb(255, 0 120)`, `hsl(360, 100%, 100%)`, etc.).\n */\nexport type StyleColor = string | number;\n\n/**\n * A set of [[GeometryKind]]s.\n */\nexport class GeometryKindSet extends Set {\n    /**\n     * Return `true` if the Set is a superset of the set 'subset'.\n     */\n    isSuperset(subset: Set<any>): boolean {\n        for (const elem of subset) {\n            if (!this.has(elem)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Return `true` if the Set intersects Set 'set'.\n     */\n    hasIntersection(set: any) {\n        for (const elem of set) {\n            if (this.has(elem)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Return `true` if the Set either intersects Set 'set' (if set is a Set), of has element 'set'\n     * if set is not a Set.\n     */\n    hasOrIntersects(set: any) {\n        if (set instanceof Set) {\n            return this.hasIntersection(set);\n        }\n        return this.has(set);\n    }\n\n    /**\n     * Return `true` if this set and the array of elements share at least a single element.\n     */\n    hasOrIntersectsArray(subset: any[]) {\n        for (const elem of subset) {\n            if (this.has(elem)) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n\n/**\n * Common attributes or all [[Technique]]s.\n */\nexport interface BaseTechniqueParams {\n    /**\n     * The name used to identify materials created from this technique.\n     */\n    id?: string;\n\n    /**\n     * The render order of the objects created using this technique.\n     *\n     * If not specified in style file, [[StyleSetEvaluator]] will assign monotonically increasing\n     * values according to style position in file.\n     */\n    renderOrder: number;\n\n    /**\n     * The category of this technique.\n     *\n     * The category is used in conjunction with [[Theme.priorities]]\n     * to assign render orders to the objects created by this [[Style]].\n     */\n    category?: string;\n\n    /**\n     * Optional. If `true`, no IDs will be saved for the geometry this technique creates.\n     */\n    transient?: boolean;\n\n    /**\n     * Distance to the camera (0.0 = camera position, 1.0 = farPlane) at which the object start\n     * fading out (opacity decreases).\n     */\n    fadeNear?: DynamicProperty<number>;\n\n    /**\n     * Distance to the camera (0.0 = camera position, 1.0 = farPlane) at which the object has zero\n     * opacity and stops fading out. An undefined value disables fading.\n     */\n    fadeFar?: DynamicProperty<number>;\n\n    /**\n     * Specified kind of geometry. One kind is set as default in the technique, and can be\n     * overridden in the style.\n     *\n     * @deprecated Use [[enabled]] with expressions based on `['dynamic-properties']` operator.\n     */\n    kind?: GeometryKind | GeometryKindSet;\n\n    /**\n     * Runtime filtering of techniques.\n     *\n     * Use with `['dynamic-properties']` operator for dynamic feature highlight, highlighig etc.\n     *\n     * @see Picking example - [[PickingExample]]\n     */\n    enabled?: DynamicProperty<boolean>;\n}\n\nexport enum TextureCoordinateType {\n    /**\n     * Texture coordinates are in tile space.\n     * SW of the tile will have (0,0) and NE will have (1,1).\n     */\n    TileSpace = \"tile-space\",\n    /**\n     * Texture coordinates are in equirectangular space.\n     * (u, v) = ( (longitude+180) / 360, (latitude+90) / 180).\n     */\n    EquirectangularSpace = \"equirectangular-space\"\n}\n\n/**\n * Standard technique parameters.\n */\nexport interface StandardTechniqueParams extends BaseTechniqueParams {\n    /**\n     * Color of the feature in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`,\n     * `\"#fff\"`, `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * See https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.color.\n     * @format color-hex\n     */\n    color?: DynamicProperty<StyleColor>;\n    /**\n     * A value of `true` creates a wireframe geometry. (May not be supported with all techniques).\n     * See https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.wireframe.\n     */\n    wireframe?: boolean;\n    /**\n     * If `vertexColors` is `true`, every vertex has color information, which is interpolated\n     * between vertices.\n     * See https://threejs.org/docs/#api/en/materials/Material.vertexColors.\n     */\n    vertexColors?: boolean;\n    /**\n     * How rough the material appears. `0.0` means a smooth mirror reflection. `1.0` means fully\n     * diffuse. Default is `1.0`.\n     * See https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.roughness.\n     */\n    roughness?: DynamicProperty<number>;\n    /**\n     * How much the material is like a metal. Nonmetallic materials such as wood or stone use `0.0`,\n     * metallic ones use `1.0`, with nothing (usually) in between. Default is `0.0`. A value between\n     * `0.0` and `1.0` can be used for a rusty metal look. If `metalnessMap` is also provided, both\n     * values are multiplied.\n     * See https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.metalness.\n     */\n    metalness?: DynamicProperty<number>;\n    /**\n     * The material will not be rendered if the opacity is lower than this value.\n     * See https://threejs.org/docs/#api/en/materials/Material.alphaTest.\n     */\n    alphaTest?: DynamicProperty<number>;\n    /**\n     * Skip rendering clobbered pixels.\n     * See https://threejs.org/docs/#api/en/materials/Material.depthTest.\n     */\n    depthTest?: boolean;\n    /**\n     * Set to 'true' if line should appear transparent. Rendering transparent lines may come with a\n     * slight performance impact.\n     * See https://threejs.org/docs/#api/en/materials/Material.transparent.\n     */\n    transparent?: boolean;\n    /**\n     * For transparent lines, set a value between 0.0 for totally transparent, to 1.0 for totally\n     * opaque.\n     * See https://threejs.org/docs/#api/en/materials/Material.opacity.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * Emissive (light) color of the material, essentially a solid color unaffected by other\n     * lighting. Default is black.\n     * See https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.emissive.\n     * @format color-hex\n     */\n    emissive?: DynamicProperty<StyleColor>;\n    /**\n     * Intensity of the emissive light. Modulates the emissive color. Default is `1`.\n     * See https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.emissiveIntensity.\n     */\n    emissiveIntensity?: DynamicProperty<number>;\n    /**\n     * The index of refraction (IOR) of air (approximately 1) divided by the index of refraction of\n     * the material. It is used with environment mapping modes `THREE.CubeRefractionMapping` and\n     * `THREE.EquirectangularRefractionMapping`. The refraction ratio should not exceed `1`. Default\n     *  is `0.98`.\n     * See https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.refractionRatio.\n     */\n    refractionRatio?: DynamicProperty<number>;\n\n    /**\n     * Whether and how texture coordinates should be generated. No texture coordinates are\n     * generated if `undefined`.\n     * Should be set if any texture assigned (e.g. `map`, `normalMap`, ...).\n     */\n    textureCoordinateType?: TextureCoordinateType;\n\n    /*\n     * URL or texture buffer that should be used as color map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.map\n     */\n    map?: string | TextureBuffer;\n    mapProperties?: TextureProperties;\n\n    /**\n     * URL or texture buffer that should be used as normal map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.normalMap\n     */\n    normalMap?: string | TextureBuffer;\n    normalMapType?: number;\n    normalMapProperties?: TextureProperties;\n\n    /**\n     * URL or texture buffer that should be used as displacement map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.displacementMap\n     */\n    displacementMap?: string | TextureBuffer;\n    displacementMapProperties?: TextureProperties;\n\n    /**\n     * URL or texture buffer that should be used as roughness map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.roughnessMap\n     */\n    roughnessMap?: string | TextureBuffer;\n    roughnessMapProperties?: TextureProperties;\n\n    /**\n     * URL or texture buffer that should be used as emissive map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.emissiveMap\n     */\n    emissiveMap?: string | TextureBuffer;\n    emissiveMapProperties?: TextureProperties;\n\n    /**\n     * URL or texture buffer that should be used as bump map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.bumpMap\n     */\n    bumpMap?: string | TextureBuffer;\n    bumpMapProperties?: TextureProperties;\n\n    /**\n     * URL or texture buffer that should be used as metalness map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.metalnessMap\n     */\n    metalnessMap?: string | TextureBuffer;\n    metalnessMapProperties?: TextureProperties;\n\n    /**\n     * URL or texture buffer that should be used as alpha map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.alphaMap\n     */\n    alphaMap?: string | TextureBuffer;\n    alphaMapProperties?: TextureProperties;\n}\n\n/**\n * Possible parameters of [[PointTechnique]].\n */\nexport interface PointTechniqueParams extends BaseTechniqueParams {\n    /**\n     * Color of a point in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    color?: DynamicProperty<StyleColor>;\n    /**\n     * URL of a texture image to be loaded.\n     */\n    texture?: string;\n    /**\n     * Set to `true` if line should appear transparent. Rendering transparent lines may come with a\n     * slight performance impact.\n     */\n    transparent?: boolean;\n    /**\n     * For transparent lines, set a value between 0.0 for totally transparent, to 1.0 for totally\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * Size of point in pixels.\n     */\n    size?: number;\n    /**\n     * Whether to enable picking on these points.\n     */\n    enablePicking?: boolean;\n}\n\n/**\n * Define the stacking option. Enum values for theme file are in \"kebab-case\".\n */\nexport enum PoiStackMode {\n    /**\n     * Show in a stack.\n     */\n    Show = \"show-in-stack\",\n    /**\n     * Do not show in a stack.\n     */\n    Hide = \"hide-in-stack\",\n    /**\n     * Show category parent in the stack.\n     */\n    ShowParent = \"show-parent\"\n}\n\n/**\n * Technique that describes icons with labels. Used in [[PoiTechnique]] and [[LineMarkerTechnique]]\n * (for road shields).\n */\nexport interface MarkerTechniqueParams extends BaseTechniqueParams {\n    /**\n     * Text to be displayed for feature.\n     *\n     * Defaults to first defined:\n     *  - feature property `label` if present in technique (depreacted)\n     *  - `[\"get\", \"name:short\"]` is `useAbbreviation` is true\n     *  - `[\"get\", \"iso_code\"]` is `useIsoCode` is true\n     *  - `[\"get\", \"name:$LANGUAGE\"]` for each specified language\n     *  - `[\"get\", \"name\"]`\n     *\n     * See [[ExtendedTileInfo.getFeatureText]]\n     */\n    text?: string;\n\n    /**\n     * Field name of object containing the text to be rendered.\n     *\n     * @deprecated, Use `[\"get\", \"FIELD\"]`.\n     */\n    label?: string;\n    /**\n     * If `true`, the abbreviation (field `name:short`) of the elements is used as text.\n     *\n     * @deprecated Use proper expression with [`get`, `name:short`] for this purpose.\n     */\n    useAbbreviation?: boolean;\n    /**\n     * If `true`, the iso code (field 'iso_code') of the elements is used as text.\n     * The `iso_code` field contains the ISO 3166-1 2-letter country code.\n     *\n     * @deprecated Use proper expression with [`get`, `iso_code`] for this purpose.\n     */\n    useIsoCode?: boolean;\n    /**\n     * Priority of marker, defaults to `0`. Markers with highest priority get placed first.\n     */\n    priority?: DynamicProperty<number>;\n    /**\n     * Minimum zoomLevel at which to display the label text. No default.\n     */\n    textMinZoomLevel?: number;\n    /**\n     * Maximum zoomLevel at which to display the label text. No default.\n     */\n    textMaxZoomLevel?: number;\n    /**\n     * Minimum zoomLevel at which to display the label icon. No default.\n     */\n    iconMinZoomLevel?: number;\n    /**\n     * Maximum zoomLevel at which to display the label icon. No default.\n     */\n    iconMaxZoomLevel?: number;\n    /**\n     * Scaling factor of icon. Defaults to 0.5, reducing the size ot 50% in the distance.\n     */\n    distanceScale?: number;\n    /**\n     * If `false`, text may overlap markers.\n     * @default `false`\n     */\n    textMayOverlap?: boolean;\n    /**\n     * If `false`, the icon may overlap text and other icons of lower priority. If not defined, the\n     * property value from `textMayOverlap` will be used.\n     * @default `false`\n     */\n    iconMayOverlap?: boolean;\n    /**\n     * If `false`, text will not reserve screen space, other markers will be able to overlap.\n     * @default `true`\n     */\n    textReserveSpace?: boolean;\n    /**\n     * If `false`, icon will not reserve screen space, other markers will be able to overlap. If not\n     * defined, the property value from `iconReserveSpace` will be used.\n     * @default `true`\n     */\n    iconReserveSpace?: boolean;\n    /**\n     * If `false`, text will not be rendered during animations. Defaults to `true`.\n     */\n    renderTextDuringMovements?: boolean;\n    /**\n     * If `true`, the label will always be rendered on top. If overlapping with other labels with\n     * this flag set, the render order is undefined.\n     * @default `false`\n     */\n    alwaysOnTop?: boolean;\n    /**\n     * If `true`, icon will appear even if the text part is blocked by other labels. Defaults to\n     * `false`.\n     */\n    textIsOptional?: boolean;\n    /**\n     * Should be displayed on map or not. Defaults to `true`.\n     */\n    showOnMap?: boolean;\n    /**\n     * Specify stack mode. Defaults to `ShowInStack`.\n     */\n    stackMode?: PoiStackMode;\n    /**\n     * Minimal distance between markers in screen pixels.\n     */\n    minDistance?: number;\n    /**\n     * If true, the text will appear even if the icon cannot be rendered because of missing icon\n     * graphics. Defaults to `true`.\n     */\n    iconIsOptional?: boolean;\n    /**\n     * Fading time for labels in seconds.\n     */\n    textFadeTime?: number;\n    /**\n     * Fading time for icons in seconds.\n     */\n    iconFadeTime?: number;\n    /**\n     * Horizontal offset (to the right) in screen pixels.\n     */\n    xOffset?: DynamicProperty<number>;\n    /**\n     * Vertical offset (up) in screen pixels.\n     */\n    yOffset?: DynamicProperty<number>;\n    /**\n     * Horizontal offset (to the right) in screen pixels.\n     */\n    iconXOffset?: DynamicProperty<number>;\n    /**\n     * Vertical offset (up) in screen pixels.\n     */\n    iconYOffset?: DynamicProperty<number>;\n    /**\n     * Scaling factor of icon.\n     */\n    iconScale?: number;\n    /**\n     * Vertical height in pixels, controls vertical scaling. Overrides `iconScale`.\n     */\n    screenHeight?: DynamicProperty<number>;\n    /**\n     * Horizontal height in pixels, controls horizontal scaling. Overrides `iconScale`.\n     */\n    screenWidth?: DynamicProperty<number>;\n    /**\n     * Name of the POI table which should be used for this POI.\n     */\n    poiTable?: string;\n    /**\n     * Fixed name to identify POI options in the POI table. If `poiName` has a value, this value\n     * supercedes any value read from the field referenced in `poiNameField`.\n     */\n    poiName?: string;\n    /**\n     * Name of the field to evaluate to get the name of the POI options in the POI table.\n     */\n    poiNameField?: string;\n    /**\n     * Name of [[ImageTexture]] definition to use.\n     */\n    imageTexture?: string;\n    /**\n     * Field name to extract imageTexture content from.\n     */\n    imageTextureField?: string;\n    /**\n     * Prefix for `imageTexture` if `imageTextureField` is used.\n     */\n    imageTexturePrefix?: string;\n    /**\n     * Postfix for `imageTexture` if `imageTextureField` is used.\n     */\n    imageTexturePostfix?: string;\n    /**\n     * Name of the text style.\n     */\n    style?: string;\n    /**\n     * Name of the preferred [[Font]] to be used when rendering.\n     */\n    fontName?: string;\n    /**\n     * Size of the text (pixels).\n     */\n    size?: DynamicProperty<number>;\n    /**\n     * Size of the text background (pixels).\n     */\n    backgroundSize?: DynamicProperty<number>;\n    /**\n     * Glyph style to apply for the currently active [[Font]].\n     */\n    fontStyle?: \"Regular\" | \"Bold\" | \"Italic\" | \"BoldItalic\";\n    /**\n     * Glyph variant to apply for the currently active [[Font]].\n     */\n    fontVariant?: \"Regular\" | \"AllCaps\" | \"SmallCaps\";\n    /**\n     * Glyph local rotation (radians).\n     */\n    rotation?: number;\n    /**\n     * Text color in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    color?: DynamicProperty<StyleColor>;\n    /**\n     * Text background color in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`,\n     * `\"#fff\"`, `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    backgroundColor?: DynamicProperty<StyleColor>;\n    /**\n     * For transparent text, set a value between 0.0 for totally transparent, to 1.0 for totally\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * Background text opacity value.\n     */\n    backgroundOpacity?: DynamicProperty<number>;\n    /**\n     * Inter-glyph spacing (pixels). Scaled by `size`.\n     */\n    tracking?: DynamicProperty<number>;\n    /**\n     * Inter-line spacing (pixels). Scaled by `size`.\n     */\n    leading?: DynamicProperty<number>;\n    /**\n     * Maximum number of lines for this label.\n     */\n    maxLines?: DynamicProperty<number>;\n    /**\n     * Maximum line width (pixels).\n     */\n    lineWidth?: DynamicProperty<number>;\n    /**\n     * [[TextCanvas]] rotation (radians).\n     */\n    canvasRotation?: DynamicProperty<number>;\n    /**\n     * Line typesetting rotation (radians).\n     */\n    lineRotation?: DynamicProperty<number>;\n    /**\n     * Wrapping (line-breaking) mode.\n     */\n    wrappingMode?: DynamicProperty<\"None\" | \"Character\" | \"Word\">;\n    /**\n     * Text position regarding the baseline.\n     */\n    hAlignment?: DynamicProperty<\"Left\" | \"Center\" | \"Right\">;\n    /**\n     * Text position inside a line.\n     */\n    vAlignment?: DynamicProperty<\"Above\" | \"Center\" | \"Below\">;\n}\n\nexport interface LineTechniqueParams extends BaseTechniqueParams {\n    /**\n     * Color of a line in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    color: DynamicProperty<StyleColor>;\n    /**\n     * Set to true if line should appear transparent. Rendering transparent lines may come with a\n     * slight performance impact.\n     */\n    transparent?: boolean;\n    /**\n     * For transparent lines, set a value between 0.0 for totally transparent, to 1.0 for totally\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * Width of line in pixels. WebGL implementations will normally render all lines with 1 pixel\n     * width, and ignore this value.\n     */\n    lineWidth: DynamicProperty<number>;\n}\n\n/**\n * Declares a geometry as a segment.\n */\nexport interface SegmentsTechniqueParams extends BaseTechniqueParams {\n    /**\n     * Color of segments in a hexadecimal notation, for example: `\"#e4e9ec\"` or `\"#fff\"`.\n     * @format color-hex\n     */\n    color: DynamicProperty<StyleColor>;\n    /**\n     * Set to `true` if line should appear transparent. Rendering transparent lines may come with a\n     * slight performance impact.\n     */\n    transparent?: boolean;\n    /**\n     * For transparent lines, set a value between `0.0` for fully transparent, to `1.0` for fully\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * Width of a line in meters.\n     */\n    lineWidth: DynamicProperty<number>;\n}\n\n/**\n * Declares a a geometry as a polygon.\n */\nexport interface PolygonalTechniqueParams {\n    /**\n     * Whether to use polygon offset. Default is false. This corresponds to the\n     * GL_POLYGON_OFFSET_FILL WebGL feature.\n     *\n     * PolygonOffset is used to raise the geometry towards the geometry (for depth calculation\n     * only). Default is false.\n     *\n     * See here: https://sites.google.com/site/threejstuts/home/polygon_offset\n     *\n     * To activate polygonOffset these values have to be set to pull the line \"forwards\":\n     *\n     * transparent: true\n     *\n     * polygonOffset: true\n     *\n     * polygonOffsetFactor : -1.0, (as an example, see link above)\n     *\n     * polygonOffsetUnits: -1 (as an example, see link above)\n     */\n    polygonOffset?: boolean;\n\n    /**\n     * Sets the polygon offset factor. Default is 0.\n     */\n    polygonOffsetFactor?: DynamicProperty<number>;\n\n    /**\n     * Sets the polygon offset units. Default is 0.\n     */\n    polygonOffsetUnits?: DynamicProperty<number>;\n\n    /**\n     * Sets the polygon outline color.\n     * @format color-hex\n     */\n    lineColor?: DynamicProperty<StyleColor>;\n\n    /**\n     * Distance to the camera (0.0 = nearPlane, 1.0 = farPlane) at which the object edges start\n     * fading out.\n     */\n    lineFadeNear?: DynamicProperty<number>;\n\n    /**\n     * Distance to the camera (0.0 = nearPlane, 1.0 = farPlane) at which the object edges become\n     * transparent. A value of <= 0.0 disables fading.\n     */\n    lineFadeFar?: DynamicProperty<number>;\n}\n\n/**\n * Declares a a geometry as a basic extruded line.\n */\nexport interface BasicExtrudedLineTechniqueParams\n    extends BaseTechniqueParams,\n        PolygonalTechniqueParams {\n    /**\n     * A value determining the shading technique. Valid values are \"Basic\" and \"Standard\". Default\n     * is \"Basic\".\n     *\n     * `\"basic\"`   : Simple shading, faster to render. Only simple color and opacity are effective.\n     * `\"standard\"`: Elaborate shading, with metalness, and roughness.\n     *\n     * TODO: is this TechniqueParams or Style prop ?\n     */\n    shading?: \"basic\";\n    /**\n     * Color of a line in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    color: DynamicProperty<StyleColor>;\n    /**\n     * Set to `true` if line should appear transparent. Rendering transparent lines may come with a\n     * slight performance impact.\n     */\n    transparent?: boolean;\n    /**\n     * For transparent lines, set a value between 0.0 for totally transparent, to 1.0 for totally\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * Width of line in meters for different zoom levels.\n     */\n    lineWidth: DynamicProperty<number>;\n    /**\n     * A value of `true` creates a wireframe geometry. (May not be supported with all techniques).\n     */\n    wireframe?: boolean;\n    /**\n     * Style of both end caps. Possible values: `\"None\"`, `\"Circle\"`. A value of undefined maps to\n     * `\"Circle\"`.\n     */\n    caps?: \"None\" | \"Circle\";\n}\n\n/**\n * Declares a a geometry as a standard extruded line.\n */\nexport interface StandardExtrudedLineTechniqueParams\n    extends StandardTechniqueParams,\n        PolygonalTechniqueParams {\n    /**\n     * A value determining the shading technique. Valid values are `\"basic\"` and `\"standard\"`.\n     * Default is `\"basic\"`.\n     *\n     * `\"basic\"` : Simple shading, faster to render. Only simple color and opacity are effective.\n     * `\"standard\"` : Elaborate shading, with metalness, and roughness.\n     */\n    shading: \"standard\";\n    /**\n     * Width of a line in meters for different zoom levels.\n     */\n    lineWidth: DynamicProperty<number>;\n    /**\n     * Style of both end caps. Possible values: `\"None\"`, `\"Circle\"`. A value of undefined maps to\n     * `\"Circle\"`.\n     */\n    caps?: \"None\" | \"Circle\";\n}\n\n/**\n * Declares a a geometry as a solid line.\n */\nexport interface SolidLineTechniqueParams extends BaseTechniqueParams, PolygonalTechniqueParams {\n    /**\n     * Color of a line in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    color: DynamicProperty<StyleColor>;\n    /**\n     * Color of a line outline in hexadecimal or CSS-style notation,\n     * for example: `\"#e4e9ec\"`, `\"#fff\"`, `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    outlineColor?: DynamicProperty<StyleColor>;\n    /**\n     * Set to `true` if line should appear transparent. Rendering transparent lines may come with a\n     * slight performance impact.\n     */\n    transparent?: boolean;\n    /**\n     * For transparent lines, set a value between `0.0` for fully transparent, to `1.0` for fully\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n    // TODO: Make pixel units default.\n    /**\n     * @deprecated Specify metrics units as part of the value instead.\n     * Units in which different size properties are specified. Either `Meter` (default) or `Pixel`.\n     */\n    metricUnit?: string;\n    /**\n     * Width of a line in `metricUnit` for different zoom levels.\n     */\n    lineWidth: DynamicProperty<StyleLength>;\n    /**\n     * Outline width of a line in `metricUnit`s for different zoom levels.\n     */\n    outlineWidth?: DynamicProperty<StyleLength>;\n    /**\n     * Clip the line outside the tile if `true`.\n     */\n    clipping?: boolean;\n    /**\n     * Describes line caps type (`\"None\"`, `\"Round\"`, `\"Square\"`, `\"TriangleOut\"`, `\"TriangleIn\"`).\n     * Default is `\"Round\"`.\n     */\n    caps?: LineCaps;\n    /**\n     * Color of secondary line geometry in hexadecimal or CSS-style notation, for example:\n     * `\"#e4e9ec\"`, `\"#fff\"`, `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    secondaryColor?: DynamicProperty<StyleColor>;\n    /**\n     * Width of secondary line geometry in `metricUnit`s for different zoom levels.\n     */\n    secondaryWidth?: DynamicProperty<StyleLength>;\n    /**\n     * The render order of the secondary line geometry object created using this technique.\n     */\n    secondaryRenderOrder?: number;\n    /**\n     * Describes secondary line caps type (`\"None\"`, `\"Round\"`, `\"Square\"`, `\"TriangleOut\"`,\n     * `\"TriangleIn\"`).\n     * Default is `\"Round\"`.\n     */\n    secondaryCaps?: LineCaps;\n    /**\n     * Describes the category of the secondary geometry object created using this technique.\n     */\n    secondaryCategory?: number;\n    /**\n     * Describes the starting drawing position for the line (in the range [0...1]).\n     * Default is `0.0`.\n     */\n    drawRangeStart?: number;\n    /**\n     * Describes the ending drawing position for the line (in the range [0...1]).\n     * Default is `1.0`.\n     */\n    drawRangeEnd?: number;\n    /**\n     * Describes line dash type (`\"Round\"`, `\"Square\"`, `\"Diamond\"`).\n     * Default is `\"Square\"`.\n     */\n    dashes?: LineDashes;\n    /**\n     * Color of a line dashes in hexadecimal or CSS-style notation,\n     * for example: `\"#e4e9ec\"`, `\"#fff\"`, `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    dashColor?: DynamicProperty<StyleColor>;\n    /**\n     * Length of a line in meters for different zoom levels.\n     */\n    dashSize?: DynamicProperty<StyleLength>;\n    /**\n     * Size of a gap between lines in meters for different zoom levels.\n     */\n    gapSize?: DynamicProperty<StyleLength>;\n    /**\n     * Size in world units how far to offset the line perpendicular to its direction.\n     */\n    offset?: number;\n}\n\n/**\n * Technique used to draw filled polygons.\n */\nexport interface FillTechniqueParams extends BaseTechniqueParams, PolygonalTechniqueParams {\n    /**\n     * Fill color in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    color?: DynamicProperty<StyleColor>;\n    /**\n     * Set to `true` if line should appear transparent. Rendering transparent lines may come with a\n     * slight performance impact.\n     */\n    transparent?: boolean;\n    /**\n     * For transparent lines, set a value between `0.0` for fully transparent, to `1.0` for fully\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * A value of `true` creates a wireframe geometry. (May not be supported with all techniques).\n     */\n    wireframe?: boolean;\n    /**\n     * Width of the lines. Currently limited to the [0, 1] range.\n     */\n    lineWidth?: DynamicProperty<number>;\n}\n\n/**\n * Technique used to draw a geometry as an extruded polygon, for example extruded buildings.\n */\nexport interface ExtrudedPolygonTechniqueParams extends StandardTechniqueParams {\n    /**\n     * Renders the footprint lines if set to 'true'.\n     */\n    footprint?: boolean;\n    /**\n     * Set to a negative value to remove all the vertical lines, and to a value between 0.0 and 1.0\n     * to modulate the amount of vertical lines rendered.\n     */\n    maxSlope?: number;\n    /**\n     * Width of the lines. Currently limited to the [0, 1] range.\n     */\n    lineWidth: DynamicProperty<number>;\n    /**\n     * Fill color in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    lineColor?: DynamicProperty<StyleColor>;\n    /**\n     * Mix value between the lineColor(0.0) and the geometry's vertex colors(1.0).\n     */\n    lineColorMix?: number;\n\n    /**\n     * Distance to the camera (0.0 = nearPlane, 1.0 = farPlane) at which the object edges start\n     * fading out.\n     */\n    lineFadeNear?: DynamicProperty<number>;\n    /**\n     * Distance to the camera (0.0 = nearPlane, 1.0 = farPlane) at which the object edges become\n     * transparent. A value of <= 0.0 disables fading.\n     */\n    lineFadeFar?: DynamicProperty<number>;\n\n    /**\n     * Height above ground in world units of extruded polygon.\n     *\n     * Usually, unique per feature, so defaults to `[\"get\", \"height\"]`.\n     */\n    height?: number;\n\n    /**\n     * Height of \"floor\" of extruded polygon in world units of extruded polygon.\n     *\n     * Usually, unique per feature, so defaults to `[\"number\", [\"get\", \"min_height\"], 0]`.\n     */\n    floorHeight?: number;\n\n    /**\n     * In some data sources, for example Tilezen, building extrusion information might be missing.\n     * This attribute allows to define a default height of an extruded polygon in the theme.\n     *\n     * @deprecated use [[height]]\n     */\n    defaultHeight?: number;\n\n    /**\n     * Default color used if feature doesn't provide color attribute\n     * and [[MapEnv]] did not return it too.\n     * @format color-hex\n     */\n    defaultColor?: DynamicProperty<StyleColor>;\n\n    /**\n     * If `true`, the height of the extruded buildings will not be modified by the mercator\n     * projection distortion that happens around the poles.\n     *\n     * @default `false`\n     */\n    constantHeight?: boolean;\n\n    /**\n     * If `false`, wall geometry will not be added along the tile boundaries.\n     * @default `true`\n     */\n    boundaryWalls?: boolean;\n\n    /**\n     * Animate the extrusion of the buildings if set to `true`.\n     */\n    animateExtrusion?: DynamicProperty<boolean>;\n\n    /**\n     * Duration of the building's extrusion in milliseconds\n     */\n    animateExtrusionDuration?: number;\n\n    /**\n     * Control rendering of depth prepass before the actual geometry.\n     *\n     * Depth prepass is a method to render translucent meshes, hence only the visible front faces of\n     * a mesh are actually rendered, removing artifacts caused by blending with internal faces of\n     * the mesh. This method is used for drawing translucent buildings over map background.\n     *\n     * By default, each [[DataSource]] determines how/if enable the depth pre-pass. A value of\n     * `false` forcefully disables depth prepass.\n     */\n    enableDepthPrePass?: boolean;\n}\n\nexport interface ShaderTechniqueMaterialParameters {\n    [name: string]: any;\n}\n\n/**\n * Special technique for user-defined shaders. See\n * https://threejs.org/docs/#api/harp-materials/ShaderMaterial for details.\n */\nexport interface ShaderTechniqueParams extends BaseTechniqueParams {\n    /**\n     * Parameters for shader. See `THREE.ShaderMaterialParameters`.\n     */\n    params: ShaderTechniqueMaterialParameters;\n\n    /**\n     * Type of primitive for the shader technique. Valid values are \"point\" | \"line\" | \"segments\" |\n     * \"mesh\"\n     */\n    primitive: \"point\" | \"line\" | \"segments\" | \"mesh\";\n}\n\n/**\n * Technique used to render a terrain geometry with a texture.\n * When using this technique, the datasource will produce texture coordinates in\n * local tile space (i.e. [0,0] at south-west and [1,1] at north-east tile corner).\n */\nexport interface TerrainTechniqueParams extends StandardTechniqueParams {\n    /**\n     * Colors to be applied at different heights (as a results of a `displacementMap`).\n     */\n    heightBasedColors?: HeightBasedColors;\n\n    /**\n     * If `heightBasedColors` is defined, this value defines the interpolation method used to\n     * generate the height-based gradient texture (defaults to `Discrete`).\n     */\n    heightGradientInterpolation?: \"Discrete\" | \"Linear\" | \"Cubic\";\n\n    /**\n     * If `heightBasedColors` is defined, this value defines the width (in pixels) of the generated\n     * gradient texture (defaults to `128`).\n     */\n    heightGradientWidth?: number;\n}\n\n/**\n * Render geometry as a text.\n */\nexport interface TextTechniqueParams extends BaseTechniqueParams {\n    /**\n     * Text to be displayed for feature.\n     *\n     * Defaults to first defined:\n     *  - feature property `label` if present in technique (depreacted);\n     *  - `[\"get\", \"name:short\"]` is `useAbbreviation` is true;\n     *  - `[\"get\", \"iso_code\"]` is `useIsoCode` is true;\n     *  - `[\"get\", \"name:$LANGUAGE\"]` for each specified language;\n     *  - `[\"get\", \"name\"]`.\n     *\n     * See [[ExtendedTileInfo.getFeatureText]].\n     */\n    text?: string;\n\n    /**\n     * Field name of object containing the text to be rendered.\n     *\n     * @deprecated, Use `[\"get\", \"FIELD\"]`.\n     */\n    label?: string;\n    /**\n     * If `true`, the abbreviation (field `name:short`) of the elements is used as text.\n     *\n     * @deprecated Use proper expression with [`get`, `name:short`] for this purpose.\n     */\n    useAbbreviation?: boolean;\n    /**\n     * If `true`, the iso code (field 'iso_code') of the elements is used as text.\n     * The `iso_code` field contains the ISO 3166-1 2-letter country code.\n     *\n     * @deprecated Use proper expression with [`get`, `iso_code`] for this purpose.\n     */\n    useIsoCode?: boolean;\n    /**\n     * Priority of text, defaults to `0`. Elements with highest priority get placed first.\n     */\n    priority?: DynamicProperty<number>;\n    /**\n     * Minimal zoom level. If the current zoom level is smaller, the technique will not be used.\n     */\n    minZoomLevel?: number;\n    /**\n     * Maximum zoom level. If the current zoom level is larger, the technique will not be used.\n     */\n    maxZoomLevel?: number;\n    /**\n     * Scaling factor of the text. Defaults to 0.5, reducing the size ot 50% in the distance.\n     */\n    distanceScale?: number;\n    /**\n     * If `true`, icon is allowed to overlap other labels or icons of lower priority.\n     * @default `false`\n     */\n    mayOverlap?: boolean;\n    /**\n     * If `true`, element will reserve screen space, other markers of lower priority will not be\n     * able to overlap.\n     * @default `true`\n     */\n    reserveSpace?: boolean;\n    /**\n     * Fading time for labels in seconds.\n     */\n    textFadeTime?: number;\n    /**\n     * Horizontal offset (to the right) in screen pixels.\n     */\n    xOffset?: number;\n    /**\n     * Vertical offset (up) in screen pixels.\n     */\n    yOffset?: number;\n    /**\n     * Name of the text style.\n     */\n    style?: string;\n    /**\n     * Name of the preferred [[Font]] to be used when rendering.\n     */\n    fontName?: string;\n    /**\n     * Size of the text (pixels).\n     */\n    size?: DynamicProperty<number>;\n    /**\n     * Size of the text background (pixels).\n     */\n    backgroundSize?: DynamicProperty<number>;\n    /**\n     * Glyph style to apply for the currently active [[Font]].\n     */\n    fontStyle?: \"Regular\" | \"Bold\" | \"Italic\" | \"BoldItalic\";\n    /**\n     * Glyph variant to apply for the currently active [[Font]].\n     */\n    fontVariant?: \"Regular\" | \"AllCaps\" | \"SmallCaps\";\n    /**\n     * Glyph local rotation (radians).\n     */\n    rotation?: number;\n    /**\n     * Text color in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    color?: DynamicProperty<StyleColor>;\n    /**\n     * Text background color in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`,\n     * `\"#fff\"`, `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    backgroundColor?: DynamicProperty<StyleColor>;\n    /**\n     * For transparent text, set a value between 0.0 for totally transparent, to 1.0 for totally\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * Background text opacity value.\n     */\n    backgroundOpacity?: DynamicProperty<number>;\n    /**\n     * Inter-glyph spacing (pixels). Scaled by `size`.\n     */\n    tracking?: DynamicProperty<number>;\n    /**\n     * Inter-line spacing (pixels). Scaled by `size`.\n     */\n    leading?: DynamicProperty<number>;\n    /**\n     * Maximum number of lines for this label.\n     */\n    maxLines?: DynamicProperty<number>;\n    /**\n     * Maximum line width (pixels).\n     */\n    lineWidth?: DynamicProperty<number>;\n    /**\n     * [[TextCanvas]] rotation (radians).\n     */\n    canvasRotation?: DynamicProperty<number>;\n    /**\n     * Line typesetting rotation (radians).\n     */\n    lineRotation?: DynamicProperty<number>;\n    /**\n     * Wrapping (line-breaking) mode.\n     */\n    wrappingMode?: DynamicProperty<\"None\" | \"Character\" | \"Word\">;\n    /**\n     * Text position regarding the baseline.\n     */\n    hAlignment?: DynamicProperty<\"Left\" | \"Center\" | \"Right\">;\n    /**\n     * Text position inside a line.\n     */\n    vAlignment?: DynamicProperty<\"Above\" | \"Center\" | \"Below\">;\n}\n\n/**\n * Buffer holding a texture.\n */\nexport interface TextureBuffer {\n    /**\n     * Buffer containing the (compressed) image or the raw texture data.\n     */\n    buffer: ArrayBuffer;\n\n    /**\n     * Mime type of the image or 'image/raw' in case of raw texture data.\n     */\n    type: string;\n\n    /**\n     * Properties for creating a three.js DataTexture\n     * (https://threejs.org/docs/#api/en/textures/DataTexture).\n     */\n    dataTextureProperties?: DataTextureProperties;\n}\n\n/**\n * Type guard to check if an object is an instance of `TextureBuffer`.\n */\nexport function isTextureBuffer(object: any): object is TextureBuffer {\n    return object && object.buffer && typeof object.type === \"string\";\n}\n\n/**\n * Properties of a DataTexture (https://threejs.org/docs/#api/en/textures/DataTexture).\n */\nexport interface DataTextureProperties {\n    width: number;\n    height: number;\n\n    format?: PixelFormat;\n    type?: TextureDataType;\n}\n\n/**\n * Properties of a Texture (https://threejs.org/docs/#api/en/textures/Texture).\n */\nexport interface TextureProperties {\n    /**\n     * Texture horizontal wrapping mode.\n     * See: https://threejs.org/docs/#api/en/textures/Texture.wrapS.\n     */\n    wrapS?: WrappingMode;\n\n    /**\n     * Texture vertical wrapping mode.\n     * See: https://threejs.org/docs/#api/en/textures/Texture.wrapT.\n     */\n    wrapT?: WrappingMode;\n\n    /**\n     * Texture magnification filter.\n     */\n    magFilter?: MagFilter;\n\n    /**\n     * Texture minification filter.\n     */\n    minFilter?: MinFilter;\n\n    /**\n     * Flip texture vertically.\n     * See: https://threejs.org/docs/#api/en/textures/Texture.flipY.\n     */\n    flipY?: boolean;\n\n    /**\n     * Texture horizontal repetition rate.\n     * See: https://threejs.org/docs/#api/en/textures/Texture.repeat.\n     */\n    repeatU?: number;\n\n    /**\n     * Texture vertical repetition rate.\n     * See: https://threejs.org/docs/#api/en/textures/Texture.repeat.\n     */\n    repeatV?: number;\n}\n\n/**\n * Interface containing the definition of different colors to be used at different heights with the\n * [[TerrainTechnique]].\n */\nexport interface HeightBasedColors {\n    heightArray: number[];\n    colorArray: string[];\n}\n\nexport type PixelFormat =\n    | \"Alpha\"\n    | \"RGB\"\n    | \"RGBA\"\n    | \"Luminance\"\n    | \"LuminanceAlpha\"\n    | \"RGBE\"\n    | \"Depth\"\n    | \"DepthStencil\"\n    | \"Red\";\n\nexport type TextureDataType =\n    | \"UnsignedByte\"\n    | \"Byte\"\n    | \"Short\"\n    | \"UnsignedShort\"\n    | \"Int\"\n    | \"UnsignedInt\"\n    | \"Float\"\n    | \"HalfFloat\";\n\n/**\n * Available texture wrapping modes.\n */\nexport type WrappingMode = \"clamp\" | \"repeat\" | \"mirror\";\n\n/**\n * Available texture magnification filters.\n */\nexport type MagFilter = \"nearest\" | \"linear\";\n\n/**\n * Available texture minification filters.\n */\nexport type MinFilter =\n    | \"nearest\"\n    | \"nearestMipMapNearest\"\n    | \"nearestMipMapLinear\"\n    | \"linear\"\n    | \"linearMipMapNearest\"\n    | \"linearMipMapLinear\";\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Technique } from \"./Techniques\";\n\nexport enum AttrScope {\n    /**\n     * Attributes that affect generation of feature geometry and thus must be resolved at decoding\n     * time.\n     *\n     * They may have huge variancy as they are implemented as vertex attributes or embedded in\n     * generated meshes.\n     *\n     * These attributes are available only in decoding scope.\n     */\n    FeatureGeometry,\n\n    /**\n     * Attributes that are common to whole group of features drawn with this technique.\n     * These attributes affect generated geometry and  thus must be resolved at decoding time.\n     *\n     * They shouldn't have big variancy and evaluate to at least dozens of values as each\n     * combination of these attributes consitute new technique and material.\n     *\n     * These attributes are available in decoding and rendering scope.\n     */\n    TechniqueGeometry,\n\n    /**\n     * Attributes that are common to whole group of features drawn with this technique.\n     * Attributes that can be changed in resulting object/material from frame to frame. They are\n     * usually implemented as uniforms.\n     *\n     * These attributes may be available only at rendering scope.\n     */\n    TechniqueRendering\n}\n\n/**\n * Extract  property names from [[Technique]]-like interface (excluding `name`) as union of string\n * literals.\n *\n * TechniquePropName<Base\n *\n */\nexport type TechniquePropNames<T> = T extends { name: any } ? keyof Omit<T, \"name\"> : keyof T;\n\nexport type TechniquePropScopes<T> = {\n    [P in TechniquePropNames<T>]?: AttrScope;\n};\n\nexport interface TechniqueDescriptor<T> {\n    attrTransparencyColor?: string;\n    attrScopes: TechniquePropScopes<T>;\n}\n\ntype OneThatMatches<T, P> = T extends P ? T : never;\ntype TechniqueByName<K extends Technique[\"name\"]> = OneThatMatches<Technique, { name: K }>;\n\nexport type TechniqueDescriptorRegistry = {\n    [P in Technique[\"name\"]]?: TechniqueDescriptor<TechniqueByName<P>>;\n};\n\nexport function mergeTechniqueDescriptor<T>(\n    ...descriptors: Array<Partial<TechniqueDescriptor<T>>>\n): TechniqueDescriptor<T> {\n    const result: TechniqueDescriptor<T> = {\n        attrScopes: {}\n    };\n    for (const descriptor of descriptors) {\n        if (descriptor.attrTransparencyColor !== undefined) {\n            result.attrTransparencyColor = descriptor.attrTransparencyColor;\n        }\n        if (descriptor.attrScopes !== undefined) {\n            result.attrScopes = { ...result.attrScopes, ...descriptor.attrScopes };\n        }\n    }\n    return result;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    equirectangularProjection,\n    mercatorProjection,\n    normalizedEquirectangularProjection,\n    OrientedBox3,\n    Projection,\n    sphereProjection,\n    Vector3Like,\n    webMercatorProjection\n} from \"@here/harp-geoutils\";\nimport { Env } from \"./Expr\";\nimport { AttrEvaluationContext, evaluateTechniqueAttr } from \"./TechniqueAttr\";\nimport {\n    IndexedTechnique,\n    isLineMarkerTechnique,\n    isPoiTechnique,\n    isTextTechnique,\n    Technique\n} from \"./Techniques\";\nimport { TileInfo } from \"./TileInfo\";\n\n/**\n * This object has geometry data in the form of geometries buffers ready to be used by WebGL.\n * These geometries are not `three.js` objects. They are pure data stored as `ArrayBuffer`s and\n * metadata describing these buffers.\n */\nexport interface DecodedTile {\n    techniques: IndexedTechnique[];\n    geometries: Geometry[];\n    pathGeometries?: PathGeometry[];\n    textPathGeometries?: TextPathGeometry[];\n    textGeometries?: TextGeometry[]; // ### deprecate\n    poiGeometries?: PoiGeometry[];\n    tileInfo?: TileInfo;\n    decodeTime?: number; // time used to decode (in ms)\n\n    /**\n     * The default bounding box in [[Tile]] is based on the geo box of the tile.\n     * For data-sources that have 3d data this is not sufficient so the data-source can provide a\n     * more accurate bounding box once the data is decoded.\n     */\n    boundingBox?: OrientedBox3;\n\n    /**\n     * Data sources not defining a bounding box may define alternatively a maximum geometry height\n     * in meters. The bounding box of the resulting tile will be extended to encompass this height.\n     */\n    maxGeometryHeight?: number;\n\n    /**\n     * Tile data Copyright holder identifiers.\n     *\n     * `id`s should be unique. It is recommended to build them from unique identifiers like\n     * registered domain names.\n     *\n     * @see [[CopyrightInfo]]\n     */\n    copyrightHolderIds?: string[];\n}\n\n/**\n * This object keeps the path of the geometry. Space of the path depends on the\n * use case, so could be either world or local tile space.\n */\nexport interface PathGeometry {\n    path: Vector3Like[];\n}\n\n/**\n * Attributes corresponding to some decoded geometry. It may be either a map\n * of multiple attributes or just a number with the geometry's feature id.\n */\nexport type AttributeMap = {} | number;\n\n/**\n * This object keeps textual data together with metadata to place it on the map.\n */\nexport interface TextPathGeometry {\n    path: number[];\n    pathLengthSqr: number;\n    text: string;\n    technique: number;\n    objInfos?: AttributeMap;\n}\n\n/**\n * Returns an array with the data type specified as parameter.\n *\n * @param attr specifies which type of data is being stored in the array\n */\nexport function getArrayConstructor(attr: BufferElementType) {\n    switch (attr) {\n        case \"float\":\n            return Float32Array;\n        case \"uint8\":\n            return Uint8Array;\n        case \"uint16\":\n            return Uint16Array;\n        case \"uint32\":\n            return Uint32Array;\n        case \"int8\":\n            return Int8Array;\n        case \"int16\":\n            return Int16Array;\n        case \"int32\":\n            return Int32Array;\n    }\n}\n\n/**\n * Structured clone compliant WebGL interleaved buffer with its metadata attached.\n */\nexport interface InterleavedBufferAttribute {\n    buffer: ArrayBufferLike;\n    stride: number;\n    type: BufferElementType;\n    attributes: Array<{\n        name: string;\n        itemSize: number;\n        offset: number;\n    }>;\n}\n\n/**\n * Geometry types supported by [[Geometry]] objects.\n */\nexport enum GeometryType {\n    Unspecified = 0,\n    Point,\n    Line,\n    SolidLine,\n    Text,\n    TextPath,\n    ExtrudedLine,\n    Polygon,\n    ExtrudedPolygon,\n    Object3D,\n    Other = 1000\n}\n\n/**\n * Structured clone compliant version of a `three.js` geometry object, consisting of buffers with\n * metadata for map features and objects for example roads, trees or parks.\n */\nexport interface Geometry {\n    type: GeometryType;\n    vertexAttributes?: BufferAttribute[];\n    interleavedVertexAttributes?: InterleavedBufferAttribute[];\n    index?: BufferAttribute;\n    edgeIndex?: BufferAttribute;\n    groups: Group[];\n    uuid?: string;\n\n    /**\n     * Optional sorted list of feature start indices. The indices point into the index attribute.\n     * Feature i starts at featureStarts[i] and ends at featureStarts[i+1]-1, except for the last\n     * feature, which ends at index[index.length-1].\n     */\n    featureStarts?: number[];\n\n    /**\n     * Optional array of objects. It can be used to pass user data from the geometry to the mesh.\n     */\n    objInfos?: AttributeMap[];\n\n    /**\n     * Optional [[Array]] of [[Attachment]]s.\n     */\n    attachments?: Attachment[];\n}\n\n/**\n * Attachments together with [[Geometry]] define the meshes and the objects\n * of a [[Scene]].\n */\nexport interface Attachment {\n    /**\n     * The unique uuid of this [[Attachment]].\n     */\n    uuid?: string;\n\n    /**\n     * The name of this [[Attachment]].\n     */\n    name?: string;\n\n    /**\n     * The index [[BufferAttribute]]. If not provided the index\n     * buffer of the [[Geometry]] will be used.\n     */\n    index?: BufferAttribute;\n\n    /**\n     * Optional additional buffer index used to create an edge object.\n     */\n    edgeIndex?: BufferAttribute;\n\n    /**\n     * The draw [[Group]]]s of this [[Attachment]].\n     */\n    groups: Group[];\n}\n\n/**\n * The data stored in Buffers' elements can be of the following elementary types: float, signed or\n * unsigned integers (8-bit, 16-bit or 32-bit long).\n */\nexport type BufferElementType =\n    | \"float\"\n    | \"uint8\"\n    | \"uint16\"\n    | \"uint32\"\n    | \"int8\"\n    | \"int16\"\n    | \"int32\";\n\n/**\n * Structured clone compliant WebGL buffer and its metadata.\n */\nexport interface BufferAttribute {\n    name: string;\n    buffer: ArrayBufferLike;\n    type: BufferElementType;\n    itemCount: number;\n    normalized?: boolean;\n}\n\n/**\n * Structured clone compliant version of a `three.js` geometry object with text to be rendered.\n * It is composed of buffers with metadata for text objects.\n */\nexport interface TextGeometry {\n    positions: BufferAttribute;\n    texts: number[];\n    technique?: number;\n    stringCatalog?: Array<string | undefined>;\n    objInfos?: AttributeMap[];\n}\n\n/**\n * Structured clone compliant version of a `three.js` geometry object with points of interest (POIs)\n * to be rendered. It is composed of buffers with metadata for POI objects.\n */\nexport interface PoiGeometry {\n    positions: BufferAttribute;\n    texts: number[];\n    /**\n     * Names of the image texture or the name of the POI as indices into the array `stringCatalog`.\n     */\n    imageTextures?: number[];\n    technique?: number;\n    stringCatalog?: Array<string | undefined>;\n    objInfos?: AttributeMap[];\n}\n\n/**\n * Structured clone compliant WebGL group object and its metadata.\n * Its purpose is to make working with groups of objects easier.\n */\nexport interface Group {\n    start: number;\n    count: number;\n    technique: number;\n\n    /**\n     * Contains tile offsets if its [[Geometry]] has been created.\n     */\n    createdOffsets?: number[];\n}\n\n/**\n * Returns the projection object specified in the parameter.\n *\n * @param projectionName string describing projection to be used\n */\nexport function getProjection(projectionName: string): Projection | never {\n    switch (projectionName) {\n        case \"mercator\":\n            return mercatorProjection;\n        case \"webMercator\":\n            return webMercatorProjection;\n        case \"sphere\":\n            return sphereProjection;\n        case \"normalizedEquirectangular\":\n            return normalizedEquirectangularProjection;\n        case \"equirectangular\":\n            return equirectangularProjection;\n        default:\n            throw new Error(`Unknown projection ${projectionName}`);\n    } // switch\n}\n\n/**\n * String with the projection's name.\n *\n * @param projection `Projection` object containing the name of the projection to retrieve\n */\nexport function getProjectionName(projection: Projection): string | never {\n    if (projection === mercatorProjection) {\n        return \"mercator\";\n    } else if (projection === webMercatorProjection) {\n        return \"webMercator\";\n    } else if (projection === sphereProjection) {\n        return \"sphere\";\n    } else if (projection === normalizedEquirectangularProjection) {\n        return \"normalizedEquirectangular\";\n    } else if (projection === equirectangularProjection) {\n        return \"equirectangular\";\n    }\n    throw new Error(\"Unknown projection\");\n}\n\n/**\n * @returns Feature id from the provided attribute map.\n */\nexport function getFeatureId(attributeMap: AttributeMap | undefined): number {\n    if (attributeMap === undefined) {\n        return 0;\n    }\n\n    if (typeof attributeMap === \"number\") {\n        return attributeMap;\n    }\n\n    if (attributeMap.hasOwnProperty(\"$id\")) {\n        return (attributeMap as any).$id as number;\n    }\n\n    return 0;\n}\n\n/**\n * Determine the name of (OMV) feature. It implements the special handling required\n * to determine the text content of a feature from its tags, which are passed in as the `env`.\n *\n * @param env Environment containing the tags from the (OMV) feature.\n * @param useAbbreviation `true` to use the abbreviation if available.\n * @param useIsoCode `true` to use the tag \"iso_code\".\n * @param languages List of languages to use, for example: Specify \"en\" to use the tag \"name_en\"\n *                  as the text of the string. Order reflects priority.\n */\nexport function getFeatureName(\n    env: Env,\n    useAbbreviation?: boolean,\n    useIsoCode?: boolean,\n    languages?: string[]\n): string | undefined {\n    let name;\n    if (useAbbreviation) {\n        const abbreviation = env.lookup(`name:short`);\n        if (typeof abbreviation === \"string\" && abbreviation.length > 0) {\n            return abbreviation;\n        }\n    }\n    if (useIsoCode) {\n        const isoCode = env.lookup(`iso_code`);\n        if (typeof isoCode === \"string\" && isoCode.length > 0) {\n            return isoCode;\n        }\n    }\n    if (languages !== undefined) {\n        for (const lang of languages) {\n            name = env.lookup(`name:${lang}`) || env.lookup(`name_${lang}`);\n            if (typeof name === \"string\" && name.length > 0) {\n                return name;\n            }\n        }\n    }\n    name = env.lookup(\"name\");\n    if (typeof name === \"string\") {\n        return name;\n    }\n    return undefined;\n}\n\n/**\n * Determine the text string of the map feature. It implements the special handling required\n * to determine the text content of a feature from its tags, which are passed in as the `env`.\n *\n * @param feature Feature, including properties from the (OMV) feature.\n * @param technique technique defining how text should be created from feature\n * @param languages List of languages to use, for example: Specify \"en\" to use the tag \"name_en\"\n *                  as the text of the string. Order reflects priority.\n */\nexport function getFeatureText(\n    context: Env | AttrEvaluationContext,\n    technique: Technique,\n    languages?: string[]\n): string | undefined {\n    let useAbbreviation: boolean | undefined;\n    let useIsoCode: boolean | undefined;\n    const env = context instanceof Env ? context : context.env;\n    if (\n        isTextTechnique(technique) ||\n        isPoiTechnique(technique) ||\n        isLineMarkerTechnique(technique)\n    ) {\n        if (technique.text !== undefined) {\n            return evaluateTechniqueAttr(context, technique.text);\n        }\n        // tslint:disable-next-line: deprecation\n        if (technique.label !== undefined) {\n            // tslint:disable-next-line: deprecation\n            const attributeName = evaluateTechniqueAttr(context, technique.label);\n            if (typeof attributeName !== \"string\") {\n                return undefined;\n            }\n            const name = env.lookup(attributeName);\n            return typeof name === \"string\" ? name : undefined;\n        }\n        // tslint:disable-next-line: deprecation\n        useAbbreviation = technique.useAbbreviation;\n        // tslint:disable-next-line: deprecation\n        useIsoCode = technique.useIsoCode;\n    }\n\n    return getFeatureName(env, useAbbreviation, useIsoCode, languages);\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Represents an object with `GeoCoordinates` like interface.\n */\nexport interface GeoCoordinatesLike {\n    /** The latitude in degrees. */\n    latitude: number;\n\n    /** The longitude in degrees. */\n    longitude: number;\n\n    /** The optional altitude in meters. */\n    altitude?: number;\n}\n\n/**\n * Type guard to assert that `object` conforms to [[GeoCoordinatesLike]] data interface.\n */\nexport function isGeoCoordinatesLike(object: any): object is GeoCoordinatesLike {\n    return (\n        object &&\n        typeof object.latitude === \"number\" &&\n        typeof object.longitude === \"number\" &&\n        (typeof object.altitude === \"number\" || typeof object.altitude === \"undefined\")\n    );\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * An [[Array]] following the order longitude, latitude, altitude.\n */\nexport type GeoPointLike = [number, number, number?];\n\n/**\n * Type guard to assert that `object` conforms to [[GeoPointLike]] interface.\n */\nexport function isGeoPointLike(geoPoint: any): geoPoint is GeoPointLike {\n    if (Array.isArray(geoPoint)) {\n        const [longitude, latitude, altitude] = geoPoint;\n        return (\n            typeof longitude === \"number\" &&\n            typeof latitude === \"number\" &&\n            (altitude === undefined || typeof altitude === \"number\")\n        );\n    }\n    return false;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Represents an object with `LatLng` like interface.\n */\nexport interface LatLngLike {\n    /** The latitude in degrees. */\n    lat: number;\n\n    /** The longitude in degrees. */\n    lng: number;\n}\n\n/**\n * Type guard to assert that `object` conforms to [[LatLngLike]] interface.\n */\nexport function isLatLngLike(object: any): object is LatLngLike {\n    return object && typeof object.lat === \"number\" && typeof object.lng === \"number\";\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinates } from \"../coordinates/GeoCoordinates\";\nimport { GeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Box3Like, isBox3Like } from \"../math/Box3Like\";\nimport { MathUtils } from \"../math/MathUtils\";\nimport { isOrientedBox3Like, OrientedBox3Like } from \"../math/OrientedBox3Like\";\nimport { Vector3Like } from \"../math/Vector3Like\";\nimport { EarthConstants } from \"./EarthConstants\";\nimport { Projection, ProjectionType } from \"./Projection\";\n\nimport * as THREE from \"three\";\n\nclass EquirectangularProjection extends Projection {\n    static geoToWorldScale: number = 1.0 / (2.0 * Math.PI);\n    static worldToGeoScale: number = (2.0 * Math.PI) / 1.0;\n\n    /** @override */\n    readonly type: ProjectionType = ProjectionType.Planar;\n\n    /** @override */\n    getScaleFactor(_worldPoint: Vector3Like): number {\n        return 1;\n    }\n\n    /** @override */\n    worldExtent<WorldBoundingBox extends Box3Like>(\n        minAltitude: number,\n        maxAltitude: number,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        if (!result) {\n            result = (new THREE.Box3() as Box3Like) as WorldBoundingBox;\n        }\n        result.min.x = 0.0;\n        result.min.y = 0.0;\n        result.min.z = minAltitude;\n        result.max.x = this.unitScale;\n        result.max.y = this.unitScale / 2;\n        result.max.z = maxAltitude;\n        return result;\n    }\n\n    /** @override */\n    projectPoint<WorldCoordinates extends Vector3Like>(\n        geoPoint: GeoCoordinatesLike,\n        result?: WorldCoordinates\n    ): WorldCoordinates {\n        if (result === undefined) {\n            /*\n             * The following tslint:disable is due to the fact that the [[WorldCoordinates]]\n             * might be a concrete class which is not available at runtime.\n             * Consider the following example:\n             *\n             *  const x: THREE.Vector3 = new THREE.Vector3(0,0,0);\n             *  const result = EquirectangularProjection.projectPoint<THREE.Vector3>(x);\n             *\n             * Note: type of `result` is Vector3Like and not as expected: THREE.Vector3!\n             */\n            // tslint:disable-next-line:no-object-literal-type-assertion\n            result = { x: 0, y: 0, z: 0 } as WorldCoordinates;\n        }\n        result.x =\n            (THREE.MathUtils.degToRad(geoPoint.longitude) + Math.PI) *\n            EquirectangularProjection.geoToWorldScale *\n            this.unitScale;\n        result.y =\n            (THREE.MathUtils.degToRad(geoPoint.latitude) + Math.PI * 0.5) *\n            EquirectangularProjection.geoToWorldScale *\n            this.unitScale;\n        result.z = geoPoint.altitude || 0;\n        return result;\n    }\n\n    /** @override */\n    unprojectPoint(worldPoint: Vector3Like): GeoCoordinates {\n        const geoPoint = GeoCoordinates.fromRadians(\n            (worldPoint.y * EquirectangularProjection.worldToGeoScale) / this.unitScale -\n                Math.PI * 0.5,\n            (worldPoint.x * EquirectangularProjection.worldToGeoScale) / this.unitScale - Math.PI,\n            worldPoint.z\n        );\n        return geoPoint;\n    }\n\n    /** @override */\n    unprojectAltitude(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    projectBox<WorldBoundingBox extends Box3Like | OrientedBox3Like>(\n        geoBox: GeoBox,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        const worldCenter = this.projectPoint(\n            new GeoCoordinates(geoBox.center.latitude, geoBox.center.longitude, 0)\n        );\n        const { latitudeSpanInRadians, longitudeSpanInRadians, altitudeSpan } = geoBox;\n        const sizeX = longitudeSpanInRadians * EquirectangularProjection.geoToWorldScale;\n        const sizeY = latitudeSpanInRadians * EquirectangularProjection.geoToWorldScale;\n        if (!result) {\n            result = (new THREE.Box3() as Box3Like) as WorldBoundingBox;\n        }\n        if (isBox3Like(result)) {\n            result.min.x = worldCenter.x - sizeX * 0.5 * this.unitScale;\n            result.min.y = worldCenter.y - sizeY * 0.5 * this.unitScale;\n            result.max.x = worldCenter.x + sizeX * 0.5 * this.unitScale;\n            result.max.y = worldCenter.y + sizeY * 0.5 * this.unitScale;\n            if (altitudeSpan !== undefined) {\n                result.min.z = worldCenter.z - altitudeSpan * 0.5;\n                result.max.z = worldCenter.z + altitudeSpan * 0.5;\n            } else {\n                result.min.z = 0;\n                result.max.z = 0;\n            }\n        } else if (isOrientedBox3Like(result)) {\n            MathUtils.newVector3(1, 0, 0, result.xAxis);\n            MathUtils.newVector3(0, 1, 0, result.yAxis);\n            MathUtils.newVector3(0, 0, 1, result.zAxis);\n            result.position.x = worldCenter.x;\n            result.position.y = worldCenter.y;\n            result.position.z = worldCenter.z;\n            result.extents.x = sizeX * 0.5 * this.unitScale;\n            result.extents.y = sizeY * 0.5 * this.unitScale;\n            result.extents.z = Math.max(Number.EPSILON, (altitudeSpan || 0) * 0.5);\n        }\n        return result;\n    }\n\n    /** @override */\n    unprojectBox(worldBox: Box3Like): GeoBox {\n        const minGeo = this.unprojectPoint(worldBox.min);\n        const maxGeo = this.unprojectPoint(worldBox.max);\n        return GeoBox.fromCoordinates(minGeo, maxGeo);\n    }\n\n    /** @override */\n    groundDistance(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    scalePointToSurface(worldPoint: Vector3Like): Vector3Like {\n        worldPoint.z = 0;\n        return worldPoint;\n    }\n\n    /** @override */\n    surfaceNormal(_worldPoint: Vector3Like, normal?: Vector3Like) {\n        if (normal === undefined) {\n            normal = { x: 0, y: 0, z: 1 };\n        } else {\n            normal.x = 0;\n            normal.y = 0;\n            normal.z = 1;\n        }\n        return normal;\n    }\n}\n\n/**\n * Equirectangular [[Projection]] used to convert geo coordinates to unit coordinates and vice\n * versa.\n */\nexport const normalizedEquirectangularProjection: Projection = new EquirectangularProjection(1);\n\n/**\n * Equirectangular [[Projection]] used to convert geo coordinates to world coordinates and vice\n * versa.\n */\nexport const equirectangularProjection: Projection = new EquirectangularProjection(\n    EarthConstants.EQUATORIAL_CIRCUMFERENCE\n);\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinates } from \"../coordinates/GeoCoordinates\";\nimport { GeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Box3Like, isBox3Like } from \"../math/Box3Like\";\nimport { MathUtils } from \"../math/MathUtils\";\nimport { isOrientedBox3Like, OrientedBox3Like } from \"../math/OrientedBox3Like\";\nimport { Vector3Like } from \"../math/Vector3Like\";\nimport { EarthConstants } from \"./EarthConstants\";\nimport { Projection, ProjectionType } from \"./Projection\";\n\nimport * as THREE from \"three\";\n\n/**\n *\n * https://en.wikipedia.org/wiki/Transverse_Mercator_projection\n * http://mathworld.wolfram.com/MercatorProjection.html\n *\n */\nclass TransverseMercatorProjection extends Projection {\n    /**\n     * Like in regular Mercator projection, there are two points on sphere\n     * with radius about 5 degrees, that is out of projected space.\n     *\n     *\n     * in regular Mercator these points are:\n     *     (90, any), (-90, any)\n     *\n     * and in transverse Mercator:\n     *     (0, 90), (0, -90)\n     *\n     * So, in transverse we need to compute distnce to poles, and clamp if\n     * radius is exceeded\n     */\n    static clampGeoPoint(geoPoint: GeoCoordinatesLike, _unitScale: number) {\n        const lat = geoPoint.latitude;\n        const lon = geoPoint.longitude;\n\n        const r = TransverseMercatorUtils.POLE_RADIUS;\n        const rsq = TransverseMercatorUtils.POLE_RADIUS_SQ;\n\n        const nearestQuarter = Math.round(lon / 90);\n        const deltaLon = nearestQuarter * 90 - lon;\n        if (nearestQuarter % 2 === 0 || Math.abs(deltaLon) > r) {\n            return geoPoint;\n        }\n\n        const deltaLat = lat - 0;\n        const distanceToPoleSq = deltaLon * deltaLon + deltaLat * deltaLat;\n        if (distanceToPoleSq < rsq) {\n            const distanceToPole = Math.sqrt(distanceToPoleSq);\n            const scale = (r - distanceToPole) / distanceToPole;\n            // const quarter = ((nearestQuarter % 4) + 4) % 4;\n            // const dir = quarter === 1 ? -1 : quarter === 3 ? 1 : 0;\n            const dir = 1;\n            const offsetLon = deltaLon === 0 && deltaLat === 0 ? r * dir : deltaLon;\n            return new GeoCoordinates(lat + deltaLat * scale, lon + offsetLon * scale);\n        }\n\n        return geoPoint;\n    }\n\n    /** @override */\n    readonly type: ProjectionType = ProjectionType.Planar;\n\n    private m_phi0: number = 0;\n    private m_lambda0: number = 0;\n\n    constructor(readonly unitScale: number) {\n        super(unitScale);\n    }\n\n    /** @override */\n    getScaleFactor(worldPoint: Vector3Like): number {\n        return Math.cosh((worldPoint.x / this.unitScale - 0.5) * 2 * Math.PI);\n    }\n\n    /** @override */\n    worldExtent<WorldBoundingBox extends Box3Like>(\n        minAltitude: number,\n        maxAltitude: number,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        if (!result) {\n            result = (new THREE.Box3() as Box3Like) as WorldBoundingBox;\n        }\n        result.min.x = 0;\n        result.min.y = 0;\n        result.min.z = minAltitude;\n        result.max.x = this.unitScale;\n        result.max.y = this.unitScale;\n        result.max.z = maxAltitude;\n        return result;\n    }\n\n    /** @override */\n    projectPoint<WorldCoordinates extends Vector3Like>(\n        geoPoint: GeoCoordinatesLike,\n        result?: WorldCoordinates\n    ): WorldCoordinates {\n        if (!result) {\n            // tslint:disable-next-line:no-object-literal-type-assertion\n            result = { x: 0, y: 0, z: 0 } as WorldCoordinates;\n        }\n\n        const clamped = TransverseMercatorProjection.clampGeoPoint(geoPoint, this.unitScale);\n        const normalLon = clamped.longitude / 360 + 0.5;\n        const offset = normalLon === 1 ? 0 : Math.floor(normalLon);\n        const phi = THREE.MathUtils.degToRad(clamped.latitude);\n        const lambda = THREE.MathUtils.degToRad(clamped.longitude - offset * 360) - this.m_lambda0;\n\n        const B = Math.cos(phi) * Math.sin(lambda);\n        // result.x = 1/2 * Math.log((1 + B) / (1 - B));\n        result.x = Math.atanh(B);\n        result.y = Math.atan2(Math.tan(phi), Math.cos(lambda)) - this.m_phi0;\n\n        const outScale = 0.5 / Math.PI;\n        result.x =\n            this.unitScale * (THREE.MathUtils.clamp(result.x * outScale + 0.5, 0, 1) + offset);\n        result.y = this.unitScale * THREE.MathUtils.clamp(result.y * outScale + 0.5, 0, 1);\n\n        result.z = geoPoint.altitude || 0;\n        return result;\n    }\n\n    /** @override */\n    unprojectPoint(worldPoint: Vector3Like): GeoCoordinates {\n        const tau = Math.PI * 2;\n        const nx = worldPoint.x / this.unitScale;\n        const ny = worldPoint.y / this.unitScale;\n        const offset = nx === 1 ? 0 : Math.floor(nx);\n        const x = tau * (nx - 0.5 - offset);\n        const y = tau * (ny - 0.5);\n        const z = worldPoint.z || 0;\n\n        const D = y + this.m_phi0;\n\n        const phi = Math.asin(Math.sin(D) / Math.cosh(x));\n        const lambda = this.m_lambda0 + Math.atan2(Math.sinh(x), Math.cos(D)) + offset * tau;\n\n        const geoPoint = GeoCoordinates.fromRadians(phi, lambda, z);\n        return geoPoint;\n    }\n\n    /** @override */\n    projectBox<WorldBoundingBox extends Box3Like | OrientedBox3Like>(\n        geoBox: GeoBox,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        const { north, south, east, west } = geoBox;\n\n        const pointsToCheck = [\n            geoBox.center,\n            geoBox.northEast,\n            geoBox.southWest,\n            new GeoCoordinates(south, east),\n            new GeoCoordinates(north, west)\n        ];\n\n        const E = TransverseMercatorUtils.POLE_EDGE_DEG;\n\n        const containsWestCut = west < -90 && east > -90;\n        const containsEastCut = west < 90 && east > 90;\n        const containsCenterX = west < 0 && east > 0;\n        const containsCenterY = west < E && east > -E && north > 0 && south < 0;\n\n        if (containsWestCut) {\n            pointsToCheck.push(new GeoCoordinates(north, -90));\n            pointsToCheck.push(new GeoCoordinates(south, -90));\n        }\n\n        if (containsEastCut) {\n            pointsToCheck.push(new GeoCoordinates(north, 90));\n            pointsToCheck.push(new GeoCoordinates(south, 90));\n        }\n\n        if (containsCenterX) {\n            pointsToCheck.push(new GeoCoordinates(north, 0));\n            pointsToCheck.push(new GeoCoordinates(south, 0));\n        }\n\n        if (containsCenterY) {\n            pointsToCheck.push(new GeoCoordinates(0, west));\n            pointsToCheck.push(new GeoCoordinates(0, east));\n        }\n\n        TransverseMercatorUtils.alignLatitude(pointsToCheck, pointsToCheck[0]);\n\n        const projected = pointsToCheck.map(p => this.projectPoint(p));\n        const vx = projected.map(p => p.x);\n        const vy = projected.map(p => p.y);\n        const vz = projected.map(p => p.z);\n\n        const minX = Math.min(...vx);\n        const minY = Math.min(...vy);\n        const minZ = Math.min(...vz);\n        const maxX = Math.max(...vx);\n        const maxY = Math.max(...vy);\n        const maxZ = Math.max(...vz);\n\n        if (!result) {\n            result = (new THREE.Box3() as Box3Like) as WorldBoundingBox;\n        }\n        if (isBox3Like(result)) {\n            result.min.x = minX;\n            result.min.y = minY;\n            result.min.z = minZ;\n            result.max.x = maxX;\n            result.max.y = maxY;\n            result.max.z = maxZ;\n        } else if (isOrientedBox3Like(result)) {\n            MathUtils.newVector3(1, 0, 0, result.xAxis);\n            MathUtils.newVector3(0, 1, 0, result.yAxis);\n            MathUtils.newVector3(0, 0, 1, result.zAxis);\n            result.position.x = (minX + maxX) / 2;\n            result.position.y = (minY + maxY) / 2;\n            result.position.z = (minZ + maxZ) / 2;\n            result.extents.x = (maxX - minX) / 2;\n            result.extents.y = (maxY - minY) / 2;\n            result.extents.z = (maxZ - minZ) / 2;\n        } else {\n            throw new Error(\"invalid bounding box\");\n        }\n        return result;\n    }\n\n    /**\n     * There are 8 sub-regions on entire projection space\n     * where both longitude and latitude preserve direction.\n     * If bounding box hits more than one region, it should be splitted\n     * into sub-boxes by regions, (un)projected and then united again.\n     *\n     *\n     * directions in form [latitude / longitude]:\n     *    1 ┌─────────|─────────┐\n     *      │ dr / dl | dl / ul │\n     * 0.75 ----------|----------\n     *      │ ur / dr | ul / ur │\n     * 0.5  ----------|----------\n     *      │ ul / ur | ur / dr │\n     * 0.25 ----------|----------\n     *      │ dl / ul | dr / dl │\n     *      └─────────|─────────┘\n     *     0         0.5        1\n     *     @override\n     */\n    unprojectBox(worldBox: Box3Like): GeoBox {\n        const s = this.unitScale;\n\n        const min = worldBox.min;\n        const max = worldBox.max;\n        const pointsToCheck = [\n            { x: (min.x + max.x) / 2, y: (min.y + max.y) / 2, z: 0 },\n            min,\n            max,\n            { x: min.x, y: max.y, z: 0 },\n            { x: max.x, y: min.y, z: 0 }\n        ];\n\n        const center = 0.5 * s;\n        const lowerQ = 0.25 * s;\n        const upperQ = 0.75 * s;\n\n        const containsCenterX = min.x < center && max.x > center;\n        const containsCenterY = min.y < center && max.y > center;\n        const containsLowerQY = min.y < lowerQ && max.y > lowerQ;\n        const containsUpperQY = min.y < upperQ && max.y > upperQ;\n\n        if (containsCenterY) {\n            pointsToCheck.push({ x: min.x, y: center, z: 0 });\n            pointsToCheck.push({ x: max.x, y: center, z: 0 });\n\n            if (containsCenterX) {\n                pointsToCheck.push({ x: center, y: center, z: 0 });\n            }\n        }\n        if (containsLowerQY) {\n            pointsToCheck.push({ x: min.x, y: lowerQ, z: 0 });\n            pointsToCheck.push({ x: max.x, y: lowerQ, z: 0 });\n\n            if (containsCenterX) {\n                pointsToCheck.push({ x: center, y: lowerQ, z: 0 });\n            }\n        }\n        if (containsUpperQY) {\n            pointsToCheck.push({ x: min.x, y: upperQ, z: 0 });\n            pointsToCheck.push({ x: max.x, y: upperQ, z: 0 });\n\n            if (containsCenterX) {\n                pointsToCheck.push({ x: center, y: upperQ, z: 0 });\n            }\n        }\n\n        const geoPoints = pointsToCheck.map(p => this.unprojectPoint(p));\n        TransverseMercatorUtils.alignLongitude(geoPoints, geoPoints[0]);\n\n        const latitudes = geoPoints.map(g => g.latitude);\n        const longitudes = geoPoints.filter(g => Math.abs(g.latitude) < 90).map(g => g.longitude);\n        const altitudes = geoPoints.map(g => g.altitude || 0);\n\n        const minGeo = new GeoCoordinates(\n            Math.min(...latitudes),\n            Math.min(...longitudes),\n            Math.min(...altitudes)\n        );\n\n        const maxGeo = new GeoCoordinates(\n            Math.max(...latitudes),\n            Math.max(...longitudes),\n            Math.max(...altitudes)\n        );\n\n        const geoBox = GeoBox.fromCoordinates(minGeo, maxGeo);\n        return geoBox;\n    }\n\n    /** @override */\n    unprojectAltitude(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    groundDistance(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    scalePointToSurface(worldPoint: Vector3Like): Vector3Like {\n        worldPoint.z = 0;\n        return worldPoint;\n    }\n\n    /** @override */\n    surfaceNormal(_worldPoint: Vector3Like, normal?: Vector3Like) {\n        if (normal === undefined) {\n            normal = { x: 0, y: 0, z: -1 };\n        } else {\n            normal.x = 0;\n            normal.y = 0;\n            normal.z = -1;\n        }\n        return normal;\n    }\n}\n\nexport class TransverseMercatorUtils {\n    static POLE_EDGE: number = 1.4844222297453323;\n    static POLE_EDGE_DEG: number = THREE.MathUtils.radToDeg(TransverseMercatorUtils.POLE_EDGE);\n    static POLE_RADIUS: number = 90 - TransverseMercatorUtils.POLE_EDGE_DEG;\n    static POLE_RADIUS_SQ: number = Math.pow(TransverseMercatorUtils.POLE_RADIUS, 2);\n\n    /**\n     * There are two regions on projected space that have same geo coordinates,\n     * it's the entire lines   { x: [0..1], y: 0 } and { x: [0..1], y: 1 }\n     * they both have geo coordinates of   (0, [-90..+90])\n     * and should be aligned somehow to fall into first or second region\n     * to make proper bounding boxes, tile bounds, etc.\n     */\n    static alignLatitude(points: GeoCoordinatesLike[], referencePoint: GeoCoordinatesLike): void {\n        const EPSILON = 1e-9;\n\n        for (const point of points) {\n            if (point.latitude === 0) {\n                point.latitude = referencePoint.latitude * EPSILON;\n            }\n        }\n    }\n\n    /**\n     * There are two regions on projected plane,\n     * { x: 0.5, y: [0..0.25] }    and    { x: 0.5, y: [0.75..1] }\n     * that represent longitude edge where -180 and +180 met.\n     * Points falling in this regions should be aligned to get proper boxes etc.\n     */\n    static alignLongitude(points: GeoCoordinatesLike[], referencePoint: GeoCoordinatesLike): void {\n        const bad = referencePoint.longitude < 0 ? 180 : -180;\n        const good = referencePoint.longitude < 0 ? -180 : 180;\n\n        for (const point of points) {\n            if (point.longitude === bad) {\n                point.longitude = good;\n            }\n        }\n    }\n}\n\n/**\n * Transverse Mercator [[Projection]] used to convert geo coordinates to world coordinates\n * and vice versa.\n */\nexport const transverseMercatorProjection: Projection = new TransverseMercatorProjection(\n    EarthConstants.EQUATORIAL_CIRCUMFERENCE\n);\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { Box3Like } from \"../math/Box3Like\";\nimport { Vector3Like } from \"../math/Vector3Like\";\nimport { Projection } from \"../projection/Projection\";\nimport { SubdivisionScheme } from \"./SubdivisionScheme\";\nimport { TileKey } from \"./TileKey\";\nimport { TilingScheme } from \"./TilingScheme\";\n\nimport * as THREE from \"three\";\n\n/**\n * `FlatTileBoundingBoxGenerator` generates bounding boxes in world and geo coordinates for a given\n * TilingScheme.\n */\nexport class FlatTileBoundingBoxGenerator {\n    private readonly m_tilingScheme: TilingScheme;\n    private readonly m_worldDimensions: Vector3Like;\n    private readonly m_worldBox: Box3Like;\n    /**\n     * Creates a new `FlatTileBoundingBoxGenerator` that can generate bounding boxes for the given\n     * TilingScheme.\n     *\n     * @param tilingScheme The [[TilingScheme]] used to compute bounding boxes.\n     * @param minElevation The minimum elevation in meters.\n     * @param maxElevation The maximum elevation in meters.\n     */\n    constructor(\n        readonly tilingScheme: TilingScheme,\n        readonly minElevation: number = 0,\n        readonly maxElevation: number = 0\n    ) {\n        this.m_tilingScheme = tilingScheme;\n        this.m_worldBox = tilingScheme.projection.worldExtent(minElevation, maxElevation);\n        const { min, max } = this.m_worldBox;\n        this.m_worldDimensions = { x: max.x - min.x, y: max.y - min.y, z: max.z - min.z };\n    }\n\n    /**\n     * Returns the [[Projection]] of the [[TilingScheme]].\n     */\n    get projection(): Projection {\n        return this.m_tilingScheme.projection;\n    }\n\n    /**\n     * Returns the [[SubdivisionScheme]] of the [[TilingScheme]].\n     */\n    get subdivisionScheme(): SubdivisionScheme {\n        return this.m_tilingScheme.subdivisionScheme;\n    }\n\n    /**\n     * Returns the bounding box in world coordinates of the given [[TileKey]].\n     *\n     * Example:\n     * ```typescript\n     * const worldBounds = new THREE.Box3();\n     * generator.getWorldBox(geoBox, worldBounds);\n     * console.log(worldBounds.getCenter());\n     * ```\n     *\n     * @param tileKey The TileKey.\n     * @param result The optional object used to store the resulting bounding box in world\n     * coordinates.\n     */\n    getWorldBox(tileKey: TileKey, result?: Box3Like): Box3Like {\n        const level = tileKey.level;\n        const levelDimensionX = this.subdivisionScheme.getLevelDimensionX(level);\n        const levelDimensionY = this.subdivisionScheme.getLevelDimensionY(level);\n        const sizeX = this.m_worldDimensions.x / levelDimensionX;\n        const sizeY = this.m_worldDimensions.y / levelDimensionY;\n        const originX = this.m_worldBox.min.x + sizeX * tileKey.column;\n        const originY = this.m_worldBox.min.y + sizeY * tileKey.row;\n\n        if (!result) {\n            result = new THREE.Box3();\n        }\n\n        result.min.x = originX;\n        result.min.y = originY;\n        result.min.z = this.m_worldBox.min.z;\n        result.max.x = originX + sizeX;\n        result.max.y = originY + sizeY;\n        result.max.z = this.m_worldBox.max.z;\n        return result;\n    }\n\n    /**\n     * Returns the bounding box in geo coordinates for the given [[TileKey]].\n     *\n     * Example:\n     * ```typescript\n     * const geoBox = generator.getGeoBox(worldBounds);\n     * console.log(geoBox.center);\n     * ```\n     *\n     * @param tileKey The [[TileKey]].\n     */\n    getGeoBox(tileKey: TileKey): GeoBox {\n        const worldBox = this.getWorldBox(tileKey);\n        return this.projection.unprojectBox(worldBox);\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { SubdivisionScheme } from \"./SubdivisionScheme\";\n\nclass HalfQuadTreeSubdivisionScheme implements SubdivisionScheme {\n    getSubdivisionX(): number {\n        return 2;\n    }\n    getSubdivisionY(level: number): number {\n        return level === 0 ? 1 : 2;\n    }\n    getLevelDimensionX(level: number): number {\n        // tslint:disable-next-line:no-bitwise\n        return 1 << level;\n    }\n    getLevelDimensionY(level: number): number {\n        // tslint:disable-next-line:no-bitwise\n        return level !== 0 ? 1 << (level - 1) : 1;\n    }\n}\n\n/**\n * A [[SubdivisionScheme]] used to represent half quadtrees. This particular subdivision scheme is\n * used by the HERE tiling scheme.\n */\nexport const halfQuadTreeSubdivisionScheme: SubdivisionScheme = new HalfQuadTreeSubdivisionScheme();\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { TileKey } from \"./TileKey\";\n\nexport class SubTiles implements Iterable<TileKey> {\n    constructor(public tileKey: TileKey, public sizeX: number, public sizeY: number) {}\n\n    [Symbol.iterator](): Iterator<TileKey> {\n        return this.sizeX === 2 && this.sizeY === 2\n            ? SubTiles.ZCurveIterator(this.tileKey)\n            : SubTiles.RowColumnIterator(this.tileKey, this.sizeX, this.sizeY);\n    }\n}\n\nexport namespace SubTiles {\n    export function* RowColumnIterator(\n        parentKey: TileKey,\n        sizeX: number,\n        sizeY: number\n    ): Iterator<TileKey> {\n        for (let y = 0; y < sizeY; y++) {\n            for (let x = 0; x < sizeX; x++) {\n                yield TileKey.fromRowColumnLevel(\n                    parentKey.row * sizeY + y,\n                    parentKey.column * sizeX + x,\n                    parentKey.level + 1\n                );\n            }\n        }\n    }\n\n    export function* ZCurveIterator(parentKey: TileKey): Iterator<TileKey> {\n        // tslint:disable:no-bitwise\n        for (let i = 0; i < 4; i++) {\n            yield TileKey.fromRowColumnLevel(\n                (parentKey.row << 1) | (i >> 1),\n                (parentKey.column << 1) | (i & 1),\n                parentKey.level + 1\n            );\n        }\n        // tslint:enableno-bitwise\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinates } from \"../coordinates/GeoCoordinates\";\nimport { GeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Vector3Like } from \"../math/Vector3Like\";\nimport { TileKey } from \"./TileKey\";\nimport { TilingScheme } from \"./TilingScheme\";\n\nexport class TileKeyUtils {\n    static geoCoordinatesToTileKey(\n        tilingScheme: TilingScheme,\n        geoPoint: GeoCoordinatesLike,\n        level: number\n    ): TileKey | null {\n        const projection = tilingScheme.projection;\n        const worldPoint = projection.projectPoint(geoPoint);\n\n        return this.worldCoordinatesToTileKey(tilingScheme, worldPoint, level);\n    }\n\n    static worldCoordinatesToTileKey(\n        tilingScheme: TilingScheme,\n        worldPoint: Vector3Like,\n        level: number\n    ): TileKey | null {\n        const projection = tilingScheme.projection;\n        const subdivisionScheme = tilingScheme.subdivisionScheme;\n\n        const cx = subdivisionScheme.getLevelDimensionX(level);\n        const cy = subdivisionScheme.getLevelDimensionY(level);\n\n        const { min, max } = projection.worldExtent(0, 0);\n        const worldSizeX = max.x - min.x;\n        const worldSizeY = max.y - min.y;\n\n        if (worldPoint.x < min.x || worldPoint.x > max.x) {\n            return null;\n        }\n\n        if (worldPoint.y < min.y || worldPoint.y > max.y) {\n            return null;\n        }\n\n        const column = Math.min(cx - 1, Math.floor((cx * (worldPoint.x - min.x)) / worldSizeX));\n        const row = Math.min(cy - 1, Math.floor((cy * (worldPoint.y - min.y)) / worldSizeY));\n\n        return TileKey.fromRowColumnLevel(row, column, level);\n    }\n\n    static geoRectangleToTileKeys(\n        tilingScheme: TilingScheme,\n        geoBox: GeoBox,\n        level: number\n    ): TileKey[] {\n        const wrap = (value: number, lower: number, upper: number) => {\n            if (value < lower) {\n                return upper - ((lower - value) % (upper - lower));\n            }\n\n            return lower + ((value - lower) % (upper - lower));\n        };\n\n        const clamp = (x: number, minVal: number, maxVal: number) => {\n            return Math.min(Math.max(x, minVal), maxVal);\n        };\n\n        // Clamp at the poles and wrap around the international date line.\n        const southWestLongitude = wrap(geoBox.southWest.longitudeInRadians, -Math.PI, Math.PI);\n        const southWestLatitude = clamp(\n            geoBox.southWest.latitudeInRadians,\n            -(Math.PI * 0.5),\n            Math.PI * 0.5\n        );\n        const northEastLongitude = wrap(geoBox.northEast.longitudeInRadians, -Math.PI, Math.PI);\n        const northEastLatitude = clamp(\n            geoBox.northEast.latitudeInRadians,\n            -(Math.PI * 0.5),\n            Math.PI * 0.5\n        );\n        const minTileKey = TileKeyUtils.geoCoordinatesToTileKey(\n            tilingScheme,\n            GeoCoordinates.fromRadians(southWestLatitude, southWestLongitude),\n            level\n        );\n        const maxTileKey = TileKeyUtils.geoCoordinatesToTileKey(\n            tilingScheme,\n            GeoCoordinates.fromRadians(northEastLatitude, northEastLongitude),\n            level\n        );\n        const columnCount = tilingScheme.subdivisionScheme.getLevelDimensionX(level);\n\n        if (!minTileKey || !maxTileKey) {\n            throw new Error(\"Invalid coordinates\");\n        }\n\n        const minColumn = minTileKey.column;\n        let maxColumn = maxTileKey.column;\n\n        // wrap around case\n        if (southWestLongitude > northEastLongitude) {\n            if (maxColumn !== minColumn) {\n                maxColumn += columnCount;\n            } else {\n                // do not duplicate\n                maxColumn += columnCount - 1;\n            }\n        }\n\n        const minRow = Math.min(minTileKey.row, maxTileKey.row);\n        const maxRow = Math.max(minTileKey.row, maxTileKey.row);\n\n        const keys = new Array<TileKey>();\n\n        for (let row = minRow; row <= maxRow; ++row) {\n            for (let column = minColumn; column <= maxColumn; ++column) {\n                keys.push(TileKey.fromRowColumnLevel(row, column % columnCount, level));\n            }\n        }\n\n        return keys;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { SubdivisionScheme } from \"./SubdivisionScheme\";\nimport { SubTiles } from \"./SubTiles\";\nimport { TileKey } from \"./TileKey\";\n\nexport class TileTreeTraverse {\n    private m_subdivisionScheme: SubdivisionScheme;\n\n    constructor(subdivisionScheme: SubdivisionScheme) {\n        this.m_subdivisionScheme = subdivisionScheme;\n    }\n\n    subTiles(tileKey: TileKey): Iterable<TileKey> {\n        const divX = this.m_subdivisionScheme.getSubdivisionX(tileKey.level);\n        const divY = this.m_subdivisionScheme.getSubdivisionY(tileKey.level);\n\n        return new SubTiles(tileKey, divX, divY);\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { LoggerManager } from \"@here/harp-utils\";\nimport { Env, Expr, ExprScope, MapEnv, Value } from \"./Expr\";\n\nconst logger = LoggerManager.instance.create(\"TechniqueAttr\");\n\nexport interface AttrEvaluationContext {\n    /**\n     * Expression evaluation environment containing variable bindings.\n     */\n    env: MapEnv;\n\n    /**\n     * Storage level of tile containing this feature.\n     *\n     * To be removed, when interpolators will be based on [[Expr]].\n     */\n    storageLevel: number;\n\n    /**\n     * Zoom level of tile containing this feature.\n     *\n     * To be removed, when interpolators will be based on [[Expr]].\n     */\n    zoomLevel: number;\n\n    /**\n     * Optional, cache of expression results.\n     *\n     * @see [[Expr.evaluate]]\n     */\n    cachedExprResults?: Map<Expr, Value>;\n}\n\n/**\n * Evaluate feature attr _without_ default value.\n *\n * @returns actual value or `undefined`\n */\nexport function evaluateTechniqueAttr<T = Value>(\n    context: Env | AttrEvaluationContext,\n    attrValue: T | Expr | undefined\n): T | undefined;\n\n/**\n * Evaluate feature attr _with_ default value.\n *\n * @returns actual value or `defaultValue`\n */\nexport function evaluateTechniqueAttr<T = Value>(\n    context: Env | AttrEvaluationContext,\n    attrValue: T | Expr | undefined,\n    defaultValue: T\n): T;\n\nexport function evaluateTechniqueAttr<T = Value>(\n    context: Env | AttrEvaluationContext,\n    attrValue: T | Expr | undefined,\n    defaultValue?: T\n): T | undefined {\n    const env = context instanceof Env ? context : context.env;\n\n    let evaluated: Value | undefined;\n    if (Expr.isExpr(attrValue)) {\n        try {\n            evaluated = attrValue.evaluate(\n                env,\n                ExprScope.Dynamic,\n                !(context instanceof Env) ? context.cachedExprResults : undefined\n            );\n        } catch (error) {\n            logger.error(`failed to evaluate expression '${JSON.stringify(attrValue)}': ${error}`);\n            evaluated = undefined;\n        }\n    } else {\n        evaluated = (attrValue as unknown) as Value;\n    }\n    if (evaluated === undefined || evaluated === null) {\n        return defaultValue;\n    } else {\n        return (evaluated as unknown) as T;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from \"./lib/ThemedTileDecoder\";\nexport * from \"./lib/TileDecoderService\";\nexport * from \"./lib/TilerService\";\nexport * from \"./lib/WorkerService\";\nexport * from \"./lib/WorkerServiceManager\";\nexport * from \"./lib/GeoJsonTiler\";\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoJson, ITiler } from \"@here/harp-datasource-protocol\";\nimport { TileKey } from \"@here/harp-geoutils\";\n\n// tslint:disable-next-line:no-var-requires\nconst geojsonvtExport = require(\"geojson-vt\");\n// to be able to run tests on nodejs\nconst geojsonvt = geojsonvtExport.default || geojsonvtExport;\n\ninterface GeoJsonVtIndex {\n    geojson: GeoJson;\n    getTile(level: number, column: number, row: number): any;\n}\n\nexport class GeoJsonTiler implements ITiler {\n    indexes: Map<string, GeoJsonVtIndex>;\n\n    constructor() {\n        this.indexes = new Map();\n    }\n\n    dispose() {\n        /* */\n    }\n\n    async connect(): Promise<void> {\n        return Promise.resolve();\n    }\n\n    async registerIndex(indexId: string, input: URL | GeoJson): Promise<void> {\n        if (this.indexes.has(indexId)) {\n            return;\n        }\n        return this.updateIndex(indexId, input);\n    }\n\n    async updateIndex(indexId: string, input: URL | GeoJson): Promise<void> {\n        if (input instanceof URL) {\n            const response = await fetch(input.href);\n            if (!response.ok) {\n                throw new Error(\n                    `GeoJsonTiler: Unable to fetch ${input.href}: ${response.statusText}`\n                );\n            }\n            input = await response.json();\n        } else {\n            input = input as GeoJson;\n        }\n\n        const index = geojsonvt(input, {\n            maxZoom: 20, // max zoom to preserve detail on\n            indexMaxZoom: 5, // max zoom in the tile index\n            indexMaxPoints: 100000, // max number of points per tile in the tile index\n            tolerance: 3, // simplification tolerance (higher means simpler)\n            extent: 4096, // tile extent\n            buffer: 0, // tile buffer on each side\n            lineMetrics: false, // whether to calculate line metrics\n            promoteId: null, // name of a feature property to be promoted to feature.id\n            generateId: true, // whether to generate feature ids. Cannot be used with promoteId\n            debug: 0 // logging level (0, 1 or 2)\n        });\n        index.geojson = input;\n\n        this.indexes.set(indexId, index);\n    }\n\n    async getTile(indexId: string, tileKey: TileKey): Promise<{}> {\n        const index = this.indexes.get(indexId);\n        if (index === undefined) {\n            throw new Error(\"Tile not found\");\n        }\n        const tile = index.getTile(tileKey.level, tileKey.column, tileKey.row);\n        if (tile !== null) {\n            tile.layer = indexId;\n            for (const feature of tile.features) {\n                feature.originalGeometry = this.getOriginalGeometry(feature, index.geojson);\n            }\n        }\n        return tile || {};\n    }\n\n    private getOriginalGeometry(feature: any, geojson: GeoJson): any {\n        switch (geojson.type) {\n            case \"Point\":\n            case \"MultiPoint\":\n            case \"LineString\":\n            case \"MultiLineString\":\n            case \"Polygon\":\n            case \"MultiPolygon\":\n            case \"GeometryCollection\":\n                return geojson;\n            case \"Feature\":\n                return geojson.geometry;\n            case \"FeatureCollection\":\n                return geojson.features[feature.id].geometry;\n        }\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    FeatureGeometry,\n    GeometryCollection,\n    MapEnv,\n    ValueMap\n} from \"@here/harp-datasource-protocol/index-decoder\";\nimport { GeoCoordinates } from \"@here/harp-geoutils\";\nimport { ILogger } from \"@here/harp-utils\";\nimport { Vector2 } from \"three\";\nimport { DecodeInfo } from \"./DecodeInfo\";\nimport { IGeometryProcessor, ILineGeometry, IPolygonGeometry } from \"./IGeometryProcessor\";\nimport { OmvFeatureFilter } from \"./OmvDataFilter\";\nimport { OmvDataAdapter } from \"./OmvDecoder\";\nimport { isArrayBufferLike } from \"./OmvUtils\";\n\nconst VT_JSON_EXTENTS = 4096;\n\ntype VTJsonPosition = [number, number];\n\nenum VTJsonGeometryType {\n    Unknown,\n    Point,\n    LineString,\n    Polygon\n}\n\ninterface VTJsonFeatureInterface {\n    geometry: VTJsonPosition[] | VTJsonPosition[][];\n    originalGeometry: FeatureGeometry | GeometryCollection;\n    id: string;\n    tags: ValueMap;\n    type: VTJsonGeometryType;\n}\n\ninterface VTJsonSourceInterface {\n    geometry: number[];\n    length: number;\n    id: string;\n    maxX: number;\n    maxY: number;\n    minX: number;\n    minY: number;\n    tags: ValueMap;\n    type: string;\n}\n\ninterface VTJsonTileInterface {\n    features: VTJsonFeatureInterface[];\n    maxX: number;\n    maxY: number;\n    minX: number;\n    minY: number;\n    numFeatures: number;\n    numPoints: number;\n    numSimplified: number;\n    source: VTJsonSourceInterface[];\n    transformed: boolean;\n    x: number;\n    y: number;\n    z: number;\n    layer: string;\n}\n\n/**\n * [[OmvDataAdapter]] id for [[VTJsonDataAdapter]].\n */\nexport const VTJsonDataAdapterId: string = \"vt-json\";\n\n/**\n * The class [[VTJsonDataAdapter]] converts VT-json data to geometries for the given\n * [[IGeometryProcessor]].\n */\nexport class VTJsonDataAdapter implements OmvDataAdapter {\n    id = VTJsonDataAdapterId;\n\n    constructor(\n        readonly m_processor: IGeometryProcessor,\n        private m_dataFilter?: OmvFeatureFilter,\n        readonly m_logger?: ILogger\n    ) {}\n\n    get dataFilter(): OmvFeatureFilter | undefined {\n        return this.m_dataFilter;\n    }\n\n    set dataFilter(dataFilter: OmvFeatureFilter | undefined) {\n        this.m_dataFilter = dataFilter;\n    }\n\n    canProcess(data: ArrayBufferLike | {}): boolean {\n        if (isArrayBufferLike(data)) {\n            return false;\n        }\n\n        const tile = data as VTJsonTileInterface;\n        if (\n            tile.features === undefined ||\n            tile.source === undefined ||\n            tile.x === undefined ||\n            tile.y === undefined ||\n            tile.z === undefined\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    process(tile: VTJsonTileInterface, decodeInfo: DecodeInfo) {\n        const { tileKey } = decodeInfo;\n        for (const feature of tile.features) {\n            const env = new MapEnv({\n                $layer: tile.layer,\n                $geometryType: this.convertGeometryType(feature.type),\n                $level: tileKey.level,\n                $zoom: Math.max(0, tileKey.level - (this.m_processor.storageLevelOffset || 0)),\n                $id: feature.id,\n                ...feature.tags\n            });\n\n            switch (feature.type) {\n                case VTJsonGeometryType.Point: {\n                    for (const pointGeometry of feature.geometry) {\n                        const x = (pointGeometry as VTJsonPosition)[0];\n                        const y = (pointGeometry as VTJsonPosition)[1];\n\n                        const position = new Vector2(x, y);\n\n                        this.m_processor.processPointFeature(\n                            tile.layer,\n                            VT_JSON_EXTENTS,\n                            [position],\n                            env,\n                            tileKey.level\n                        );\n                    }\n                    break;\n                }\n                case VTJsonGeometryType.LineString: {\n                    let untiledPositions: GeoCoordinates[] | undefined;\n                    if (feature.originalGeometry.type === \"LineString\") {\n                        untiledPositions = [];\n                        for (const [x, y] of feature.originalGeometry.coordinates) {\n                            untiledPositions.push(new GeoCoordinates(y, x));\n                        }\n                    } else if (feature.originalGeometry.type === \"MultiLineString\") {\n                        untiledPositions = [];\n                        for (const lineGeometry of feature.originalGeometry\n                            .coordinates as VTJsonPosition[][]) {\n                            for (const [x, y] of lineGeometry) {\n                                untiledPositions.push(new GeoCoordinates(y, x));\n                            }\n                        }\n                    }\n\n                    for (const lineGeometry of feature.geometry as VTJsonPosition[][]) {\n                        const line: ILineGeometry = { positions: [], untiledPositions };\n                        for (const [x, y] of lineGeometry) {\n                            const position = new Vector2(x, y);\n                            line.positions.push(position);\n                        }\n\n                        this.m_processor.processLineFeature(\n                            tile.layer,\n                            VT_JSON_EXTENTS,\n                            [line],\n                            env,\n                            tileKey.level\n                        );\n                    }\n                    break;\n                }\n                case VTJsonGeometryType.Polygon: {\n                    const polygon: IPolygonGeometry = { rings: [] };\n                    for (const outline of feature.geometry as VTJsonPosition[][]) {\n                        const ring: Vector2[] = [];\n                        for (const [currX, currY] of outline) {\n                            const position = new Vector2(currX, currY);\n                            ring.push(position);\n                        }\n                        polygon.rings.push(ring);\n                    }\n\n                    this.m_processor.processPolygonFeature(\n                        tile.layer,\n                        VT_JSON_EXTENTS,\n                        [polygon],\n                        env,\n                        tileKey.level\n                    );\n\n                    break;\n                }\n                case VTJsonGeometryType.Unknown: {\n                    break;\n                }\n            }\n        }\n    }\n\n    private convertGeometryType(type: VTJsonGeometryType): string {\n        switch (type) {\n            case VTJsonGeometryType.Point:\n                return \"point\";\n            case VTJsonGeometryType.LineString:\n                return \"line\";\n            case VTJsonGeometryType.Polygon:\n                return \"polygon\";\n            default:\n                return \"unknown\";\n        }\n    }\n}\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = util.Buffer\n    ? function create_buffer_setup() {\n        return (Writer.create = function create_buffer() {\n            return new BufferWriter();\n        })();\n    }\n    /* istanbul ignore next */\n    : function create_array() {\n        return new Writer();\n    };\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n};\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = util.Buffer\n    ? function create_buffer_setup(buffer) {\n        return (Reader.create = function create_buffer(buffer) {\n            return util.Buffer.isBuffer(buffer)\n                ? new BufferReader(buffer)\n                /* istanbul ignore next */\n                : create_array(buffer);\n        })(buffer);\n    }\n    /* istanbul ignore next */\n    : create_array;\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { GeometryKind, GeometryKindSet } from \"@here/harp-datasource-protocol\";\nimport { MapEnv } from \"@here/harp-datasource-protocol/index-decoder\";\nimport {\n    OmvFeatureFilterDescription,\n    OmvFilterDescription,\n    OmvFilterFeatureAttribute,\n    OmvFilterString,\n    OmvGeometryType,\n    OmvLayerFilterDescription\n} from \"./OmvDecoderDefs\";\n\n/**\n * The `OmvFeatureFilter` is designed to work in an `OmvVisitor`/`visitOmv` combination (for\n * example, `OmvDecoder`). Returning `false` from any of the calls terminates processing of that\n * layer or feature.\n *\n * The `OmvFeatureFilter` is an \"early-opt-out\" filter, which cannot filter individual features,\n * because at that point the features are not really decoded. Use the [[OmvFeatureModifier]] to\n * filter for individual features.\n */\nexport interface OmvFeatureFilter {\n    /**\n     * Returns `true` if the filter contains rules for specific kinds.\n     */\n    hasKindFilter: boolean;\n\n    /**\n     * Return `false` if the layer should not be processed.\n     *\n     * @param layer Current layer.\n     * @param level Level of tile.\n     */\n    wantsLayer(layer: string, level: number): boolean;\n\n    /**\n     * Return `false` if the point feature should not be processed.\n     *\n     * @param layer Current layer.\n     * @param feature Current feature.\n     * @param level Level of tile.\n     */\n    wantsPointFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean;\n\n    /**\n     * Return `false` if the line feature should not be processed.\n     *\n     * @param layer Current layer.\n     * @param feature Current feature.\n     * @param level Level of tile.\n     */\n    wantsLineFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean;\n\n    /**\n     * Return `false` if the polygon feature should not be processed.\n     *\n     * @param layer Current layer.\n     * @param feature Current feature.\n     * @param level Level of tile.\n     */\n    wantsPolygonFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean;\n\n    /**\n     * Return `false` if kind of object is not enabled and the geometry should not be created.\n     *\n     * @param {(string | string[])} kind Tag \"kind\" of the tag.\n     * @returns {boolean}\n     */\n    wantsKind(kind: string | string[]): boolean;\n}\n\n/**\n * The `OmvFeatureModifier` can be used to filter individual features. It gets passed in the [[Env]]\n * of the feature, which contains all the values that can be searched for in a style. If a filter\n * function returns false, the feature is ignored, and no geometry is being created.\n *\n * In addition to pure filtering, the `OmvFeatureModifier` can also modify the [[Env]] of the\n * feature, or even add new properties to the feature, for example, traffic states. The\n * `OmvFeatureModifier` is executed before the styles are selected, so the geometry is created with\n * the modified feature properties.\n */\nexport interface OmvFeatureModifier {\n    /**\n     * Check if the point feature described by `env` should be processed. The properties can be\n     * modified or added to.\n     *\n     * @param layer Current layer.\n     * @param env Properties of point feature.\n     * @param level Level of tile.\n     * @returns `false` to ignore feature.\n     */\n    doProcessPointFeature(layer: string, env: MapEnv, level: number): boolean;\n\n    /**\n     * Check if the line feature described by `env` should be processed. The properties can be\n     * modified or added to.\n     *\n     * @param layer Current layer.\n     * @param env Properties of line feature.\n     * @param level Level of tile.\n     * @returns `false` to ignore feature.\n     */\n    doProcessLineFeature(layer: string, env: MapEnv, level: number): boolean;\n\n    /**\n     * Check if the polygon feature described by `env` should be processed. The properties can be\n     * modified or added to.\n     *\n     * @param layer Current layer.\n     * @param env Properties of polygon feature.\n     * @param level Level of tile.\n     * @returns `false` to ignore feature.\n     */\n    doProcessPolygonFeature(layer: string, env: MapEnv, level: number): boolean;\n}\n\n/**\n * Builds an `OmvFilterDescription` (internal type) that specifies an [[OmvFeatureFilter]] as well\n * as an [[OmvFeatureModifier]].\n *\n */\nexport class OmvFeatureFilterDescriptionBuilder {\n    private m_processLayersDefault: boolean = true;\n    private m_processPointsDefault: boolean = true;\n    private m_processLinesDefault: boolean = true;\n    private m_processPolygonsDefault: boolean = true;\n\n    private readonly m_layersToProcess = new Array<OmvLayerFilterDescription>();\n    private readonly m_layersToIgnore = new Array<OmvLayerFilterDescription>();\n    private readonly m_pointsToProcess = new Array<OmvFilterDescription>();\n    private readonly m_ignoredPoints = new Array<OmvFilterDescription>();\n    private readonly m_linesToProcess = new Array<OmvFilterDescription>();\n    private readonly m_linesToIgnore = new Array<OmvFilterDescription>();\n    private readonly m_polygonsToProcess = new Array<OmvFilterDescription>();\n    private readonly m_polygonsToIgnore = new Array<OmvFilterDescription>();\n\n    private m_kindsToProcess: string[] = [];\n    private m_kindsToIgnore: string[] = [];\n\n    /**\n     * Builds an `OmvFilterDescription` (internal type) that specifies an [[OmvFeatureFilter]] as\n     * well as an [[OmvFeatureModifier]].\n     *\n     * @param processLayersDefault If `true`, all unspecified layers will be processed. If `false`,\n     * all unspecified layers will be ignored.\n     * @param processPointsDefault If `true`, all unspecified point features will be processed. If\n     * `false`, all unspecified point features will be ignored.\n     * @param processLinesDefault If `true`, all unspecified line features will be processed. If\n     * `false`, all unspecified line features will be ignored.\n     * @param processPolygonsDefault If `true`, all unspecified polygon features will be processed.\n     * If `false`, all unspecified polygon features will be ignored.\n     */\n    constructor(\n        options?: OmvFeatureFilterDescriptionBuilder.OmvFeatureFilterDescriptionBuilderOptions\n    ) {\n        if (options) {\n            this.m_processLayersDefault =\n                options.processLayersDefault !== undefined ? options.processLayersDefault : true;\n            this.m_processPointsDefault =\n                options.processPointsDefault !== undefined ? options.processPointsDefault : true;\n            this.m_processLinesDefault =\n                options.processLinesDefault !== undefined ? options.processLinesDefault : true;\n            this.m_processPolygonsDefault =\n                options.processPolygonsDefault !== undefined\n                    ? options.processPolygonsDefault\n                    : true;\n        }\n    }\n\n    /**\n     * Add a layer that should be processed.\n     *\n     * @param layer Layer name to be matched.\n     * @param match Match condition.\n     */\n    processLayer(\n        layer: string,\n        match = OmvFilterString.StringMatch.Match,\n        minLevel: number = 0,\n        maxLevel: number = Infinity\n    ) {\n        this.m_layersToProcess.push({\n            name: { value: layer, match },\n            minLevel,\n            maxLevel\n        });\n    }\n\n    /**\n     * Add a layer that should be ignored.\n     *\n     * @param layer Layer name to be matched.\n     * @param match Match condition.\n     */\n    ignoreLayer(\n        layer: string,\n        match = OmvFilterString.StringMatch.Match,\n        minLevel: number = 0,\n        maxLevel: number = Infinity\n    ) {\n        this.m_layersToIgnore.push({\n            name: { value: layer, match },\n            minLevel,\n            maxLevel\n        });\n    }\n\n    /**\n     * Add a valid point feature.\n     *\n     * @param options Feature options.\n     */\n    processPoint(options: OmvFeatureFilterDescriptionBuilder.FeatureOption) {\n        this.addItem(this.m_pointsToProcess, options);\n    }\n\n    /**\n     * Add valid point features.\n     *\n     * @param options Multi feature options.\n     */\n    processPoints(options: OmvFeatureFilterDescriptionBuilder.MultiFeatureOption) {\n        this.addItems(this.m_pointsToProcess, options);\n    }\n\n    /**\n     * Add a point feature that should be ignored.\n     *\n     * @param options Feature options.\n     */\n    ignorePoint(options: OmvFeatureFilterDescriptionBuilder.FeatureOption) {\n        this.addItem(this.m_ignoredPoints, options);\n    }\n\n    /**\n     * Add point features that should be ignored.\n     *\n     * @param options Multi feature options.\n     */\n    ignorePoints(options: OmvFeatureFilterDescriptionBuilder.MultiFeatureOption) {\n        this.addItems(this.m_ignoredPoints, options);\n    }\n\n    /**\n     * Add a valid line feature.\n     *\n     * @param options Feature options.\n     */\n    processLine(options: OmvFeatureFilterDescriptionBuilder.FeatureOption) {\n        this.addItem(this.m_linesToProcess, options);\n    }\n\n    /**\n     * Add valid line features.\n     *\n     * @param options Multi feature options.\n     */\n    processLines(options: OmvFeatureFilterDescriptionBuilder.MultiFeatureOption) {\n        this.addItems(this.m_linesToProcess, options);\n    }\n\n    /**\n     * Ignore a line feature.\n     *\n     * @param options Feature options.\n     */\n    ignoreLine(options: OmvFeatureFilterDescriptionBuilder.FeatureOption) {\n        this.addItem(this.m_linesToIgnore, options);\n    }\n\n    /**\n     * Ignore line features.\n     *\n     * @param options Multi feature options.\n     */\n    ignoreLines(options: OmvFeatureFilterDescriptionBuilder.MultiFeatureOption) {\n        this.addItems(this.m_linesToIgnore, options);\n    }\n\n    /**\n     * Add a valid polygon feature.\n     *\n     * @param options Feature options.\n     */\n    processPolygon(options: OmvFeatureFilterDescriptionBuilder.FeatureOption) {\n        this.addItem(this.m_polygonsToProcess, options);\n    }\n\n    /**\n     * Add valid polygon features.\n     *\n     * @param options Multi feature options.\n     */\n    processPolygons(options: OmvFeatureFilterDescriptionBuilder.MultiFeatureOption) {\n        this.addItems(this.m_polygonsToProcess, options);\n    }\n\n    /**\n     * Ignore a valid polygon feature.\n     *\n     * @param options Feature options.\n     */\n    ignorePolygon(options: OmvFeatureFilterDescriptionBuilder.FeatureOption) {\n        this.addItem(this.m_polygonsToIgnore, options);\n    }\n\n    /**\n     * Ignore polygon features.\n     *\n     * @param options Multi feature options.\n     */\n    ignorePolygons(options: OmvFeatureFilterDescriptionBuilder.MultiFeatureOption) {\n        this.addItems(this.m_polygonsToIgnore, options);\n    }\n\n    /**\n     * Add all the specified strings as \"enabledKinds\".\n     *\n     * @param {string[]} enabledKinds List of kinds that should be generated.\n     */\n    processKinds(enabledKinds: string[]) {\n        this.m_kindsToProcess = this.m_kindsToProcess.concat(enabledKinds);\n    }\n\n    /**\n     * Add all the specified strings as \"disabledKinds\".\n     *\n     * @param {string[]} disabledKinds List of kinds that should _not_ be generated.\n     */\n    ignoreKinds(disabledKinds: string[]) {\n        this.m_kindsToIgnore = this.m_kindsToIgnore.concat(disabledKinds);\n    }\n\n    /**\n     * Create a filter description that can be passed as an option to the [[OmvDataSource]].\n     */\n    createDescription(): OmvFeatureFilterDescription {\n        return {\n            processLayersDefault: this.m_processLayersDefault,\n            processPointsDefault: this.m_processPointsDefault,\n            processLinesDefault: this.m_processLinesDefault,\n            processPolygonsDefault: this.m_processPolygonsDefault,\n\n            layersToProcess: this.m_layersToProcess,\n            layersToIgnore: this.m_layersToIgnore,\n            pointsToProcess: this.m_pointsToProcess,\n            pointsToIgnore: this.m_ignoredPoints,\n            linesToProcess: this.m_linesToProcess,\n            linesToIgnore: this.m_linesToIgnore,\n            polygonsToProcess: this.m_polygonsToProcess,\n            polygonsToIgnore: this.m_polygonsToIgnore,\n\n            kindsToProcess: this.m_kindsToProcess,\n            kindsToIgnore: this.m_kindsToIgnore\n        };\n    }\n\n    private addItem(\n        items: OmvFilterDescription[],\n        options: OmvFeatureFilterDescriptionBuilder.FeatureOption\n    ) {\n        if (options.minLevel === undefined || isNaN(options.minLevel)) {\n            options.minLevel = 0;\n        }\n        if (options.maxLevel === undefined || isNaN(options.maxLevel)) {\n            options.maxLevel = Infinity;\n        }\n\n        const item: OmvFilterDescription = {\n            layerName: {\n                value: options.layer,\n                match:\n                    options.matchLayer === undefined\n                        ? OmvFilterString.StringMatch.Match\n                        : options.matchLayer\n            },\n            geometryTypes:\n                options.geomType !== undefined\n                    ? Array.isArray(options.geomType)\n                        ? options.geomType\n                        : [options.geomType]\n                    : undefined,\n            classes: [\n                {\n                    value: options.featureClass,\n                    match:\n                        options.matchClass === undefined\n                            ? OmvFilterString.StringMatch.Match\n                            : options.matchClass\n                }\n            ],\n            minLevel: options.minLevel,\n            maxLevel: options.maxLevel,\n            featureAttribute: options.featureAttribute\n        };\n\n        items.push(item);\n    }\n\n    private addItems(\n        items: OmvFilterDescription[],\n        options: OmvFeatureFilterDescriptionBuilder.MultiFeatureOption\n    ) {\n        if (options.minLevel === undefined || isNaN(options.minLevel)) {\n            options.minLevel = 0;\n        }\n        if (options.maxLevel === undefined || isNaN(options.maxLevel)) {\n            options.maxLevel = Infinity;\n        }\n\n        const item: OmvFilterDescription = {\n            layerName: {\n                value: options.layer,\n                match:\n                    options.matchLayer === undefined\n                        ? OmvFilterString.StringMatch.Match\n                        : options.matchLayer\n            },\n            geometryTypes:\n                options.geomTypes !== undefined\n                    ? Array.isArray(options.geomTypes)\n                        ? options.geomTypes\n                        : [options.geomTypes]\n                    : undefined,\n            classes: options.featureClasses,\n            minLevel: options.minLevel,\n            maxLevel: options.maxLevel,\n            featureAttribute: options.featureAttribute\n        };\n\n        items.push(item);\n    }\n}\n\nexport namespace OmvFeatureFilterDescriptionBuilder {\n    /**\n     * Options for `OmvFeatureFilterDescriptionBuilder`.\n     */\n    export interface OmvFeatureFilterDescriptionBuilderOptions {\n        /**\n         * If `true`, all unspecified layers will be processed. If `false`, all unspecified layers\n         * will be ignored.\n         */\n        processLayersDefault?: boolean;\n        /**\n         * If `true`, all unspecified point features will be processed. If `false`, all unspecified\n         * point features will be ignored.\n         */\n        processPointsDefault?: boolean;\n        /**\n         * If `true`, all unspecified line features will be processed. If `false`, all unspecified\n         * line\n         * features will be ignored.\n         */\n        processLinesDefault?: boolean;\n        /**\n         * If `true`, all unspecified polygon features will be processed. If `false`, all\n         * unspecified polygon features will be ignored.\n         */\n        processPolygonsDefault?: boolean;\n    }\n\n    /**\n     * Description of a single feature.\n     */\n    export interface FeatureOption {\n        /**\n         * Layer name to be matched.\n         */\n        layer: string;\n        /**\n         * Optional geometry type to be limited to. If specified, but does not match, the feature is\n         * ignored.\n         */\n        geomType: OmvGeometryType | OmvGeometryType[] | undefined;\n        /**\n         * Optional class to match. If specified, but does not match, the feature is ignored.\n         */\n        featureClass: string;\n        /**\n         * Match condition for the layer name.\n         */\n        matchLayer?: OmvFilterString.StringMatch;\n        /**\n         * Match condition for `featureClass`.\n         */\n        matchClass?: OmvFilterString.StringMatch;\n        /**\n         * Minimum tile level to match.\n         */\n        minLevel?: number;\n        /**\n         * Maximum tile level to match.\n         */\n        maxLevel?: number;\n        /**\n         * Feature attribute to match.\n         */\n        featureAttribute?: OmvFilterFeatureAttribute;\n    }\n\n    /**\n     * Description for multiple features.\n     */\n    export interface MultiFeatureOption {\n        /**\n         * Layer name to be matched.\n         */\n        layer: string;\n        /**\n         * Optional geometry type to be limited to. If specified, but does not match, the feature is\n         * ignored.\n         */\n        geomTypes?: OmvGeometryType | OmvGeometryType[] | undefined;\n        /**\n         * Optional classes to match. If specified, but does not match, the feature is ignored.\n         */\n        featureClasses?: OmvFilterString[];\n        /**\n         * Match condition for the layer name.\n         */\n        matchLayer?: OmvFilterString.StringMatch;\n        /**\n         * Minimum tile level to match.\n         */\n        minLevel?: number;\n        /**\n         * Maximum tile level to match.\n         */\n        maxLevel?: number;\n        /**\n         * Feature attribute to match.\n         */\n        featureAttribute?: OmvFilterFeatureAttribute;\n    }\n}\n\n/**\n * `OmvFeatureFilter` implementation that uses a `OmvFeatureFilterDescription` to filter `TileData`\n * features before they are completely decoded.\n *\n * @hidden\n */\nexport class OmvGenericFeatureFilter implements OmvFeatureFilter {\n    private static matchLayer(\n        layer: string,\n        layerItems: OmvLayerFilterDescription[],\n        level: number\n    ): boolean {\n        for (const layerItem of layerItems) {\n            if (level < layerItem.minLevel || level > layerItem.maxLevel) {\n                continue;\n            }\n\n            if (OmvFilterString.matchString(layer, layerItem.name)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    private disabledKinds: GeometryKindSet | undefined;\n    private enabledKinds: GeometryKindSet | undefined;\n\n    constructor(private description: OmvFeatureFilterDescription) {\n        if (this.description.kindsToProcess.length > 0) {\n            this.enabledKinds = new GeometryKindSet(\n                this.description.kindsToProcess as GeometryKind[]\n            );\n        }\n        if (this.description.kindsToIgnore.length > 0) {\n            this.disabledKinds = new GeometryKindSet(\n                this.description.kindsToIgnore as GeometryKind[]\n            );\n        }\n    }\n\n    wantsLayer(layer: string, level: number): boolean {\n        if (OmvGenericFeatureFilter.matchLayer(layer, this.description.layersToProcess, level)) {\n            return true;\n        }\n\n        if (OmvGenericFeatureFilter.matchLayer(layer, this.description.layersToIgnore, level)) {\n            return false;\n        }\n\n        return this.description.processLayersDefault;\n    }\n\n    wantsPointFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean {\n        return this.wantsFeature(\n            this.description.pointsToProcess,\n            this.description.pointsToIgnore,\n            layer,\n            geometryType,\n            level,\n            this.description.processPointsDefault\n        );\n    }\n\n    wantsLineFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean {\n        return this.wantsFeature(\n            this.description.linesToProcess,\n            this.description.linesToIgnore,\n            layer,\n            geometryType,\n            level,\n            this.description.processLinesDefault\n        );\n    }\n\n    wantsPolygonFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean {\n        return this.wantsFeature(\n            this.description.polygonsToProcess,\n            this.description.polygonsToIgnore,\n            layer,\n            geometryType,\n            level,\n            this.description.processPolygonsDefault\n        );\n    }\n\n    wantsKind(kind: string | string[]): boolean {\n        // undefined -> no way to filter\n        if (kind === undefined) {\n            return true;\n        }\n\n        return (\n            !(\n                this.disabledKinds !== undefined &&\n                this.disabledKinds.hasOrIntersects(kind as GeometryKind)\n            ) ||\n            (this.enabledKinds !== undefined &&\n                this.enabledKinds.hasOrIntersects(kind as GeometryKind))\n        );\n    }\n\n    get hasKindFilter(): boolean {\n        return this.enabledKinds !== undefined || this.disabledKinds !== undefined;\n    }\n\n    private wantsFeature(\n        itemsToProcess: OmvFilterDescription[],\n        itemsToIgnore: OmvFilterDescription[],\n        layer: string,\n        geometryType: OmvGeometryType,\n        level: number,\n        defaultResult: boolean\n    ): boolean {\n        for (const item of itemsToProcess) {\n            if (level < item.minLevel || level > item.maxLevel) {\n                continue;\n            }\n\n            if (!OmvFilterString.matchString(layer, item.layerName)) {\n                // this rule is not for this layer\n                continue;\n            }\n\n            if (item.geometryTypes !== undefined && item.geometryTypes.indexOf(geometryType) >= 0) {\n                return true;\n            }\n        }\n\n        for (const item of itemsToIgnore) {\n            if (!OmvFilterString.matchString(layer, item.layerName)) {\n                // this rule is not for this layer\n                continue;\n            }\n\n            if (item.geometryTypes !== undefined && item.geometryTypes.indexOf(geometryType) >= 0) {\n                return false;\n            }\n        }\n\n        return defaultResult;\n    }\n}\n\n/**\n * An [[OmvFeatureFilter]] implementation that delegates all filter decision\n * returning `true` for any predicate if all delegates return `true`.\n */\nexport class ComposedDataFilter implements OmvFeatureFilter {\n    constructor(readonly filters: OmvFeatureFilter[]) {}\n\n    get hasKindFilter() {\n        return this.filters.reduce<boolean>(\n            (result, filter) => result && filter.hasKindFilter,\n            true\n        );\n    }\n\n    wantsLayer(layer: string, level: number): boolean {\n        return this.filters.reduce<boolean>(\n            (result, filter) => result && filter.wantsLayer(layer, level),\n            true\n        );\n    }\n    wantsPointFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean {\n        return this.filters.reduce<boolean>(\n            (result, filter) => result && filter.wantsPointFeature(layer, geometryType, level),\n            true\n        );\n    }\n    wantsLineFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean {\n        return this.filters.reduce<boolean>(\n            (result, filter) => result && filter.wantsLineFeature(layer, geometryType, level),\n            true\n        );\n    }\n    wantsPolygonFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean {\n        return this.filters.reduce<boolean>(\n            (result, filter) => result && filter.wantsPolygonFeature(layer, geometryType, level),\n            true\n        );\n    }\n    wantsKind(kind: string | string[]): boolean {\n        return this.filters.reduce<boolean>(\n            (result, filter) => result && filter.wantsKind(kind),\n            true\n        );\n    }\n}\n/**\n * `OmvFeatureModifier` implementation that uses a `OmvFeatureFilterDescription` to filter\n * `TileData` features before they are completely decoded.\n *\n * @hidden\n */\nexport class OmvGenericFeatureModifier implements OmvFeatureModifier {\n    static matchItems(\n        layerName: string,\n        featureClass: string,\n        items: OmvFilterDescription[]\n    ): boolean {\n        for (const item of items) {\n            if (item.classes !== undefined) {\n                if (!OmvFilterString.matchString(layerName, item.layerName)) {\n                    continue;\n                }\n                for (const matchClass of item.classes) {\n                    if (OmvFilterString.matchString(featureClass, matchClass)) {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n\n    static matchAttribute(layerName: string, env: MapEnv, items: OmvFilterDescription[]): boolean {\n        for (const item of items) {\n            if (item.featureAttribute !== undefined) {\n                if (\n                    OmvFilterString.matchString(layerName, item.layerName) &&\n                    env.lookup(item.featureAttribute.key) === item.featureAttribute.value\n                ) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    constructor(private description: OmvFeatureFilterDescription) {}\n\n    doProcessPointFeature(layer: string, env: MapEnv): boolean {\n        return this.doProcessFeature(\n            this.description.pointsToProcess,\n            this.description.pointsToIgnore,\n            layer,\n            env,\n            this.description.processPointsDefault\n        );\n    }\n\n    doProcessLineFeature(layer: string, env: MapEnv): boolean {\n        return this.doProcessFeature(\n            this.description.linesToProcess,\n            this.description.linesToIgnore,\n            layer,\n            env,\n            this.description.processLinesDefault\n        );\n    }\n\n    doProcessPolygonFeature(layer: string, env: MapEnv): boolean {\n        return this.doProcessFeature(\n            this.description.polygonsToProcess,\n            this.description.polygonsToIgnore,\n            layer,\n            env,\n            this.description.processPolygonsDefault\n        );\n    }\n\n    protected doProcessFeature(\n        itemsToProcess: OmvFilterDescription[],\n        itemsToIgnore: OmvFilterDescription[],\n        layer: string,\n        env: MapEnv,\n        defaultResult: boolean\n    ): boolean {\n        if (layer === undefined || (itemsToProcess.length === 0 && itemsToIgnore.length === 0)) {\n            return defaultResult;\n        }\n\n        let featureClass: string | undefined;\n        const featureClassThing = env.lookup(\"class\");\n\n        if (featureClassThing !== undefined && featureClassThing !== null) {\n            featureClass = featureClassThing.toString();\n        }\n\n        if (\n            featureClass &&\n            OmvGenericFeatureModifier.matchItems(layer, featureClass, itemsToProcess)\n        ) {\n            return true;\n        }\n\n        if (\n            featureClass &&\n            OmvGenericFeatureModifier.matchItems(layer, featureClass, itemsToIgnore)\n        ) {\n            return false;\n        }\n\n        if (OmvGenericFeatureModifier.matchAttribute(layer, env, itemsToProcess)) {\n            return true;\n        }\n\n        if (OmvGenericFeatureModifier.matchAttribute(layer, env, itemsToIgnore)) {\n            return false;\n        }\n\n        return defaultResult;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { BufferAttribute, BufferGeometry, Vector3 } from \"three\";\n\nconst tmpVectorA = new Vector3();\nconst tmpVectorB = new Vector3();\nconst tmpVectorC = new Vector3();\n\n/**\n * The [[SubdivisionModifier]] subdivides triangle mesh geometries.\n */\nexport abstract class SubdivisionModifier {\n    /**\n     * Constructs a new [[SubdivisionModifier]].\n     */\n    constructor() {\n        // nothing to do\n    }\n\n    /**\n     * Subdivides the faces of the given [[THREE.BufferGeometry]].\n     *\n     * This method modifies (in-place) the vertices and the faces of the geometry.\n     * Please note that only the vertex position and their UV coordinates are subdivided.\n     * Normals, vertex colors and other attributes are left unmodified.\n     *\n     * @param geometry The [[THREE.BufferGeometry]] to subdivide.\n     */\n    modify(geometry: BufferGeometry): BufferGeometry {\n        const positionAttr = geometry.getAttribute(\"position\") as BufferAttribute;\n        const position = Array.from(positionAttr.array);\n\n        const uvAttr = geometry.getAttribute(\"uv\") as BufferAttribute;\n        const uv = uvAttr !== undefined ? Array.from(uvAttr.array) : undefined;\n\n        const edgeAttr = geometry.getAttribute(\"edge\") as BufferAttribute;\n        const edge = edgeAttr !== undefined ? Array.from(edgeAttr.array) : undefined;\n\n        const wallAttr = geometry.getAttribute(\"wall\") as BufferAttribute;\n        const wall = wallAttr !== undefined ? Array.from(wallAttr.array) : undefined;\n\n        const indexAttr = geometry.getIndex() as BufferAttribute;\n        const indices = Array.from(indexAttr.array);\n\n        // A cache containing the indices of the vertices added\n        // when subdiving the faces of the geometry.\n        const cache = new Map<string, number>();\n\n        /**\n         * Returns the index of the vertex positioned in the middle of the given vertices.\n         */\n        function middleVertex(i: number, j: number): number {\n            // Build a unique `key` for the pair of indices `(i, j)`.\n            const key = `${Math.min(i, j)}_${Math.max(i, j)}`;\n\n            const h = cache.get(key);\n\n            if (h !== undefined) {\n                // Nothing to do, a vertex in the middle of (i, j) was already created.\n                return h;\n            }\n\n            // The position of the new vertex.\n            tmpVectorA.set(position[i * 3], position[i * 3 + 1], position[i * 3 + 2]);\n            tmpVectorB.set(position[j * 3], position[j * 3 + 1], position[j * 3 + 2]);\n            tmpVectorC.lerpVectors(tmpVectorA, tmpVectorB, 0.5);\n\n            // The index of the new vertex.\n            const index = position.length / 3;\n            position.push(...tmpVectorC.toArray());\n            // Cache the position of the new vertex.\n            cache.set(key, index);\n\n            // The uvs of the new vertex.\n            if (uv !== undefined) {\n                tmpVectorA.set(uv[i * 2], uv[i * 2 + 1], 0);\n                tmpVectorB.set(uv[j * 2], uv[j * 2 + 1], 0);\n                tmpVectorC.lerpVectors(tmpVectorA, tmpVectorB, 0.5);\n                uv.push(tmpVectorC.x, tmpVectorC.y);\n            }\n\n            // The edge and wall attributes of the new vertex.\n            // If a new vertex has been introduced between i and j, connect the elements\n            // accordingly.\n            if (edge !== undefined) {\n                if (edge[i] === j) {\n                    edge.push(j);\n                    edge[i] = index;\n                } else if (edge[j] === i) {\n                    edge.push(i);\n                    edge[j] = index;\n                } else {\n                    edge.push(-1);\n                }\n            }\n            if (wall !== undefined) {\n                if (wall[i] === j) {\n                    wall.push(j);\n                    wall[i] = index;\n                } else if (wall[j] === i) {\n                    wall.push(i);\n                    wall[j] = index;\n                } else {\n                    wall.push(-1);\n                }\n            }\n\n            return index;\n        }\n\n        const newIndices = [];\n        while (indices.length >= 3) {\n            const v0 = indices.shift()!;\n            const v1 = indices.shift()!;\n            const v2 = indices.shift()!;\n\n            tmpVectorA.set(position[v0 * 3], position[v0 * 3 + 1], position[v0 * 3 + 2]);\n            tmpVectorB.set(position[v1 * 3], position[v1 * 3 + 1], position[v1 * 3 + 2]);\n            tmpVectorC.set(position[v2 * 3], position[v2 * 3 + 1], position[v2 * 3 + 2]);\n\n            const edgeToSplit = this.shouldSplitTriangle(tmpVectorA, tmpVectorB, tmpVectorC);\n\n            switch (edgeToSplit) {\n                case 0: {\n                    const v3 = middleVertex(v0, v1);\n                    indices.push(v0, v3, v2, v3, v1, v2);\n                    break;\n                }\n\n                case 1: {\n                    const v3 = middleVertex(v1, v2);\n                    indices.push(v0, v1, v3, v0, v3, v2);\n                    break;\n                }\n\n                case 2: {\n                    const v3 = middleVertex(v2, v0);\n                    indices.push(v0, v1, v3, v3, v1, v2);\n                    break;\n                }\n\n                case undefined: {\n                    newIndices.push(v0, v1, v2);\n                    break;\n                }\n\n                default:\n                    throw new Error(\"failed to subdivide the given geometry\");\n            }\n        }\n\n        positionAttr.array = new Float32Array(position);\n        positionAttr.count = position.length / positionAttr.itemSize;\n        positionAttr.needsUpdate = true;\n\n        geometry.setIndex(newIndices);\n\n        if (uv !== undefined) {\n            uvAttr.array = new Float32Array(uv);\n            uvAttr.count = uv.length / uvAttr.itemSize;\n            uvAttr.needsUpdate = true;\n        }\n\n        if (edge !== undefined) {\n            edgeAttr.array = new Float32Array(edge);\n            edgeAttr.count = edge.length / edgeAttr.itemSize;\n            edgeAttr.needsUpdate = true;\n        }\n\n        return geometry;\n    }\n\n    /**\n     * Returns if the given triangle should be subdivide.\n     *\n     * Implementations of this function should return the index of\n     * the edge of the triangle to split (0, 1, or 2) or undefined if\n     * the triangle doesn't need to be subdivided.\n     *\n     * @param a The position of the first vertex of the triangle.\n     * @param b The position of the second vertex of the triangle.\n     * @param c The position of the third vertex of the triangle.\n     */\n    protected abstract shouldSplitTriangle(a: Vector3, b: Vector3, c: Vector3): number | undefined;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\ndeclare let self: Worker & {\n    importScripts(..._scripts: string[]): void;\n};\n\nself.importScripts(\"three.min.js\");\n\nimport { OmvTileDecoderService } from \"@here/harp-omv-datasource/index-worker\";\n\nOmvTileDecoderService.start();\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from \"./lib/OmvDecoder\";\nexport * from \"./lib/OmvTiler\";\nexport * from \"./lib/OmvDecoderDefs\";\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from \"./lib/GroupedPriorityList\";\nexport * from \"./lib/Logger\";\nexport * from \"./lib/Math2D\";\nexport * from \"./lib/MathUtils\";\nexport * from \"./lib/Mixins\";\nexport * from \"./lib/assert\";\nexport * from \"./lib/CachedResource\";\nexport * from \"./lib/ContextLogger\";\nexport * from \"./lib/PerformanceTimer\";\nexport * from \"./lib/ObjectUtils\";\nexport * from \"./lib/OptionsUtils\";\nexport * from \"./lib/UriResolver\";\nexport * from \"./lib/UrlUtils\";\nexport * from \"./lib/Functions\";\nexport * from \"./lib/SampleBilinear\";\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * A `PriorityListElement` has a priority to assist in sorting. The idea is that the items in a\n * grouped priority list will not modify their priority during processing to such an amount, that\n * they will change into another group. Smaller lists are smaller to sort, and in case of resource\n * limitation (maximum number of rendered objects reached), not all items have to be sorted at all.\n */\nexport interface PriorityListElement {\n    /**\n     * The integer value of this priority is used to group objects of \"same\" priority.\n     */\n    priority: number;\n}\n\n/**\n * The `PriorityListGroup` contains a list of [[PriorityListElement]]s that all have the same\n * (integer) priority.\n */\nexport class PriorityListGroup<T extends PriorityListElement> {\n    constructor(readonly priority: number, public elements: T[] = new Array()) {}\n\n    /**\n     * Create and return a deep copy of the `PriorityListGroup<T>`.\n     *\n     * @returns A clone of the `PriorityListGroup<T>`.\n     */\n    clone(): PriorityListGroup<T> {\n        return new PriorityListGroup<T>(this.priority, this.elements.slice());\n    }\n\n    /**\n     * Removes an element from the group.\n     * @param element The element to remove.\n     * @returns true if the element was removed, false if it was not found in the group.\n     */\n    remove(element: T): boolean {\n        const foundIndex = this.elements.indexOf(element);\n        if (foundIndex === -1) {\n            return false;\n        }\n        this.elements.splice(foundIndex, 1);\n        return true;\n    }\n}\n\n/**\n * The `PriorityListGroupMap` is a map to map the (integer) priority to a [[PriorityListGroup]].\n */\nexport type PriorityListGroupMap<T extends PriorityListElement> = Map<number, PriorityListGroup<T>>;\n\n/**\n * The `GroupedPriorityList` contains a [[PriorityListGroupMap]] to manage a larger number of items\n * in priority groups.\n */\nexport class GroupedPriorityList<T extends PriorityListElement> {\n    readonly groups: PriorityListGroupMap<T> = new Map();\n    /**\n     * Add an element to the `GroupedPriorityList`. Selects group based on the elements priority.\n     *\n     * @param element Element to be added.\n     */\n    add(element: T): void {\n        this.getGroup(element.priority).elements.push(element);\n    }\n\n    /**\n     * Remove an element from the `GroupedPriorityList`.\n     *\n     * Note: It is required that the priority is the same as it was when the element has been added.\n     * Otherwise, the removal will fail.\n     *\n     * @param element Element to be removed.\n     * @returns `True` if the element was removed, `false` otherwise.\n     */\n    remove(element: T): boolean {\n        const group = this.findGroup(element.priority);\n        if (group !== undefined && group.remove(element)) {\n            if (group.elements.length === 0) {\n                this.groups.delete(group.priority);\n            }\n\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Remove all internal [[PriorityListGroup]]s.\n     */\n    clear(): void {\n        this.groups.clear();\n    }\n\n    /**\n     * Merge another [[GroupedPriorityList]] into this one.\n     *\n     * @param other Other group to merge.\n     */\n    merge(other: GroupedPriorityList<T>): GroupedPriorityList<T> {\n        for (const otherGroup of other.groups) {\n            const group = this.findGroup(otherGroup[1].priority);\n            if (group === undefined) {\n                this.groups.set(Math.floor(otherGroup[1].priority), otherGroup[1].clone());\n                continue;\n            }\n            group.elements = group.elements.concat(otherGroup[1].elements);\n        }\n        return this;\n    }\n\n    clone(): GroupedPriorityList<T> {\n        const clone = new GroupedPriorityList<T>();\n        for (const [priority, group] of this.groups) {\n            clone.groups.set(priority, group.clone());\n        }\n        return clone;\n    }\n\n    /**\n     * Apply function to all elements in this `GroupedPriorityList`.\n     *\n     * @param {(element: T) => void} fun Function to apply.\n     */\n    forEach(fun: (element: T) => void): void {\n        for (const group of this.groups) {\n            group[1].elements.forEach(fun);\n        }\n    }\n\n    /**\n     * Count the number of elements in this `GroupedPriorityList`.\n     */\n    count(): number {\n        let n = 0;\n        for (const group of this.groups) {\n            n += group[1].elements.length;\n        }\n        return n;\n    }\n\n    /**\n     * Get group of elements that have the same (integer) priority.\n     *\n     * @param priority The priority to retrieve all elements from.\n     */\n    private findGroup(priority: number): PriorityListGroup<T> | undefined {\n        const normalizedPriority = Math.floor(priority);\n        const group = this.groups.get(normalizedPriority);\n        return group;\n    }\n\n    /**\n     * Get group of elements that have the same (integer) priority.\n     *\n     * @param priority The priority to retrieve all elements from.\n     */\n    private getGroup(priority: number): PriorityListGroup<T> {\n        let group = this.findGroup(priority);\n\n        if (group === undefined) {\n            const normalizedPriority = Math.floor(priority);\n            group = new PriorityListGroup<T>(normalizedPriority);\n            this.groups.set(group.priority, group);\n        }\n\n        return group;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from \"./ConsoleChannel\";\nexport * from \"./IChannel\";\nexport * from \"./ILogger\";\nexport * from \"./Logger\";\nexport * from \"./LoggerManager\";\nexport * from \"./MultiChannel\";\nexport * from \"./WorkerChannel\";\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ILoggerManager } from \"./ILoggerManager\";\nimport { LoggerManagerImpl } from \"./LoggerManagerImpl\";\n\n/**\n * The LoggerManager class implements a singleton object that handles logging.\n *\n * Example:\n *\n * ```typescript\n *\n * const logger = LoggerManager.instance.create(\"MyFontLoaderClass\");\n * if (missingFonts.length > 0) {\n *     logger.error(\"These fonts can not be loaded: \", missingFonts);\n * } else {\n *     logger.log(\"All fonts have been loaded.\");\n * }\n * ```\n */\nexport class LoggerManager {\n    private static m_instance: ILoggerManager;\n\n    static get instance(): ILoggerManager {\n        return this.m_instance || (this.m_instance = new LoggerManagerImpl());\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ConsoleChannel } from \"./ConsoleChannel\";\nimport { IChannel } from \"./IChannel\";\nimport { ILogger, LoggerOptions, LogLevel } from \"./ILogger\";\nimport { ILoggerManager } from \"./ILoggerManager\";\nimport { Logger } from \"./Logger\";\nimport { WorkerChannel } from \"./WorkerChannel\";\n\n/**\n * LoggerManagerImpl is the class for the singleton instance of the logger manager.\n * It handles channels and loggers.\n */\n\nexport class LoggerManagerImpl implements ILoggerManager {\n    channel: IChannel;\n    private readonly m_loggers: ILogger[] = [];\n    private m_levelSetForAll?: LogLevel;\n\n    constructor() {\n        this.channel =\n            typeof self === \"undefined\" || typeof self.document !== \"undefined\"\n                ? new ConsoleChannel()\n                : new WorkerChannel();\n    }\n\n    getLoggerNames(): string[] {\n        return this.m_loggers.map(logger => logger.name);\n    }\n\n    getLogger(name: string): ILogger | undefined {\n        return this.m_loggers.find(logger => logger.name === name);\n    }\n\n    create(loggerName: string, options: LoggerOptions = {}): ILogger {\n        if (\n            this.m_levelSetForAll !== undefined &&\n            (options.level === undefined || options.level < this.m_levelSetForAll)\n        ) {\n            options.level = this.m_levelSetForAll;\n        }\n        const logger = new Logger(loggerName, this.channel, options);\n        this.m_loggers.push(logger);\n        return logger;\n    }\n\n    dispose(logger: ILogger) {\n        const found = this.m_loggers.indexOf(logger);\n        if (found < 0) {\n            throw new Error(`Cannot unregister \"${logger}\" : no such logger registered.`);\n        }\n        this.m_loggers.splice(found, 1);\n    }\n\n    updateAll(options: LoggerOptions) {\n        for (const logger of this.m_loggers) {\n            logger.update(options);\n        }\n    }\n\n    update(loggerName: string, config: LoggerOptions) {\n        for (const logger of this.m_loggers) {\n            if (logger.name === loggerName) {\n                logger.update(config);\n            }\n        }\n    }\n\n    enableAll(enabled: boolean) {\n        for (const logger of this.m_loggers) {\n            logger.enabled = enabled;\n        }\n    }\n\n    enable(loggerName: string, value: boolean) {\n        this.update(loggerName, { enabled: value });\n    }\n\n    setLogLevelForAll(level: LogLevel) {\n        this.m_levelSetForAll = level;\n        for (const logger of this.m_loggers) {\n            logger.level = level;\n        }\n    }\n\n    setLogLevel(loggerName: string, level: LogLevel) {\n        this.update(loggerName, { level });\n    }\n\n    setChannel(channel: IChannel) {\n        this.channel = channel;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { IChannel } from \"./IChannel\";\n\n/**\n * Class allowing mixing several channels.\n */\nexport class MultiChannel implements IChannel {\n    private readonly channels: IChannel[] = [];\n    constructor(...channels: IChannel[]) {\n        this.channels = channels;\n    }\n\n    error(message?: any, ...optionalParams: any[]) {\n        for (const channel of this.channels) {\n            channel.error(message, ...optionalParams);\n        }\n    }\n\n    debug(message?: any, ...optionalParams: any[]) {\n        for (const channel of this.channels) {\n            channel.debug(message, ...optionalParams);\n        }\n    }\n\n    info(message?: any, ...optionalParams: any[]) {\n        for (const channel of this.channels) {\n            channel.info(message, ...optionalParams);\n        }\n    }\n\n    log(message?: any, ...optionalParams: any[]) {\n        for (const channel of this.channels) {\n            channel.log(message, ...optionalParams);\n        }\n    }\n\n    trace(message?: any, ...optionalParams: any[]) {\n        for (const channel of this.channels) {\n            channel.trace(message, ...optionalParams);\n        }\n    }\n\n    warn(message?: any, ...optionalParams: any[]) {\n        for (const channel of this.channels) {\n            channel.warn(message, ...optionalParams);\n        }\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport namespace Math2D {\n    /**\n     * Alternative 2D box object with less memory impact (four numbers instead of two min/max\n     * objects with two numbers each). Should be faster.\n     */\n    export class Box {\n        /**\n         * Alternative 2D box object with less memory impact (four numbers instead of two min/max\n         * objects with two numbers each). Should be faster.\n         *\n         * @param x New X value.\n         * @param y New y value.\n         * @param w New w value.\n         * @param h New h value.\n         */\n        constructor(public x = 0, public y = 0, public w = 0, public h = 0) {}\n\n        /**\n         * Set new values to all properties of the box.\n         *\n         * @param x New X value.\n         * @param y New y value.\n         * @param w New w value.\n         * @param h New h value.\n         */\n        set(x: number, y: number, w: number, h: number) {\n            this.x = x;\n            this.y = y;\n            this.w = w;\n            this.h = h;\n        }\n\n        /**\n         * Test box for inclusion of point.\n         *\n         * @param x X coordinate of point.\n         * @param y Y coordinate of point.\n         */\n        contains(x: number, y: number): boolean {\n            return this.x <= x && this.x + this.w >= x && this.y <= y && this.y + this.h >= y;\n        }\n\n        /**\n         * Test box for inclusion of another box.\n         *\n         * @param other Box 2 to test for inclusion.\n         */\n        containsBox(other: Box): boolean {\n            const xmax = other.x + other.w;\n            const ymax = other.y + other.h;\n            return (\n                this.contains(other.x, other.y) &&\n                this.contains(xmax, other.y) &&\n                this.contains(other.x, ymax) &&\n                this.contains(xmax, ymax)\n            );\n        }\n\n        /**\n         * Test two boxes for intersection.\n         *\n         * @param other Box 2 to test for intersection.\n         */\n        intersects(other: Box): boolean {\n            return (\n                this.x <= other.x + other.w &&\n                this.x + this.w >= other.x &&\n                this.y <= other.y + other.h &&\n                this.y + this.h >= other.y\n            );\n        }\n    }\n\n    /**\n     * Box to store UV coordinates.\n     */\n    export interface UvBox {\n        s0: number;\n        t0: number;\n        s1: number;\n        t1: number;\n    }\n\n    /**\n     * Compute squared distance between two 2D points `a` and `b`.\n     *\n     * @param ax Point a.x\n     * @param ay Point a.y\n     * @param bx Point b.x\n     * @param by Point b.y\n     * @returns Squared distance between the two points\n     */\n    export function distSquared(ax: number, ay: number, bx: number, by: number): number {\n        return (ax - bx) * (ax - bx) + (ay - by) * (ay - by);\n    }\n\n    /**\n     * Computes the squared length of a line.\n     *\n     * @param line An array of that forms a line via [x,y,z,x,y,z,...] tuples.\n     */\n    export function computeSquaredLineLength(line: number[]): number {\n        let squaredLineLength: number = 0;\n\n        const length = line.length - 4;\n        for (let i = 0; i < length; i += 3) {\n            const xDiff = line[i + 3] - line[i];\n            const yDiff = line[i + 4] - line[i + 1];\n            squaredLineLength += xDiff * xDiff + yDiff * yDiff;\n        }\n        return squaredLineLength;\n    }\n\n    /**\n     * Compute squared distance between a 2D point and a 2D line segment.\n     *\n     * @param px Test point X\n     * @param py Test point y\n     * @param l0x Line segment start X\n     * @param l0y Line segment start Y\n     * @param l1x Line segment end X\n     * @param l1y Line segment end Y\n     * @returns Squared distance between point and line segment\n     */\n    export function distToSegmentSquared(\n        px: number,\n        py: number,\n        l0x: number,\n        l0y: number,\n        l1x: number,\n        l1y: number\n    ): number {\n        const lineLengthSuared = distSquared(l0x, l0y, l1x, l1y);\n        if (lineLengthSuared === 0) {\n            return distSquared(px, py, l0x, l0y);\n        }\n        let t = ((px - l0x) * (l1x - l0x) + (py - l0y) * (l1y - l0y)) / lineLengthSuared;\n        t = Math.max(0, Math.min(1, t));\n        return distSquared(px, py, l0x + t * (l1x - l0x), l0y + t * (l1y - l0y));\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport namespace MathUtils {\n    /**\n     * Ensures that input value fits in a given range.\n     *\n     * @param value The value to be clamped.\n     * @param min Minimum value.\n     * @param max Maximum value.\n     *\n     * @returns Clamped value.\n     */\n    export function clamp(value: number, min: number, max: number): number {\n        return value < min ? min : value > max ? max : value;\n    }\n\n    /**\n     * Returns a linear interpolation between the values of edge0 and edge1 based on the factor.\n     *\n     * Given two known points the linear interpolant between these points may be presented as\n     * straight line. This means that for given factor change the resulting change of return\n     * value is always const.\n     * @see https://en.wikipedia.org/wiki/Linear_interpolation\n     *\n     * @param edge0\n     * @param edge1\n     * @param factor Interpolation factor that ranges between: 0 <= x <= 1.\n     */\n    export function lerp(edge0: number, edge1: number, factor: number): number {\n        return edge0 * (1 - factor) + edge1 * factor;\n    }\n\n    /**\n     * Returns a smooth interpolation between the values edge0 and edge1 based on the interpolation\n     * factor x. `0 <= x <= 1`.\n     * @see https://en.wikipedia.org/wiki/Smoothstep\n     *\n     * @param edge0\n     * @param edge1\n     * @param x\n     */\n    export function smoothStep(edge0: number, edge1: number, x: number) {\n        // Scale, bias and saturate x to 0..1 range\n        x = clamp((x - edge0) / (edge1 - edge0), 0.0, 1.0);\n        // Evaluate polynomial\n        return x * x * (3 - 2 * x);\n    }\n\n    /**\n     * Returns a smooth interpolation between the values edge0 and edge1 based on the interpolation\n     * factor x. `0 <= x <= 1`.\n     *\n     * Improved version by Ken Perlin, which has zero 1st- and 2nd-order derivatives at `x = 0` and\n     * `x = 1`:\n     *\n     * @see https://en.wikipedia.org/wiki/Smoothstep\n     *\n     * @param edge0\n     * @param edge1\n     * @param x\n     */\n    export function smootherStep(edge0: number, edge1: number, x: number) {\n        // Scale, and clamp x to 0..1 range\n        x = clamp((x - edge0) / (edge1 - edge0), 0.0, 1.0);\n        // Evaluate polynomial\n        return x * x * x * (x * (x * 6 - 15) + 10);\n    }\n\n    /**\n     * Maps a number from one range to another.\n     *\n     * @param val The incoming value to be converted.\n     * @param inMin Lower bound of the value's current range.\n     * @param inMax Upper bound of the value's current range.\n     * @param outMin Lower bound of the value's target range.\n     * @param outMax Upper bound of the value's target range.\n     */\n    export function map(val: number, inMin: number, inMax: number, outMin: number, outMax: number) {\n        return ((val - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin;\n    }\n\n    /**\n     * Returns the smaller of the two given numbers. Both numbers may be undefined, in which case\n     * the result is undefined. If only one of the numbers is undefined, the other number is\n     * returned.\n     *\n     * @param a First number.\n     * @param b Second number.\n     */\n    export function min2(a: number | undefined, b: number | undefined): number | undefined {\n        let result: number | undefined;\n\n        if (a !== undefined) {\n            result = a;\n        }\n        if (b !== undefined) {\n            result = result === undefined ? b : Math.min(result, b);\n        }\n\n        return result;\n    }\n\n    /**\n     * Returns the larger of the two given numbers. Both numbers may be undefined, in which case\n     * the result is undefined. If only one of the numbers is undefined, the other number is\n     * returned.\n     *\n     * @param a First number.\n     * @param b Second number.\n     */\n    export function max2(a: number | undefined, b: number | undefined): number | undefined {\n        let result: number | undefined;\n\n        if (a !== undefined) {\n            result = a;\n        }\n        if (b !== undefined) {\n            result = result === undefined ? b : Math.max(result, b);\n        }\n\n        return result;\n    }\n\n    /**\n     * Checks if the value of a given number is inside an upper or lower bound. The bounds may be\n     * undefined, in which case their value is ignored.\n     *\n     * @param value Value to check.\n     * @param lowerBound The lower bound to check the value against.\n     * @param upperBound The upper bound to check the value against.\n     *\n     * @returns `true` if value is inside the bounds or if the bounds are `undefined`, `false`\n     *          otherwise.\n     */\n    export function isClamped(\n        value: number,\n        lowerBound: number | undefined,\n        upperBound: number | undefined\n    ): boolean {\n        if (lowerBound !== undefined && value < lowerBound) {\n            return false;\n        }\n        if (upperBound !== undefined && value > upperBound) {\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * Smoothly interpolates between two values using cubic formula\n     *\n     * @param startValue\n     * @param endValue\n     * @param time\n     * @returns Result of the interpolation within the range of `[startValue, endValue]`\n     */\n    export function easeInOutCubic(startValue: number, endValue: number, time: number): number {\n        const timeValue =\n            time < 0.5 ? 4 * time * time * time : (time - 1) * (2 * time - 2) * (2 * time - 2) + 1;\n        return startValue + (endValue - startValue) * timeValue;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Copy methods and properties from one prototype into another.\n *\n * @see https://www.typescriptlang.org/docs/handbook/mixins.html\n *\n * @param derivedCtor Class to mix methods and properties into.\n * @param baseCtors Class to take all methods and properties from.\n */\nexport function applyMixins(derivedCtor: any, baseCtors: any[]) {\n    baseCtors.forEach(baseCtor => {\n        Object.getOwnPropertyNames(baseCtor.prototype).forEach(name => {\n            derivedCtor.prototype[name] = baseCtor.prototype[name];\n        });\n    });\n}\n\n/**\n * Copy methods from one prototype into another.\n *\n * @see https://www.typescriptlang.org/docs/handbook/mixins.html\n *\n * @param derivedCtor Class to mix methods into.\n * @param baseCtors Class to take all methods from.\n */\nexport function applyMixinsWithoutProperties(derivedCtor: any, baseCtors: any[]) {\n    baseCtors.forEach(baseCtor => {\n        Object.getOwnPropertyNames(baseCtor.prototype).forEach(name => {\n            const descriptor = Object.getOwnPropertyDescriptor(baseCtor.prototype, name);\n            if (\n                descriptor !== undefined &&\n                descriptor.get === undefined &&\n                name !== \"constructor\"\n            ) {\n                derivedCtor.prototype[name] = baseCtor.prototype[name];\n            }\n        });\n    });\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\ndeclare const process: any;\n\n// cache value, because access to process.env.NODE_ENV is SLOW!\nconst isProduction = process.env.NODE_ENV === \"production\";\n\n//TODO: Make assertHandler configurable\n\n/**\n * Implementation of assert as a development help\n *\n * Note - this is deliberately a global function so that minimizers remove the\n * entire call when building for production.\n *\n * @hidden\n * @param condition Condition to match, if false, throws an Error(message)\n * @param message Optional message, defaults to \"ASSERTION failed\"\n */\nexport function assert(condition: boolean, message?: string): void {\n    if (!isProduction) {\n        if (!condition) {\n            throw new Error(message !== undefined ? message : \"ASSERTION failed\");\n        }\n    }\n}\n\nexport function assertExists<T>(element: T | undefined, message?: string): T {\n    if (!isProduction) {\n        if (element === undefined || element === null) {\n            throw new Error(\n                message !== undefined ? message : \"ASSERTION failed: Element is undefined or null\"\n            );\n        }\n    }\n    return element!;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Refinement of `console` interface only for important information i.e `info`, `warn` and `errors`.\n */\nexport interface ISimpleChannel {\n    info(message?: any, ...optionalParams: any[]): void;\n    warn(message?: any, ...optionalParams: any[]): void;\n    error(message?: any, ...optionalParams: any[]): void;\n}\n\n/**\n * Extension of [[ISimpleChannel]] to support contextual logging by adding stack of prefixes.\n */\nexport interface IContextLogger extends ISimpleChannel {\n    /**\n     * Push \"attribute-like\" context.\n     */\n    pushAttr(name: string): void;\n\n    /**\n     * Push \"index-like\" context.\n     *\n     * Following log messages will be prefixed with `[index]`.\n     */\n    pushIndex(index: string | number): void;\n\n    /**\n     * Remove current context from top of stack.\n     */\n    pop(): void;\n}\n\n/**\n * Context-aware logger that decorates log message with stack-based prefix, emits `headerMessage`\n * before first actual log message.\n */\nexport class ContextLogger implements IContextLogger {\n    private readonly context: string[] = [];\n    private m_headerLogged = false;\n\n    /**\n     * Construct a context-aware logger that logs to `m_logger`.\n     */\n    constructor(readonly m_logger: ISimpleChannel, readonly headerMessage: string) {}\n\n    /**\n     * Push \"attribute-like\" context.\n     *\n     * Following log messages will be prefixed with `name` or `.name` depending on current context.\n     */\n    pushAttr(name: string) {\n        this.context.push(`${this.context.length > 0 ? \".\" : \"\"}${name}`);\n    }\n\n    /**\n     * Push \"index-like\" context.\n     *\n     * Following log messages will be prefixed with `[index]`.\n     */\n    pushIndex(index: string | number) {\n        this.context.push(`[${index}]`);\n    }\n\n    pop() {\n        this.context.pop();\n    }\n\n    // They, are public member functions it's just tslint who doesn't understand this.\n\n    // tslint:disable:member-ordering\n    warn = this.createLogMethod(\"warn\");\n    info = this.createLogMethod(\"info\");\n    error = this.createLogMethod(\"error\");\n    // tslint:enable:member-ordering\n\n    private createLogMethod(severity: \"warn\" | \"info\" | \"error\") {\n        return (message: string, ...rest: any[]) => {\n            if (!this.m_headerLogged) {\n                this.m_logger.info(this.headerMessage);\n                this.m_headerLogged = true;\n            }\n            this.m_logger[severity](`${this.context.join(\"\")}: ${message}`, ...rest);\n        };\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/* tslint:disable:max-line-length */\n/**\n * See:\n * https://developers.google.com/web/updates/2012/08/When-milliseconds-are-not-enough-performance-now\n */\n/* tslint:ensable:max-line-length */\n\nexport class PerformanceTimer {\n    /**\n     * Returns timestamp in milliseconds since page load.\n     *\n     * If the [[DOMHighResTimeStamp]] is supported, the resolution is up to 5 microseconds,\n     * otherwise it is in milliseconds. Timespans are computed by taking the difference between two\n     * samples.\n     *\n     * Example:\n     * ```typescript\n     * const now = PerformanceTimer.now();\n     * // call some expensive function for which you want to check the duration.\n     * const end = PerformanceTimer.now();\n     * const elapsedTime = end - now;\n     * ```\n     */\n    static now(): number {\n        return PerformanceTimer.nowFunc();\n    }\n\n    // tslint:disable-next-line:no-unused-variable\n    private static readonly instance = new PerformanceTimer();\n\n    private static readonly nowFunc: () => number = PerformanceTimer.getNowFunc();\n\n    private static getNowFunc() {\n        if (typeof performance !== \"undefined\" && typeof performance.now !== \"undefined\") {\n            return () => performance.now();\n        }\n\n        // fall back to Date.getTime()\n        return () => {\n            return new Date().getTime();\n        };\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Deep clone of object.\n *\n * Like `JSON.parse(JSON.stringify(obj))`, but supports basic javascript types (string, number,\n * object), `Date` and `RegExp`s and cycles.\n *\n * Throws error if enounters object with `prototype` assuming that in general class instances\n * cannot be reliably cloned by generic algorithm.\n */\nexport function cloneDeep<T>(obj: T): T {\n    const cache: Map<object, object> = new Map();\n    function cloneInternal(src: any): any {\n        if (src === null) {\n            return null;\n        } else if (typeof src === \"object\") {\n            const cached = cache.get(src);\n            if (cached !== undefined) {\n                return cached;\n            }\n\n            if (Array.isArray(src)) {\n                const result: any[] = [];\n                cache.set(src, result);\n                result.length = src.length;\n                for (let i = 0; i < result.length; ++i) {\n                    result[i] = cloneInternal(src[i]);\n                }\n                return result;\n            } else if (src instanceof Date) {\n                const result = new Date(src.getTime());\n                cache.set(src, result);\n                return result;\n            } else if (src instanceof RegExp) {\n                const result = new RegExp(src.source, src.flags);\n                cache.set(src, result);\n                return result;\n            } else if (src.constructor !== Object) {\n                throw new Error(\"cloneDeep doesn't support objects with custom prototypes\");\n            } else {\n                const result: typeof src = {};\n                cache.set(src, result);\n                for (const key in src) {\n                    if (src.hasOwnProperty(key)) {\n                        result[key] = cloneInternal(src[key]);\n                    }\n                }\n                return result;\n            }\n        } else {\n            // string, number, boolean, undefined and functions are returned as is\n            return src;\n        }\n    }\n\n    const r = cloneInternal(obj);\n    cache.clear();\n    return r;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Get first defined value.\n *\n * Specialized \"replacement\" for `a || b || c` used frequently to get value from various sources\n * (defaults, configs  constants).\n * In contrast to `||`, this function provides proper typing for usual use cases (constant as last\n * argument) and correct treatment of `null` and `undefined`.\n *\n * If last parameter is \"defined\" then return type is `T`, otherwise return type is `T | undefined`.\n *\n * Usage example:\n *\n *     interface Config {\n *         x?: number;\n *     }\n *     const someConfig: Config = {};\n *     const val: number | undefined = undefined;\n *     const DEFAULT = 5;\n *     const x = getOptionValue(val, someConfig.x, DEFAULT);\n *         // typeof x === 'number' because DEFAULT is defined\n *     const y = getOptionValue(val, someConfig.x);\n *         // typeof y === 'number | undefined' because someConfig.x is possibly undefined\n */\n// specialized overloads with last param defined params overload\nexport function getOptionValue<T>(a: T): T;\nexport function getOptionValue<T>(a: T | undefined, b: T): T;\nexport function getOptionValue<T>(a: T | undefined, b: T | undefined, c: T): T;\nexport function getOptionValue<T>(a: T | undefined, b: T | undefined, c: T | undefined, d: T): T;\nexport function getOptionValue<T>(...values: Array<T | undefined>): T | undefined;\n\nexport function getOptionValue<T>(...values: Array<T | undefined>): T | undefined {\n    for (const candidate of values) {\n        if (candidate !== undefined && candidate !== null) {\n            return candidate;\n        }\n    }\n    return undefined;\n}\n\n/**\n * Merge options into existing parameters object.\n *\n * Convenience helper with _similar_ semantics as:\n *\n *     const finalParams1 = { ...defaults, ... options };\n *     const finalParams2 = Object.assign({}, defaults, options);\n *\n * This function doesn't copy _extra_ properties of `options` that doesn't exist in `defaults`.\n * `defaults` is used as _parameters_ template.\n *\n * This doc uses following notion of `option` and `parameter` terms:\n * * `parameter` is a variable, or 'almost constant' of procedure/function/algorith/object\n *    * `parameter` usually have sensible and usually used default\n *    * `parameter` is always defined (no `undefined`, `null` or `?` in type)\n *    * `parameter` can be overriden by specyfying `option` with same name\n * * `option` means value that may be passed optionally, overrides `parameter` value with same name\n *\n * Usage:\n *\n *     interface FooParams {\n *         useTextures: boolean;\n *         opacity: number;\n *     }\n *\n *     const FOO_DEFAULTS: FooParams = {\n *         useTextures: true,\n *         opacity: 0.8\n *     };\n *\n *     type FooOptions = Partial<FooParams>;\n *\n *     function doSomething(options: FooOptions) {\n *         const params = mergeWithOptions(FOO_DEFAULTS, options);\n *             // typeof params === FooParams\n *             // params.opacity = 0.5\n *             // params.useTextures = true\n *             // params.someOtherOptionFromOtherApi is not defined\n *     }\n *     const opt = {opacity: 0.5, someOtherOptionFromOtherApi: 'aaa'};\n *     doSomething(opt);\n *\n * Rationale:\n *   * both `Object.assign` and spread operator copy extra options\n *   * `Object.assign` & `spread operator` may copy `undefined` and `null`s if they really exist\n *     in options object\n *\n * @param parameters parmeters template object holding all expected parameters\n * @param options options object\n * @returns new object with `parameters` overriden by values from `options`\n */\nexport function mergeWithOptions<T extends object>(parameters: T, options?: Partial<T>): T {\n    // NOTE: `as object` needed due to TypeScript bug:\n    //       https://github.com/Microsoft/TypeScript/issues/14409\n    // tslint:disable-next-line:no-object-literal-type-assertion\n    const result = { ...(parameters as object) } as T;\n    if (options === undefined || options === null) {\n        return result;\n    }\n    for (const prop in parameters) {\n        if (parameters.hasOwnProperty(prop)) {\n            const optionValue = options[prop];\n            if (optionValue !== undefined && optionValue !== null) {\n                result[prop] = optionValue as any;\n            }\n        }\n    }\n    return result;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { resolveReferenceUri } from \"./UrlUtils\";\n\n/**\n * Custom, app-specific URI resolver interface.\n */\nexport interface UriResolver {\n    /**\n     * Attempt to resolve `URI` to `URL`.\n     *\n     * If given resolver doesn't know about this specific kind of `URI`, it should return string as\n     * received.\n     *\n     * @param input `URI`\n     * @returns actual `URL` if this handler knows how locate given `uri` or original `uri`\n     */\n    resolveUri(uri: string): string;\n}\n\nexport interface PrefixUriResolverDefinition {\n    [prefix: string]: string;\n}\n\n/**\n * Basic, import-map like [[UriResolver]].\n *\n * Resolves `uris` basing on exact or prefix match of `key` from `definitions`.\n *\n * In definitions, `key` is matched against input uri with following strategy:\n *  - `key` without trailing `/` -> `key` and input `uri` must be identical\n *  - `key` with trailing `/`, -> `key` is treated as \"package prefix\", so `uri` must start with\n *    `key`\n *\n * Example:\n * ```\n * {\n *     \"local://poiMasterList\": \"/assets/poiMasterList.json\"\n *        // will match only 'local://poiMasterList' and resolve `/assets/poiMasterList.json`\n *     \"local://icons/\": \"/assets/icons/\"\n *        // will match only 'local://icons/ANYPATH' (and similar) and resolve to\n *        // `/assets/icons/ANYPATH\n * }\n * ```\n * Inspired by [`WICG` import maps proposal](https://github.com/WICG/import-maps#the-import-map).\n */\nexport class PrefixMapUriResolver implements UriResolver {\n    constructor(readonly definitions: PrefixUriResolverDefinition) {}\n\n    resolveUri(uri: string) {\n        return Object.keys(this.definitions).reduce((r, key) => {\n            if (key.endsWith(\"/\") && r.startsWith(key)) {\n                const newPrefix = this.definitions[key];\n                return newPrefix + r.substr(key.length);\n            } else if (r === key) {\n                return this.definitions[key];\n            }\n            return r;\n        }, uri);\n    }\n}\n\n/**\n * [UriResolver] that resolve relative `uri`s against to parent resource `uri`.\n */\nexport class RelativeUriResolver implements UriResolver {\n    constructor(readonly parentUri: string) {}\n\n    resolveUri(uri: string) {\n        return resolveReferenceUri(this.parentUri, uri);\n    }\n}\n\n/**\n * Compose URI resolvers.\n *\n * Creates new [[UriResolver]] that applies resolvers in orders or arguments.\n *\n * Example:\n *\n *     const themeUrl = ...; // url of parent object\n *     const childUrlResolver = composeUrlResolvers(\n *           new RelativeUriResolver(themeUrl),\n *           defaultUrlResolver\n *     );\n */\nexport function composeUriResolvers(...resolvers: Array<UriResolver | undefined>): UriResolver {\n    return {\n        resolveUri(originalUrl: string) {\n            return resolvers.reduce((url, resolver) => {\n                if (resolver !== undefined) {\n                    return resolver.resolveUri(url);\n                } else {\n                    return url;\n                }\n            }, originalUrl);\n        }\n    };\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Chains two functions for further assigning as one wrapped callback function\n */\nexport function chainCallbacks<T extends (this: unknown, ...args: any[]) => any>(\n    f1: T | null | undefined,\n    f2: T\n): T {\n    return function(this: any, ...args: any[]): ReturnType<T> {\n        if (f1) {\n            f1.apply(this, args);\n        }\n        return f2.apply(this, args);\n    } as T;\n}\n","/*\n * Copyright (C) 2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\ntype TypedArray =\n    | Int8Array\n    | Uint8Array\n    | Int16Array\n    | Uint16Array\n    | Int32Array\n    | Uint32Array\n    | Uint8ClampedArray\n    | Float32Array\n    | Float64Array;\n\n/**\n * Returns a bilinear-interpolated texture sample for a given texture.\n * @param texture Two-dimensional texture to sample.\n * @param width Texture width.\n * @param height Texture height.\n * @param u Number between 0 and 1 representing the location to sample in the width dimension.\n * @param v Number between 0 and 1 representing the location to sample in the height dimension.\n */\nexport function sampleBilinear(\n    texture: TypedArray,\n    width: number,\n    height: number,\n    u: number,\n    v: number\n): number {\n    const maxXIndex = width - 1;\n    const maxYIndex = height - 1;\n    // Compute the x and y coordinates relative to the mesh size.\n    const xIndex = u * maxXIndex;\n    const xIndexFloor = Math.floor(xIndex);\n    const yIndex = v * maxYIndex;\n    const yIndexFloor = Math.floor(yIndex);\n    const swIndex = yIndexFloor * width + xIndexFloor;\n    const seIndex = xIndexFloor < maxXIndex ? swIndex + 1 : swIndex;\n    const nwIndex = yIndexFloor < maxYIndex ? swIndex + width : swIndex;\n    const neIndex = xIndexFloor < maxXIndex ? nwIndex + 1 : nwIndex;\n    const swElevation = texture[swIndex];\n    const seElevation = texture[seIndex];\n    const nwElevation = texture[nwIndex];\n    const neElevation = texture[neIndex];\n    // Get the fractional components to do bilinear interpolation.\n    const xFrac = Number.isInteger(xIndex) ? 0 : xIndex - xIndexFloor;\n    const xFracInverse = 1 - xFrac;\n    const yFrac = Number.isInteger(yIndex) ? 0 : yIndex - yIndexFloor;\n    const yFracInverse = 1 - yFrac;\n    // The interpolation is the sum of the four closest neighbours each\n    // multiplied by the diagonal areas.\n    const result =\n        swElevation * xFracInverse * yFracInverse +\n        seElevation * xFrac * yFracInverse +\n        nwElevation * xFracInverse * yFrac +\n        neElevation * xFrac * yFrac;\n    return result;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { baseUrl } from \"./UrlUtils\";\n\n/**\n * Get base URL for from where relative URLs will be loaded.\n *\n * * In browser, it resolves to `baseUrl(location.href)` i.e document's base URL\n * (see: https://www.w3.org/TR/WD-html40-970917/htmlweb.html#h-5.1.2).\n *\n * * In node, it resolves to `file://${process.cwd()}`.\n */\nexport function getAppBaseUrl() {\n    return baseUrl(window.location.href);\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    BooleanLiteralExpr,\n    CallExpr,\n    CaseExpr,\n    Env,\n    Expr,\n    ExprScope,\n    ExprVisitor,\n    HasAttributeExpr,\n    LiteralExpr,\n    MatchExpr,\n    NullLiteralExpr,\n    NumberLiteralExpr,\n    ObjectLiteralExpr,\n    StringLiteralExpr,\n    Value,\n    VarExpr\n} from \"./Expr\";\n\nimport { ArrayOperators } from \"./operators/ArrayOperators\";\nimport { CastOperators } from \"./operators/CastOperators\";\nimport { ColorOperators } from \"./operators/ColorOperators\";\nimport { ComparisonOperators } from \"./operators/ComparisonOperators\";\nimport { FeatureOperators } from \"./operators/FeatureOperators\";\nimport { FlowOperators } from \"./operators/FlowOperators\";\nimport { InterpolationOperators } from \"./operators/InterpolationOperators\";\nimport { MapOperators } from \"./operators/MapOperators\";\nimport { MathOperators } from \"./operators/MathOperators\";\nimport { MiscOperators } from \"./operators/MiscOperators\";\nimport { ObjectOperators } from \"./operators/ObjectOperators\";\nimport { StringOperators } from \"./operators/StringOperators\";\nimport { TypeOperators } from \"./operators/TypeOperators\";\nimport { VectorOperators } from \"./operators/VectorOperators\";\n\nexport interface OperatorDescriptor {\n    /**\n     * Returns `true` if this operator requires a dynamic execution context (e.g. [\"zoom\"]).\n     */\n    isDynamicOperator?: (call: CallExpr) => boolean;\n\n    /**\n     * Evaluates the given expression.\n     */\n    call: (context: ExprEvaluatorContext, call: CallExpr) => Value;\n}\n\nexport interface OperatorDescriptorMap {\n    [name: string]: OperatorDescriptor;\n}\n\nconst operatorDescriptors = new Map<string, OperatorDescriptor>();\n\n/*\n * @hidden\n */\nexport class ExprEvaluatorContext {\n    private m_partialEvaluation = false;\n\n    constructor(\n        readonly evaluator: ExprEvaluator,\n        readonly env: Env,\n        readonly scope: ExprScope,\n        readonly cache?: Map<Expr, Value>\n    ) {}\n\n    /**\n     * `true` if the this context is used to partially evaluate expressions.\n     */\n    get partialEvaluation() {\n        return this.m_partialEvaluation;\n    }\n\n    /**\n     * Evaluate the given expression.\n     *\n     * @param expr The [[Expr]] to evaluate.\n     */\n    evaluate(expr: Expr | undefined) {\n        if (expr !== undefined) {\n            return expr.accept(this.evaluator, this);\n        }\n        throw new Error(\"Failed to evaluate expression\");\n    }\n\n    /**\n     * Partially evaluate the given expression.\n     *\n     * @param expr The [[Expr]] to evaluate.\n     */\n    partiallyEvaluate(expr: Expr | undefined): Expr {\n        if (expr === undefined) {\n            throw new Error(\"Failed to evaluate expression\");\n        }\n\n        const previousEvaluationMode = this.m_partialEvaluation;\n\n        this.m_partialEvaluation = true;\n\n        try {\n            const value = expr.accept(this.evaluator, this);\n\n            this.m_partialEvaluation = previousEvaluationMode;\n\n            if (value instanceof Expr) {\n                return value;\n            }\n\n            return LiteralExpr.fromValue(value);\n        } catch (error) {\n            // rethrow the exception\n            throw error;\n        } finally {\n            // reset the evaluation mode.\n            this.m_partialEvaluation = previousEvaluationMode;\n        }\n    }\n}\n\n/**\n * [[ExprEvaluator]] is used to evaluate [[Expr]] in a given environment.\n *\n * @hidden\n */\nexport class ExprEvaluator implements ExprVisitor<Value, ExprEvaluatorContext> {\n    static defineOperator(op: string, builtin: OperatorDescriptor) {\n        operatorDescriptors.set(op, builtin);\n    }\n\n    static defineOperators(builtins: OperatorDescriptorMap) {\n        Object.getOwnPropertyNames(builtins).forEach(p => {\n            this.defineOperator(p, builtins[p]);\n        });\n    }\n\n    /**\n     * Returns the [[OperatorDescriptor]] for the given operator name.\n     * @hidden\n     */\n    static getOperator(op: string): OperatorDescriptor | undefined {\n        return operatorDescriptors.get(op);\n    }\n\n    visitVarExpr(expr: VarExpr, context: ExprEvaluatorContext): Value {\n        const value = context.env.lookup(expr.name);\n        return value !== undefined ? value : null;\n    }\n\n    visitNullLiteralExpr(expr: NullLiteralExpr, context: ExprEvaluatorContext): Value {\n        return null;\n    }\n\n    visitBooleanLiteralExpr(expr: BooleanLiteralExpr, context: ExprEvaluatorContext): Value {\n        return expr.value;\n    }\n\n    visitNumberLiteralExpr(expr: NumberLiteralExpr, context: ExprEvaluatorContext): Value {\n        return expr.value;\n    }\n\n    visitStringLiteralExpr(expr: StringLiteralExpr, context: ExprEvaluatorContext): Value {\n        return expr.value;\n    }\n\n    visitObjectLiteralExpr(expr: ObjectLiteralExpr, context: ExprEvaluatorContext): Value {\n        return expr.value;\n    }\n\n    visitHasAttributeExpr(expr: HasAttributeExpr, context: ExprEvaluatorContext): Value {\n        return context.env.lookup(expr.name) !== undefined;\n    }\n\n    visitMatchExpr(match: MatchExpr, context: ExprEvaluatorContext): Value {\n        const r = context.evaluate(match.value);\n        for (const [label, body] of match.branches) {\n            if (Array.isArray(label) && (label as any[]).includes(r)) {\n                return context.evaluate(body);\n            } else if (label === r) {\n                return context.evaluate(body);\n            }\n        }\n        return context.evaluate(match.fallback);\n    }\n\n    visitCaseExpr(match: CaseExpr, context: ExprEvaluatorContext): Value {\n        for (const [condition, body] of match.branches) {\n            if (context.evaluate(condition)) {\n                return context.evaluate(body);\n            }\n        }\n        return context.evaluate(match.fallback);\n    }\n\n    visitCallExpr(expr: CallExpr, context: ExprEvaluatorContext): Value {\n        if (context.cache !== undefined) {\n            const v = context.cache.get(expr);\n            if (v !== undefined) {\n                return v;\n            }\n        }\n\n        const descriptor = expr.descriptor || operatorDescriptors.get(expr.op);\n\n        if (descriptor) {\n            expr.descriptor = descriptor;\n\n            const result = descriptor.call(context, expr);\n\n            if (context.cache) {\n                context.cache.set(expr, result);\n            }\n\n            return result;\n        }\n\n        throw new Error(`undefined operator '${expr.op}'`);\n    }\n}\n\nExprEvaluator.defineOperators(CastOperators);\nExprEvaluator.defineOperators(ComparisonOperators);\nExprEvaluator.defineOperators(MathOperators);\nExprEvaluator.defineOperators(StringOperators);\nExprEvaluator.defineOperators(ColorOperators);\nExprEvaluator.defineOperators(TypeOperators);\nExprEvaluator.defineOperators(MiscOperators);\nExprEvaluator.defineOperators(FlowOperators);\nExprEvaluator.defineOperators(ArrayOperators);\nExprEvaluator.defineOperators(InterpolationOperators);\nExprEvaluator.defineOperators(ObjectOperators);\nExprEvaluator.defineOperators(FeatureOperators);\nExprEvaluator.defineOperators(MapOperators);\nExprEvaluator.defineOperators(VectorOperators);\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr, Expr, JsonArray, NumberLiteralExpr, StringLiteralExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst VALID_ELEMENT_TYPES = [\"boolean\", \"number\", \"string\"];\n\nfunction checkElementTypes(arg: Expr, array: JsonArray) {\n    if (!(arg instanceof StringLiteralExpr) || !VALID_ELEMENT_TYPES.includes(arg.value)) {\n        throw new Error(\n            `expected \"boolean\", \"number\" or \"string\" instead of '${JSON.stringify(arg)}'`\n        );\n    }\n\n    const ty = arg.value;\n\n    array.forEach((element, index) => {\n        if (typeof element !== ty) {\n            throw new Error(`expected array element at index ${index} to have type '${ty}'`);\n        }\n    });\n}\n\nfunction checkArrayLength(arg: Expr, array: JsonArray) {\n    if (!(arg instanceof NumberLiteralExpr)) {\n        throw new Error(`missing expected number of elements`);\n    }\n\n    const length = arg.value;\n\n    if (array.length !== length) {\n        throw new Error(`the array must have ${length} element(s)`);\n    }\n}\n\nfunction checkArray(context: ExprEvaluatorContext, arg: Expr) {\n    const value = context.evaluate(arg);\n    if (!Array.isArray(value)) {\n        throw new Error(`'${value}' is not an array`);\n    }\n    return value;\n}\n\nconst operators = {\n    array: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            switch (call.args.length) {\n                case 0:\n                    throw new Error(\"not enough arguments\");\n                case 1:\n                    return checkArray(context, call.args[0]);\n                case 2: {\n                    const array = checkArray(context, call.args[1]);\n                    checkElementTypes(call.args[0], array);\n                    return array;\n                }\n                case 3: {\n                    const array = checkArray(context, call.args[2]);\n                    checkArrayLength(call.args[1], array);\n                    checkElementTypes(call.args[0], array);\n                    return array;\n                }\n                default:\n                    throw new Error(\"too many arguments\");\n            }\n        }\n    },\n    \"make-array\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            if (call.args.length === 0) {\n                throw new Error(\"not enough arguments\");\n            }\n            return [...call.args.map(arg => context.evaluate(arg))];\n        }\n    },\n    at: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const args = call.args;\n            const index = context.evaluate(args[0]);\n            if (typeof index !== \"number\") {\n                throw new Error(`expected the index of the element to retrieve`);\n            }\n            const value = context.evaluate(args[1]);\n            if (!Array.isArray(value)) {\n                throw new Error(`expected an array`);\n            }\n            return index >= 0 && index < value.length ? value[index] : null;\n        }\n    }\n};\n\nexport const ArrayOperators: OperatorDescriptorMap = operators;\nexport type ArrayOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst operators = {\n    \"to-boolean\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return Boolean(context.evaluate(call.args[0]));\n        }\n    },\n\n    \"to-string\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return String(context.evaluate(call.args[0]));\n        }\n    },\n\n    \"to-number\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            for (const arg of call.args) {\n                const value = Number(context.evaluate(arg));\n                if (!isNaN(value)) {\n                    return value;\n                }\n            }\n            throw new Error(\"cannot convert the value to a number\");\n        }\n    }\n};\n\nexport const CastOperators: OperatorDescriptorMap = operators;\nexport type CastOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nimport { ColorUtils } from \"../ColorUtils\";\nimport { CallExpr, Value } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\nimport { parseStringEncodedColor } from \"../StringEncodedNumeral\";\n\nconst operators = {\n    alpha: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            let color: Value | undefined = context.evaluate(call.args[0]);\n            if (typeof color === \"string\") {\n                color = parseStringEncodedColor(color);\n            }\n            const alpha = typeof color === \"number\" ? ColorUtils.getAlphaFromHex(color) : 1;\n            return alpha;\n        }\n    },\n    rgba: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const r = context.evaluate(call.args[0]);\n            const g = context.evaluate(call.args[1]);\n            const b = context.evaluate(call.args[2]);\n            const a = context.evaluate(call.args[3]);\n            if (\n                typeof r === \"number\" &&\n                typeof g === \"number\" &&\n                typeof b === \"number\" &&\n                typeof a === \"number\" &&\n                r >= 0 &&\n                g >= 0 &&\n                b >= 0 &&\n                a >= 0 &&\n                a <= 1\n            ) {\n                return rgbaToHex(r, g, b, a);\n            }\n            throw new Error(`unknown color 'rgba(${r},${g},${b},${a})'`);\n        }\n    },\n    rgb: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const r = context.evaluate(call.args[0]);\n            const g = context.evaluate(call.args[1]);\n            const b = context.evaluate(call.args[2]);\n            if (\n                typeof r === \"number\" &&\n                typeof g === \"number\" &&\n                typeof b === \"number\" &&\n                r >= 0 &&\n                g >= 0 &&\n                b >= 0\n            ) {\n                return rgbToHex(r, g, b);\n            }\n            throw new Error(`unknown color 'rgb(${r},${g},${b})'`);\n        }\n    },\n    // Hsl operator contains angle modulated to <0, 360> range, percent of\n    // saturation and lightness in <0, 100> range, i.e. hsl(360, 100, 100)\n    hsl: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const h = context.evaluate(call.args[0]);\n            const s = context.evaluate(call.args[1]);\n            const l = context.evaluate(call.args[2]);\n            if (\n                typeof h === \"number\" &&\n                typeof s === \"number\" &&\n                typeof l === \"number\" &&\n                h >= 0 &&\n                s >= 0 &&\n                l >= 0\n            ) {\n                return hslToHex(h, s, l);\n            }\n            throw new Error(`unknown color 'hsl(${h},${s}%,${l}%)'`);\n        }\n    }\n};\n\nfunction rgbaToHex(r: number, g: number, b: number, a: number): number {\n    // We decode rgba color channels using custom hex format with transparency.\n    return ColorUtils.getHexFromRgba(\n        THREE.MathUtils.clamp(r, 0, 255) / 255,\n        THREE.MathUtils.clamp(g, 0, 255) / 255,\n        THREE.MathUtils.clamp(b, 0, 255) / 255,\n        THREE.MathUtils.clamp(a, 0, 1)\n    );\n}\n\nfunction rgbToHex(r: number, g: number, b: number): number {\n    return ColorUtils.getHexFromRgb(\n        THREE.MathUtils.clamp(r, 0, 255) / 255,\n        THREE.MathUtils.clamp(g, 0, 255) / 255,\n        THREE.MathUtils.clamp(b, 0, 255) / 255\n    );\n}\n\nfunction hslToHex(h: number, s: number, l: number): number {\n    return ColorUtils.getHexFromHsl(\n        THREE.MathUtils.euclideanModulo(h, 360) / 360,\n        THREE.MathUtils.clamp(s, 0, 100) / 100,\n        THREE.MathUtils.clamp(l, 0, 100) / 100\n    );\n}\n\nexport const ColorOperators: OperatorDescriptorMap = operators;\nexport type ColorOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nfunction compare(context: ExprEvaluatorContext, call: CallExpr, strict: boolean = false) {\n    const left = context.evaluate(call.args[0]) as any;\n    const right = context.evaluate(call.args[1]) as any;\n\n    if (\n        !(\n            (typeof left === \"number\" && typeof right === \"number\") ||\n            (typeof left === \"string\" && typeof right === \"string\")\n        )\n    ) {\n        if (strict) {\n            throw new Error(`invalid operands '${left}' and '${right}' for operator '${call.op}'`);\n        }\n    }\n\n    switch (call.op) {\n        case \"<\":\n            return left < right;\n        case \">\":\n            return left > right;\n        case \"<=\":\n            return left <= right;\n        case \">=\":\n            return left >= right;\n        default:\n            throw new Error(`invalid comparison operator '${call.op}'`);\n    }\n}\n\nconst operators = {\n    \"!\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return !context.evaluate(call.args[0]);\n        }\n    },\n\n    \"==\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const left = context.evaluate(call.args[0]);\n            const right = context.evaluate(call.args[1]);\n            return left === right;\n        }\n    },\n\n    \"!=\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const left = context.evaluate(call.args[0]);\n            const right = context.evaluate(call.args[1]);\n            return left !== right;\n        }\n    },\n\n    \"<\": { call: (context: ExprEvaluatorContext, call: CallExpr) => compare(context, call) },\n    \">\": { call: (context: ExprEvaluatorContext, call: CallExpr) => compare(context, call) },\n    \"<=\": { call: (context: ExprEvaluatorContext, call: CallExpr) => compare(context, call) },\n    \">=\": { call: (context: ExprEvaluatorContext, call: CallExpr) => compare(context, call) }\n};\n\nexport const ComparisonOperators: OperatorDescriptorMap = operators;\nexport type ComparisonOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Env } from \"../Env\";\nimport { CallExpr, ExprScope } from \"../Expr\";\n\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst operators = {\n    \"geometry-type\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const geometryType = context.env.lookup(\"$geometryType\");\n            switch (geometryType) {\n                case \"point\":\n                    return \"Point\";\n                case \"line\":\n                    return \"LineString\";\n                case \"polygon\":\n                    return \"Polygon\";\n                default:\n                    return null;\n            }\n        }\n    },\n    \"feature-state\": {\n        isDynamicOperator: () => true,\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            if (context.scope !== ExprScope.Dynamic) {\n                throw new Error(\"feature-state cannot be used in this context\");\n            }\n            const property = context.evaluate(call.args[0]);\n            if (typeof property !== \"string\") {\n                throw new Error(`expected the name of the property of the feature state`);\n            }\n            const state = context.env.lookup(\"$state\");\n            if (Env.isEnv(state)) {\n                return state.lookup(property) ?? null;\n            } else if (state instanceof Map) {\n                return state.get(property) ?? null;\n            }\n            return null;\n        }\n    },\n    id: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return context.env.lookup(\"$id\") ?? null;\n        }\n    }\n};\n\nexport const FeatureOperators: OperatorDescriptorMap = operators;\nexport type FeatureOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr, Expr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nfunction conditionalCast(context: ExprEvaluatorContext, type: string, args: Expr[]) {\n    switch (type) {\n        case \"boolean\":\n        case \"number\":\n        case \"string\":\n            for (const childExpr of args) {\n                const value = context.evaluate(childExpr);\n                if (typeof value === type) {\n                    return value;\n                }\n            }\n            throw new Error(`expected a '${type}'`);\n        default:\n            throw new Error(`invalid type '${type}'`);\n    } // switch\n}\n\nconst operators = {\n    all: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            for (const childExpr of call.args) {\n                if (!context.evaluate(childExpr)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    },\n\n    any: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            for (const childExpr of call.args) {\n                if (context.evaluate(childExpr)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n    },\n\n    none: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            for (const childExpr of call.args) {\n                if (context.evaluate(childExpr)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    },\n\n    boolean: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return conditionalCast(context, \"boolean\", call.args);\n        }\n    },\n\n    number: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return conditionalCast(context, \"number\", call.args);\n        }\n    },\n\n    string: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return conditionalCast(context, \"string\", call.args);\n        }\n    }\n};\n\nexport const FlowOperators: OperatorDescriptorMap = operators;\nexport type FlowOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr, ExprScope, LiteralExpr, NumberLiteralExpr, Value } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\nimport { InterpolatedProperty } from \"../InterpolatedProperty\";\nimport { InterpolatedPropertyDefinition } from \"../InterpolatedPropertyDefs\";\n\ntype InterpolateCallExpr = CallExpr & {\n    _mode?: InterpolatedPropertyDefinition<any>[\"interpolation\"];\n    _exponent?: number;\n    _stops?: number[];\n    _interpolatedProperty?: InterpolatedProperty;\n};\n\n/**\n * Evaluates the given piecewise function.\n */\nfunction step(context: ExprEvaluatorContext, call: CallExpr) {\n    const { args } = call;\n\n    const value = context.evaluate(args[0]) as number;\n\n    if (value === null) {\n        // returns the default value of step.\n        return context.evaluate(args[1]);\n    }\n\n    if (typeof value !== \"number\") {\n        throw new Error(`the input of a 'step' operator must have type 'number'`);\n    }\n\n    let first = 1;\n    let last = args.length / 2 - 1;\n\n    while (first < last) {\n        // tslint:disable-next-line: no-bitwise\n        const mid = (first + last) >>> 1;\n        const stop = (args[mid * 2] as NumberLiteralExpr).value;\n\n        if (value < stop) {\n            last = mid - 1;\n        } else if (value > stop) {\n            first = mid + 1;\n        } else {\n            last = mid;\n        }\n    }\n\n    const result = args[first * 2];\n\n    if (!(result instanceof NumberLiteralExpr)) {\n        throw new Error(\"expected a numeric literal\");\n    }\n\n    const index = result.value <= value ? first : first - 1;\n\n    return context.evaluate(args[index * 2 + 1]);\n}\n\n/**\n * Prepare and validate the \"interpolate\" call.\n *\n * @param call An [[Expr]] representing an \"interpolate\" call.\n * @hidden\n */\nfunction prepareInterpolateCallExpr(call: InterpolateCallExpr) {\n    if (call._interpolatedProperty || call._mode !== undefined) {\n        return;\n    }\n\n    const interpolatorType = call.args[0];\n\n    if (!(interpolatorType instanceof CallExpr)) {\n        throw new Error(\"expected an interpolation type\");\n    }\n\n    let mode: InterpolatedPropertyDefinition<any>[\"interpolation\"];\n    let exponent: number | undefined;\n\n    if (interpolatorType.op === \"linear\") {\n        mode = \"Linear\";\n    } else if (interpolatorType.op === \"discrete\") {\n        mode = \"Discrete\";\n    } else if (interpolatorType.op === \"cubic\") {\n        mode = \"Cubic\";\n    } else if (interpolatorType.op === \"exponential\") {\n        mode = \"Exponential\";\n        const base = interpolatorType.args[0];\n        if (!(base instanceof NumberLiteralExpr)) {\n            throw new Error(\"expected the base of the exponential interpolation\");\n        }\n        exponent = base.value;\n    } else {\n        throw new Error(\"unrecognized interpolation type\");\n    }\n\n    const input = call.args[1];\n\n    if (!(input instanceof CallExpr)) {\n        throw new Error(\"expected the input of the interpolation\");\n    }\n\n    if (input.op !== \"zoom\") {\n        throw new Error(\"only 'zoom' is supported\");\n    }\n\n    if (call.args.length === 2 || call.args.length % 2) {\n        throw new Error(\"invalid number of samples\");\n    }\n\n    const stops: number[] = [];\n    const values: Value[] = [];\n\n    let isConstantInterpolation = true;\n\n    for (let i = 2; i < call.args.length; i += 2) {\n        const stop = call.args[i];\n\n        if (!(stop instanceof NumberLiteralExpr)) {\n            throw new Error(\"expected a numeric literal\");\n        }\n\n        if (stops.length > 0 && stop.value === stops[stops.length - 1]) {\n            stops[stops.length - 1] = stop.value - 0.0000001;\n        }\n\n        stops.push(stop.value);\n\n        if (isConstantInterpolation) {\n            const value = call.args[i + 1];\n\n            if (value instanceof LiteralExpr) {\n                values.push(value.value);\n            } else {\n                isConstantInterpolation = false;\n            }\n        }\n    }\n\n    if (isConstantInterpolation) {\n        const result = InterpolatedProperty.fromDefinition({\n            interpolation: mode,\n            exponent,\n            zoomLevels: stops,\n            values\n        });\n\n        if (!result) {\n            throw new Error(\"failed to create interpolation\");\n        }\n\n        call._interpolatedProperty = result;\n    } else {\n        call._mode = mode;\n        call._exponent = exponent;\n        call._stops = stops;\n    }\n}\n\ntype StepCallExpr = CallExpr & {\n    /**\n     * `true` if the input of `step` call is `[\"zoom\"], otherwise false.\n     */\n    _inputIsZoom?: boolean;\n\n    /**\n     * The stops when the a constant [[InterpolatedProperty]] cannot be\n     * created for this `[\"step\"]` call.\n     */\n    _stops?: number[];\n\n    /**\n     * The [[InterpolatedProperty]] representing this `step` call,\n     * otherwise `undefined` if an interpolated property cannot\n     * be created at parsing time (e.g. one if the value of the step is not a literal).\n     */\n    _interpolatedProperty?: InterpolatedProperty;\n};\n\n/**\n * Classify the given `step` call.\n *\n * This function checks the input of the `step` and ensures that the stops\n * are literals.\n *\n * @param call A call to `[\"step\", ...]`.\n * @hidden\n */\nfunction classifyStepCallExpr(call: StepCallExpr) {\n    if (call._inputIsZoom !== undefined) {\n        // nothing to do, the `call` was already classified.\n        return;\n    }\n\n    if (call.args[0] === undefined) {\n        throw new Error(\"expected the input of the 'step' operator\");\n    }\n\n    if (call.args.length < 3 || call.args.length % 2) {\n        throw new Error(\"not enough arguments\");\n    }\n\n    const input = call.args[0];\n\n    // tslint:disable-next-line: prefer-conditional-expression\n    if (input instanceof CallExpr && input.op === \"zoom\") {\n        call._inputIsZoom = true;\n    } else {\n        call._inputIsZoom = false;\n    }\n\n    // check that the stops are literals.\n    for (let i = 2; i < call.args.length; i += 2) {\n        const stop = call.args[i];\n        if (!(stop instanceof NumberLiteralExpr)) {\n            throw new Error(\"expected a numeric literal\");\n        }\n    }\n}\n\n/**\n * Prepares the given call for the dynamic exception.\n * This method collects the stops and\n *\n * @param call A call to `[\"step\", ...]`.\n * @hidden\n */\nfunction prepareStepCallExpr(call: StepCallExpr) {\n    if (call._stops || call._interpolatedProperty) {\n        // nothing to do, the `call` was already prepared for execution.\n        return;\n    }\n\n    // collect the stops of the step call.\n    const stops: number[] = [Number.MIN_SAFE_INTEGER];\n\n    for (let i = 2; i < call.args.length; i += 2) {\n        const stop = call.args[i] as NumberLiteralExpr;\n        stops.push(stop.value);\n    }\n\n    // collect the values of the step call.\n    const values: Value[] = [];\n    let hasConstantValues = true;\n\n    for (let i = 1; hasConstantValues && i < call.args.length; i += 2) {\n        const literal = call.args[i];\n        if (literal instanceof LiteralExpr) {\n            values.push(literal.value);\n        } else {\n            hasConstantValues = false;\n        }\n    }\n\n    if (hasConstantValues) {\n        // all the values of this zoom-based `step` are constant,\n        // create an interpolated property and store it together\n        // with the call.\n        const interpolatedProperty = InterpolatedProperty.fromDefinition({\n            interpolation: \"Discrete\",\n            zoomLevels: stops,\n            values\n        });\n\n        if (interpolatedProperty === undefined) {\n            throw new Error(\"failed to create interpolator\");\n        }\n\n        call._interpolatedProperty = interpolatedProperty;\n    } else {\n        // the values the `[\"step\"]` call are not constants,\n        // cache the `zoomLevels` to avoid recreating input `Array`\n        // when instantiating a new [[InterpolatedProperty]].\n        call._stops = stops;\n    }\n}\n\nconst operators = {\n    interpolate: {\n        isDynamicOperator: (call: CallExpr): boolean => {\n            return call.args[1] && call.args[1].isDynamic();\n        },\n        call: (context: ExprEvaluatorContext, call: InterpolateCallExpr): Value => {\n            prepareInterpolateCallExpr(call);\n\n            if (context.scope !== ExprScope.Dynamic) {\n                return call;\n            }\n\n            let interpolatedProperty = call._interpolatedProperty;\n\n            if (!interpolatedProperty) {\n                const values: Value[] = [];\n\n                for (let i = 2; i < call.args.length; i += 2) {\n                    const value = context.evaluate(call.args[i + 1]);\n                    values.push(value);\n                }\n\n                interpolatedProperty = InterpolatedProperty.fromDefinition({\n                    interpolation: call._mode!,\n                    exponent: call._exponent,\n                    zoomLevels: call._stops!,\n                    values\n                });\n\n                if (interpolatedProperty === undefined) {\n                    throw new Error(\"failed to create interpolator\");\n                }\n            }\n\n            return interpolatedProperty.evaluate(context.env);\n        }\n    },\n    step: {\n        isDynamicOperator: (call: CallExpr): boolean => {\n            return call.args[0] && call.args[0].isDynamic();\n        },\n        call: (context: ExprEvaluatorContext, call: StepCallExpr): Value => {\n            classifyStepCallExpr(call);\n\n            if (context.scope === ExprScope.Value) {\n                return call;\n            }\n\n            if (context.scope === ExprScope.Condition || call._inputIsZoom === false) {\n                return step(context, call);\n            }\n\n            prepareStepCallExpr(call);\n\n            let interpolatedProperty = call._interpolatedProperty;\n\n            if (!interpolatedProperty) {\n                // the values of the interpolation are not literals,\n                // evaluate the sub expressions and combine them\n                // with the constant stops computed when preparing this call.\n                const values: Value[] = [];\n                for (let i = 1; i < call.args.length; i += 2) {\n                    const value = context.evaluate(call.args[i]);\n                    values.push(value);\n                }\n\n                interpolatedProperty = InterpolatedProperty.fromDefinition({\n                    interpolation: \"Discrete\",\n                    zoomLevels: call._stops!,\n                    values\n                });\n\n                if (interpolatedProperty === undefined) {\n                    throw new Error(\"failed to create interpolator\");\n                }\n            }\n\n            return interpolatedProperty.evaluate(context.env);\n        }\n    }\n};\n\nexport const InterpolationOperators: OperatorDescriptorMap = operators;\nexport type InterpolationOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Interpolant } from \"three\";\n\nexport class ExponentialInterpolant extends Interpolant {\n    /**\n     * Exponent value. Defaults to `2.0`.\n     */\n    exponent: number = 2.0;\n\n    // Note: We need to disable linting here as tslint thinks this function is never used, though it\n    // indeed is called by ``Interpolant.evaluate(level)``.\n    // tslint:disable-next-line\n    private interpolate_(i1: number, t0: number, t: number, t1: number) {\n        const result = this.resultBuffer;\n        // TODO: Remove when Interpolant types are fixed.\n        const values = (this as any).sampleValues;\n        const stride = this.valueSize;\n        const offset1 = i1 * stride;\n        const offset0 = offset1 - stride;\n        const weight1 = Math.pow((t - t0) / (t1 - t0), this.exponent);\n        const weight0 = 1 - weight1;\n\n        for (let i = 0; i !== stride; ++i) {\n            result[i] = values[offset0 + i] * weight0 + values[offset1 + i] * weight1;\n        }\n\n        return result;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr, ExprScope, Value } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst operators = {\n    \"ppi-scale\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]) as number;\n            const scaleFactor = call.args[1] ? (context.evaluate(call.args[1]) as number) : 1;\n            return value * scaleFactor;\n        }\n    },\n    \"world-ppi-scale\": {\n        isDynamicOperator: (): boolean => {\n            return true;\n        },\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const pixels = context.evaluate(call.args[0]) as number;\n            const scaleFactor = call.args[1] ? (context.evaluate(call.args[1]) as number) : 1;\n            const zoom = context.env.lookup(\"$zoom\") as number;\n            const zoomWidth = Math.pow(2, 17) / Math.pow(2, zoom);\n            const v = pixels * zoomWidth * scaleFactor;\n            return v;\n        }\n    },\n    \"world-discrete-ppi-scale\": {\n        isDynamicOperator: (): boolean => {\n            return true;\n        },\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const pixels = context.evaluate(call.args[0]) as number;\n            const scaleFactor = call.args[1] ? (context.evaluate(call.args[1]) as number) : 1;\n            const zoom = context.env.lookup(\"$zoom\") as number;\n            const zoomWidthDiscrete = Math.pow(2, 17.8) / Math.pow(2, Math.floor(zoom));\n            const v = pixels * zoomWidthDiscrete * scaleFactor;\n            return v;\n        }\n    },\n    ppi: {\n        call: (context: ExprEvaluatorContext) => {\n            const ppi = context.env.lookup(\"$ppi\");\n            if (typeof ppi === \"number\") {\n                return ppi;\n            }\n            return 72;\n        }\n    },\n    zoom: {\n        isDynamicOperator: (): boolean => {\n            return true;\n        },\n        call: (context: ExprEvaluatorContext): Value => {\n            if (context.scope === ExprScope.Condition) {\n                const zoom = context.env.lookup(\"$zoom\")!;\n                if (zoom !== undefined) {\n                    return zoom;\n                }\n                throw new Error(\"failed to get the zoom level.\");\n            }\n            // direct usages of 'zoom' outside technique filter conditions\n            // and interpolations are not allowed.\n            throw new Error(\"invalid usage of the 'zoom' operator.\");\n        }\n    }\n};\n\nexport const MapOperators: OperatorDescriptorMap = operators;\nexport type MapOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nimport * as THREE from \"three\";\n\nconst operators = {\n    \"^\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const a = context.evaluate(call.args[0]);\n            const b = context.evaluate(call.args[1]);\n            if (typeof a !== \"number\" || typeof b !== \"number\") {\n                // tslint:disable-next-line: max-line-length\n                throw new Error(\n                    `invalid operands '${typeof a}' and '${typeof b}' for operator '^'`\n                );\n            }\n            return Math.pow(a, b);\n        }\n    },\n\n    \"-\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            if (call.args.length === 1) {\n                const value = context.evaluate(call.args[0]);\n                if (typeof value !== \"number\") {\n                    throw new Error(`ìnvalid operand '${typeof value} for operator '-'`);\n                }\n\n                return -value;\n            }\n\n            const a = context.evaluate(call.args[0]);\n            const b = context.evaluate(call.args[1]);\n            if (typeof a !== \"number\" || typeof b !== \"number\") {\n                throw new Error(\n                    `invalid operands '${typeof a}' and '${typeof b}' for operator '-'`\n                );\n            }\n            return a - b;\n        }\n    },\n\n    \"/\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const a = context.evaluate(call.args[0]);\n            const b = context.evaluate(call.args[1]);\n            if (typeof a !== \"number\" || typeof b !== \"number\") {\n                // tslint:disable-next-line: max-line-length\n                throw new Error(\n                    `invalid operands '${typeof a}' and '${typeof b}' for operator '/'`\n                );\n            }\n            return a / b;\n        }\n    },\n\n    \"%\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const a = context.evaluate(call.args[0]);\n            const b = context.evaluate(call.args[1]);\n            if (typeof a !== \"number\" || typeof b !== \"number\") {\n                // tslint:disable-next-line: max-line-length\n                throw new Error(\n                    `invalid operands '${typeof a}' and '${typeof b}' for operator '%'`\n                );\n            }\n            return a % b;\n        }\n    },\n\n    \"+\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return call.args.reduce((a, b) => Number(a) + Number(context.evaluate(b)), 0);\n        }\n    },\n\n    \"*\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return call.args.reduce((a, b) => Number(a) * Number(context.evaluate(b)), 1);\n        }\n    },\n\n    abs: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'abs'`);\n            }\n            return Math.abs(value);\n        }\n    },\n\n    acos: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'acos'`);\n            }\n            return Math.acos(value);\n        }\n    },\n\n    asin: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'asin'`);\n            }\n            return Math.asin(value);\n        }\n    },\n\n    atan: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'atan'`);\n            }\n            return Math.atan(value);\n        }\n    },\n\n    ceil: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'ceil'`);\n            }\n            return Math.ceil(value);\n        }\n    },\n\n    cos: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'cos'`);\n            }\n            return Math.cos(value);\n        }\n    },\n\n    e: {\n        call: () => {\n            return Math.E;\n        }\n    },\n\n    floor: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'floor'`);\n            }\n            return Math.floor(value);\n        }\n    },\n\n    ln: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'ln'`);\n            }\n            return Math.log(value);\n        }\n    },\n\n    ln2: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'ln2'`);\n            }\n            return Math.log2(value);\n        }\n    },\n\n    log10: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'log10'`);\n            }\n            return Math.log10(value);\n        }\n    },\n\n    max: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return Math.max(...call.args.map(v => Number(context.evaluate(v))));\n        }\n    },\n\n    min: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return Math.min(...call.args.map(v => Number(context.evaluate(v))));\n        }\n    },\n\n    /**\n     * Clamp numeric value to given range, inclusive.\n     *\n     * Synopsis:\n     * ```\n     * [\"clamp\", v: number, min: number, max: number]`\n     * ```\n     */\n    clamp: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const v = context.evaluate(call.args[0]);\n            const min = context.evaluate(call.args[1]);\n            const max = context.evaluate(call.args[2]);\n\n            if (typeof v !== \"number\" || typeof min !== \"number\" || typeof max !== \"number\") {\n                throw new Error(`invalid operands '${v}', ${min}, ${max} for operator 'clamp'`);\n            }\n            return THREE.MathUtils.clamp(v, min, max);\n        }\n    },\n\n    pi: {\n        call: () => {\n            return Math.PI;\n        }\n    },\n\n    round: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'round'`);\n            }\n            return Math.round(value);\n        }\n    },\n\n    sin: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'sin'`);\n            }\n            return Math.sin(value);\n        }\n    },\n\n    sqrt: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'sqrt'`);\n            }\n            return Math.sqrt(value);\n        }\n    },\n\n    tan: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'tan'`);\n            }\n            return Math.tan(value);\n        }\n    }\n};\n\nexport const MathOperators: OperatorDescriptorMap = operators;\nexport type MathOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst operators = {\n    length: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (Array.isArray(value) || typeof value === \"string\") {\n                return value.length;\n            }\n            throw new Error(`invalid operand '${value}' for operator 'length'`);\n        }\n    },\n    coalesce: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            for (const childExpr of call.args) {\n                const value = context.evaluate(childExpr);\n                if (value !== null) {\n                    return value;\n                }\n            }\n            return null;\n        }\n    }\n};\n\nexport const MiscOperators: OperatorDescriptorMap = operators;\nexport type MiscOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr, Expr, ExprScope } from \"../Expr\";\n\nimport { Env } from \"../Env\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nenum LookupMode {\n    get,\n    has\n}\n\nfunction lookupMember(context: ExprEvaluatorContext, args: Expr[], lookupMode: LookupMode) {\n    const memberName = context.evaluate(args[0]);\n\n    if (typeof memberName !== \"string\") {\n        throw new Error(`expected the name of an attribute`);\n    }\n\n    const object = context.evaluate(args[1]) as any;\n\n    if (object && typeof object === \"object\") {\n        if (Env.isEnv(object)) {\n            const value = object.lookup(memberName) ?? null;\n            return lookupMode === LookupMode.get ? value : value !== null;\n        }\n        if (hasOwnProperty.call(object, memberName)) {\n            return lookupMode === LookupMode.get ? object[memberName] : true;\n        }\n    }\n\n    return lookupMode === LookupMode.get ? null : false;\n}\n\nconst operators = {\n    in: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            const object = context.evaluate(call.args[1]);\n            if (typeof value === \"string\" && typeof object === \"string\") {\n                return object.includes(value);\n            } else if (Array.isArray(object)) {\n                return object.includes(value);\n            }\n            return false;\n        }\n    },\n\n    get: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) =>\n            lookupMember(context, call.args, LookupMode.get)\n    },\n\n    has: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) =>\n            lookupMember(context, call.args, LookupMode.has)\n    },\n\n    \"dynamic-properties\": {\n        isDynamicOperator: () => true,\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            if (context.scope === ExprScope.Dynamic) {\n                return context.env;\n            }\n            return call;\n        }\n    }\n};\n\nexport const ObjectOperators: OperatorDescriptorMap = operators;\nexport type ObjectOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst operators = {\n    concat: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return \"\".concat(...call.args.map(a => String(context.evaluate(a))));\n        }\n    },\n\n    downcase: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return String(context.evaluate(call.args[0])).toLocaleLowerCase();\n        }\n    },\n\n    upcase: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return String(context.evaluate(call.args[0])).toLocaleUpperCase();\n        }\n    },\n\n    \"~=\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const left = context.evaluate(call.args[0]);\n            const right = context.evaluate(call.args[1]);\n            if (typeof left === \"string\" && typeof right === \"string\") {\n                return left.indexOf(right) !== -1;\n            }\n            return false;\n        }\n    },\n\n    \"^=\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const left = context.evaluate(call.args[0]);\n            const right = context.evaluate(call.args[1]);\n            if (typeof left === \"string\" && typeof right === \"string\") {\n                return left.startsWith(right);\n            }\n            return false;\n        }\n    },\n\n    \"$=\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const left = context.evaluate(call.args[0]);\n            const right = context.evaluate(call.args[1]);\n            if (typeof left === \"string\" && typeof right === \"string\") {\n                return left.endsWith(right);\n            }\n            return false;\n        }\n    }\n};\n\nexport const StringOperators: OperatorDescriptorMap = operators;\nexport type StringOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst operators = {\n    typeof: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return typeof context.evaluate(call.args[0]);\n        }\n    }\n};\n\nexport const TypeOperators: OperatorDescriptorMap = operators;\nexport type TypeOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Value } from \"../Env\";\nimport { CallExpr, NumberLiteralExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nimport * as THREE from \"three\";\n\ntype MakeVectorCallExpr = CallExpr & {\n    _value?: THREE.Vector2 | THREE.Vector3 | THREE.Vector4;\n};\n\nfunction isVector(\n    context: ExprEvaluatorContext,\n    call: CallExpr,\n    type: \"vector2\" | \"vector3\" | \"vector4\"\n): Value {\n    let ctor: new () => object;\n    switch (type) {\n        case \"vector2\":\n            ctor = THREE.Vector2;\n            break;\n        case \"vector3\":\n            ctor = THREE.Vector3;\n            break;\n        case \"vector4\":\n            ctor = THREE.Vector4;\n            break;\n    }\n    for (const childExpr of call.args) {\n        const value = context.evaluate(childExpr);\n        if (value instanceof ctor) {\n            return value;\n        }\n    }\n    throw new Error(`expected a \"${type}\"`);\n}\n\nfunction toVector(\n    context: ExprEvaluatorContext,\n    call: CallExpr,\n    type: \"vector2\" | \"vector3\" | \"vector4\"\n): Value {\n    let VectorCtor: any;\n    let components: number;\n\n    switch (type) {\n        case \"vector2\":\n            VectorCtor = THREE.Vector2;\n            components = 2;\n            break;\n        case \"vector3\":\n            VectorCtor = THREE.Vector3;\n            components = 3;\n            break;\n        case \"vector4\":\n            VectorCtor = THREE.Vector4;\n            components = 4;\n            break;\n    }\n\n    for (const childExpr of call.args) {\n        const value = context.evaluate(childExpr);\n        if (value instanceof VectorCtor) {\n            return value;\n        } else if (\n            Array.isArray(value) &&\n            value.length === components &&\n            value.every(v => typeof v === \"number\")\n        ) {\n            return new VectorCtor().fromArray(value);\n        }\n    }\n    throw new Error(`expected a \"${type}\"`);\n}\n\nconst operators = {\n    \"make-vector\": {\n        call: (context: ExprEvaluatorContext, call: MakeVectorCallExpr) => {\n            if (call._value !== undefined) {\n                return call._value;\n            }\n\n            if (call.args.length < 2) {\n                throw new Error(\"not enough arguments\");\n            } else if (call.args.length > 4) {\n                throw new Error(\"too many arguments\");\n            }\n\n            const components = call.args.map(arg => context.evaluate(arg)) as number[];\n\n            components.forEach((element, index) => {\n                if (typeof element !== \"number\") {\n                    throw new Error(\n                        `expected vector component at index ${index} to have type \"number\"`\n                    );\n                }\n            });\n\n            let result: THREE.Vector2 | THREE.Vector3 | THREE.Vector4 | undefined;\n\n            switch (components.length) {\n                case 2:\n                    result = new THREE.Vector2().fromArray(components);\n                    break;\n                case 3:\n                    result = new THREE.Vector3().fromArray(components);\n                    break;\n                case 4:\n                    result = new THREE.Vector4().fromArray(components);\n                    break;\n                default:\n                    throw new Error(\"too many arguments\");\n            }\n\n            if (call.args.every(arg => arg instanceof NumberLiteralExpr)) {\n                call._value = result;\n            }\n\n            return result;\n        }\n    },\n    vector2: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => isVector(context, call, \"vector2\")\n    },\n    vector3: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => isVector(context, call, \"vector3\")\n    },\n    vector4: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => isVector(context, call, \"vector4\")\n    },\n    \"to-vector2\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => toVector(context, call, \"vector2\")\n    },\n    \"to-vector3\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => toVector(context, call, \"vector3\")\n    },\n    \"to-vector4\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => toVector(context, call, \"vector4\")\n    }\n};\n\nexport const VectorOperators: OperatorDescriptorMap = operators;\nexport type VectorOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    BooleanLiteralExpr,\n    CallExpr,\n    CaseExpr,\n    Expr,\n    ExprScope,\n    ExprVisitor,\n    HasAttributeExpr,\n    LiteralExpr,\n    MatchExpr,\n    MatchLabel,\n    NullLiteralExpr,\n    NumberLiteralExpr,\n    ObjectLiteralExpr,\n    StringLiteralExpr,\n    VarExpr\n} from \"./Expr\";\n\nimport { Env } from \"./Env\";\n\nexport interface InstantiationContext {\n    /**\n     * The [[Env]] used to lookup for names.\n     */\n    env: Env;\n\n    /**\n     * The names to preserve during the instantiation.\n     */\n    preserve?: Set<string>;\n}\n\nconst emptyEnv = new Env();\n\n/**\n * @hidden\n */\nexport class ExprInstantiator implements ExprVisitor<Expr, InstantiationContext> {\n    visitNullLiteralExpr(expr: NullLiteralExpr, _context: InstantiationContext): Expr {\n        return expr;\n    }\n\n    visitBooleanLiteralExpr(expr: BooleanLiteralExpr, _context: InstantiationContext): Expr {\n        return expr;\n    }\n\n    visitNumberLiteralExpr(expr: NumberLiteralExpr, _context: InstantiationContext): Expr {\n        return expr;\n    }\n\n    visitStringLiteralExpr(expr: StringLiteralExpr, _context: InstantiationContext): Expr {\n        return expr;\n    }\n\n    visitObjectLiteralExpr(expr: ObjectLiteralExpr, _context: InstantiationContext): Expr {\n        return expr;\n    }\n\n    visitVarExpr(expr: VarExpr, context: InstantiationContext): Expr {\n        if (context.preserve && context.preserve.has(expr.name)) {\n            return expr;\n        }\n        const value = context.env.lookup(expr.name);\n        return LiteralExpr.fromValue(value !== undefined ? value : null);\n    }\n\n    visitHasAttributeExpr(expr: HasAttributeExpr, context: InstantiationContext): Expr {\n        if (context.preserve && context.preserve.has(expr.name)) {\n            return expr;\n        }\n        const value = context.env.lookup(expr.name) !== undefined;\n        return LiteralExpr.fromValue(value);\n    }\n\n    visitCallExpr(expr: CallExpr, context: InstantiationContext): Expr {\n        const args = expr.args.map(arg => arg.accept(this, context));\n        if (args.some((a, i) => a !== expr.args[i])) {\n            return new CallExpr(expr.op, args);\n        }\n        return expr;\n    }\n\n    visitMatchExpr(match: MatchExpr, context: InstantiationContext): Expr {\n        const value = match.value.accept(this, context);\n\n        if (value instanceof LiteralExpr) {\n            const r = value.value;\n            for (const [label, body] of match.branches) {\n                if (Array.isArray(label) && (label as any[]).includes(r)) {\n                    return body.accept(this, context);\n                } else if (label === r) {\n                    return body.accept(this, context);\n                }\n            }\n            return match.fallback.accept(this, context);\n        }\n\n        let changed = match.value !== value;\n\n        const branches: Array<[MatchLabel, Expr]> = match.branches.map(([label, branch]) => {\n            const newBranch = branch.accept(this, context);\n            if (newBranch !== branch) {\n                changed = true;\n            }\n            return [label, newBranch];\n        });\n\n        const fallback = match.fallback.accept(this, context);\n\n        if (fallback !== match.fallback) {\n            changed = true;\n        }\n\n        return changed ? new MatchExpr(value, branches, fallback) : match;\n    }\n\n    visitCaseExpr(expr: CaseExpr, context: InstantiationContext): Expr {\n        const branches: Array<[Expr, Expr]> = [];\n\n        let changed = false;\n\n        for (const [condition, branch] of expr.branches) {\n            const newCondition = condition.accept(this, context);\n            const deps = newCondition.dependencies();\n            if (!condition.isDynamic() && deps.properties.size === 0) {\n                if (Boolean(newCondition.evaluate(emptyEnv, ExprScope.Condition))) {\n                    return branch.accept(this, context);\n                }\n            } else {\n                if (newCondition !== condition) {\n                    changed = true;\n                }\n                branches.push([newCondition, branch]);\n            }\n        }\n\n        if (branches.length === 0) {\n            // all the conditions of this CaseExpr evaluated\n            // to false, so the resulting of instantiating this CaseExpr\n            // is the same as instantiating its fallback expression.\n            return expr.fallback.accept(this, context);\n        }\n\n        if (branches.length !== expr.branches.length) {\n            // the number of branches changed, this means that\n            // some of the branches had constant expressions that\n            // evaluate to false. In this case the resulting\n            // `CaseExpr` has less branches.\n            changed = true;\n        }\n\n        // Instantiate the body of all the branches of this CaseExpr\n        // that have dynamic conditions.\n        branches.forEach(branch => {\n            const instantiatedBranch = branch[1].accept(this, context);\n\n            if (instantiatedBranch !== branch[1]) {\n                changed = true;\n            }\n\n            branch[1] = instantiatedBranch;\n        });\n\n        const fallback = expr.fallback.accept(this, context);\n\n        if (fallback !== expr.fallback) {\n            changed = true;\n        }\n\n        if (!changed) {\n            // nothing changed, return the old expression.\n            return expr;\n        }\n\n        return new CaseExpr(branches, fallback);\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    CallExpr,\n    EqualityOp,\n    Expr,\n    HasAttributeExpr,\n    LiteralExpr,\n    NumberLiteralExpr,\n    RelationalOp,\n    StringLiteralExpr,\n    VarExpr\n} from \"./Expr\";\n\n/**\n * Character value\n */\nenum Character {\n    Tab = 9,\n    Lf = 10,\n    Cr = 13,\n    Space = 32,\n    LParen = 40,\n    RParen = 41,\n    Comma = 44,\n    Dot = 46,\n    LBracket = 91,\n    Backslash = 92,\n    RBracket = 93,\n    _0 = 48,\n    _9 = 57,\n    _ = 95,\n    A = 64,\n    Z = 90,\n    a = 97,\n    z = 122,\n    DoubleQuote = 34,\n    SingleQuote = 39,\n    Exclaim = 33,\n    Equal = 61,\n    Caret = 94,\n    Tilde = 126,\n    Dollar = 36,\n    Less = 60,\n    Greater = 62,\n    Bar = 124,\n    Amp = 38\n}\n\n/**\n * Check if a codepoint is a whitespace character.\n */\nfunction isSpace(codepoint: number): boolean {\n    switch (codepoint) {\n        case Character.Tab:\n        case Character.Lf:\n        case Character.Cr:\n        case Character.Space:\n            return true;\n        default:\n            return false;\n    } // switch\n}\n\n/**\n * Check if codepoint is a digit character.\n */\nfunction isNumber(codepoint: number): boolean {\n    return codepoint >= Character._0 && codepoint <= Character._9;\n}\n\n/**\n * Check if codepoint is a letter character.\n */\nfunction isLetter(codepoint: number): boolean {\n    return (\n        (codepoint >= Character.a && codepoint <= Character.z) ||\n        (codepoint >= Character.A && codepoint <= Character.Z)\n    );\n}\n\n/**\n * Check if codepoint is either a digit or a letter character.\n */\nfunction isLetterOrNumber(codepoint: number): boolean {\n    return isLetter(codepoint) || isNumber(codepoint);\n}\n\n/**\n * Check if codepoint is an identification character: underscore, dollar sign, dot or bracket.\n */\nfunction isIdentChar(codepoint: number): boolean {\n    return (\n        isLetterOrNumber(codepoint) ||\n        codepoint === Character._ ||\n        codepoint === Character.Dollar ||\n        codepoint === Character.Dot ||\n        codepoint === Character.LBracket ||\n        codepoint === Character.RBracket\n    );\n}\n\n/**\n * Tokens used in theme grammar.\n */\nenum Token {\n    Eof = 0,\n    Error,\n    Identifier,\n    Number,\n    String,\n    Comma,\n    LParen,\n    RParen,\n    LBracket,\n    RBracket,\n    Exclaim,\n    TildeEqual,\n    CaretEqual,\n    DollarEqual,\n    EqualEqual,\n    ExclaimEqual,\n    Less,\n    Greater,\n    LessEqual,\n    GreaterEqual,\n    BarBar,\n    AmpAmp\n}\n\n/**\n * Maps a token to its string name.\n */\nfunction tokenSpell(token: Token): string {\n    switch (token) {\n        case Token.Eof:\n            return \"eof\";\n        case Token.Error:\n            return \"error\";\n        case Token.Identifier:\n            return \"identifier\";\n        case Token.Number:\n            return \"number\";\n        case Token.String:\n            return \"string\";\n        case Token.Comma:\n            return \",\";\n        case Token.LParen:\n            return \"(\";\n        case Token.RParen:\n            return \")\";\n        case Token.LBracket:\n            return \"[\";\n        case Token.RBracket:\n            return \"]\";\n        case Token.Exclaim:\n            return \"!\";\n        case Token.TildeEqual:\n            return \"~=\";\n        case Token.CaretEqual:\n            return \"^=\";\n        case Token.DollarEqual:\n            return \"$=\";\n        case Token.EqualEqual:\n            return \"==\";\n        case Token.ExclaimEqual:\n            return \"!=\";\n        case Token.Less:\n            return \"<\";\n        case Token.Greater:\n            return \">\";\n        case Token.LessEqual:\n            return \"<=\";\n        case Token.GreaterEqual:\n            return \">=\";\n        case Token.BarBar:\n            return \"||\";\n        case Token.AmpAmp:\n            return \"&&\";\n        default:\n            throw new Error(`invalid token ${token}`);\n    }\n}\n\n/**\n * Lexer class implementation.\n */\nclass Lexer {\n    private m_token: Token = Token.Error;\n    private m_index = 0;\n    private m_char: number = Character.Lf;\n    private m_text?: string;\n\n    constructor(readonly code: string) {}\n\n    /**\n     * Single lexer token.\n     */\n    token(): Token {\n        return this.m_token;\n    }\n\n    /**\n     * Parsed text.\n     */\n    text(): string {\n        return this.m_text || \"\";\n    }\n\n    /**\n     * Go to the next token.\n     */\n    next(): Token {\n        this.m_token = this.yylex();\n        if (this.m_token === Token.Error) {\n            throw new Error(`unexpected character ${this.m_char}`);\n        }\n        return this.m_token;\n    }\n\n    private yyinp(): void {\n        this.m_char = this.code.codePointAt(this.m_index++) || 0;\n    }\n\n    private yylex(): Token {\n        this.m_text = undefined;\n        while (isSpace(this.m_char)) {\n            this.yyinp();\n        }\n        if (this.m_char === 0) {\n            return Token.Eof;\n        }\n        const ch = this.m_char;\n        this.yyinp();\n        switch (ch) {\n            case Character.LParen:\n                return Token.LParen;\n            case Character.RParen:\n                return Token.RParen;\n            case Character.LBracket:\n                return Token.LBracket;\n            case Character.RBracket:\n                return Token.RBracket;\n            case Character.Comma:\n                return Token.Comma;\n            case Character.SingleQuote:\n            case Character.DoubleQuote: {\n                const start = this.m_index - 1;\n                while (this.m_char && this.m_char !== ch) {\n                    // ### TODO handle escape sequences\n                    this.yyinp();\n                }\n                if (this.m_char !== ch) {\n                    throw new Error(\"Unfinished string literal\");\n                }\n                this.yyinp();\n                this.m_text = this.code.substring(start, this.m_index - 2);\n                return Token.String;\n            }\n            case Character.Exclaim:\n                if (this.m_char === Character.Equal) {\n                    this.yyinp();\n                    return Token.ExclaimEqual;\n                }\n                return Token.Exclaim;\n            case Character.Caret:\n                if (this.m_char === Character.Equal) {\n                    this.yyinp();\n                    return Token.CaretEqual;\n                }\n                return Token.Error;\n            case Character.Tilde:\n                if (this.m_char === Character.Equal) {\n                    this.yyinp();\n                    return Token.TildeEqual;\n                }\n                return Token.Error;\n            case Character.Equal:\n                if (this.m_char === Character.Equal) {\n                    this.yyinp();\n                    return Token.EqualEqual;\n                }\n                return Token.Error;\n            case Character.Less:\n                if (this.m_char === Character.Equal) {\n                    this.yyinp();\n                    return Token.LessEqual;\n                }\n                return Token.Less;\n            case Character.Greater:\n                if (this.m_char === Character.Equal) {\n                    this.yyinp();\n                    return Token.GreaterEqual;\n                }\n                return Token.Greater;\n            case Character.Bar:\n                if (this.m_char === Character.Bar) {\n                    this.yyinp();\n                    return Token.BarBar;\n                }\n                return Token.Error;\n            case Character.Amp:\n                if (this.m_char === Character.Amp) {\n                    this.yyinp();\n                    return Token.AmpAmp;\n                }\n                return Token.Error;\n            default: {\n                const start = this.m_index - 2;\n                if (\n                    isLetter(ch) ||\n                    ch === Character._ ||\n                    (ch === Character.Dollar && isIdentChar(this.m_char))\n                ) {\n                    while (isIdentChar(this.m_char)) {\n                        this.yyinp();\n                    }\n                    this.m_text = this.code.substring(start, this.m_index - 1);\n                    return Token.Identifier;\n                } else if (isNumber(ch)) {\n                    while (isNumber(this.m_char)) {\n                        this.yyinp();\n                    }\n                    if (this.m_char === Character.Dot) {\n                        this.yyinp();\n                        while (isNumber(this.m_char)) {\n                            this.yyinp();\n                        }\n                    }\n                    this.m_text = this.code.substring(start, this.m_index - 1);\n                    return Token.Number;\n                } else if (ch === Character.Dollar) {\n                    if (this.m_char === Character.Equal) {\n                        this.yyinp();\n                        return Token.DollarEqual;\n                    }\n                    return Token.Error;\n                }\n            }\n        }\n        return Token.Error;\n    }\n}\n\nfunction getEqualityOp(token: Token): EqualityOp | undefined {\n    switch (token) {\n        case Token.TildeEqual:\n            return \"~=\";\n        case Token.CaretEqual:\n            return \"^=\";\n        case Token.DollarEqual:\n            return \"$=\";\n        case Token.EqualEqual:\n            return \"==\";\n        case Token.ExclaimEqual:\n            return \"!=\";\n        default:\n            return undefined;\n    } // switch\n}\n\nfunction getRelationalOp(token: Token): RelationalOp | undefined {\n    switch (token) {\n        case Token.Less:\n            return \"<\";\n        case Token.Greater:\n            return \">\";\n        case Token.LessEqual:\n            return \"<=\";\n        case Token.GreaterEqual:\n            return \">=\";\n        default:\n            return undefined;\n    } // switch\n}\n\nexport class ExprParser {\n    private readonly lex: Lexer;\n\n    constructor(code: string) {\n        this.lex = new Lexer(code);\n        this.lex.next();\n    }\n\n    parse(): Expr | never {\n        return this.parseLogicalOr();\n    }\n\n    private yyexpect(token: Token): void | never {\n        if (this.lex.token() !== token) {\n            throw new Error(\n                `Syntax error: Expected token '${tokenSpell(token)}' but ` +\n                    `found '${tokenSpell(this.lex.token())}'`\n            );\n        }\n        this.lex.next();\n    }\n\n    private parsePrimary(): Expr | never {\n        switch (this.lex.token()) {\n            case Token.Identifier: {\n                const text = this.lex.text();\n                switch (text) {\n                    case \"has\":\n                        this.lex.next(); // skip has keyword\n                        this.yyexpect(Token.LParen);\n                        const hasAttribute = this.lex.text();\n                        this.yyexpect(Token.Identifier);\n                        this.yyexpect(Token.RParen);\n                        return new HasAttributeExpr(hasAttribute);\n                    case \"length\":\n                        this.lex.next(); // skip length keyword\n                        this.yyexpect(Token.LParen);\n                        const value = this.parseLogicalOr();\n                        this.yyexpect(Token.RParen);\n                        return new CallExpr(\"length\", [value]);\n                    default:\n                        const expr = new VarExpr(text);\n                        this.lex.next();\n                        return expr;\n                }\n            }\n\n            case Token.LParen: {\n                this.lex.next();\n                const expr = this.parseLogicalOr();\n                this.yyexpect(Token.RParen);\n                return expr;\n            }\n\n            default:\n                return this.parseLiteral();\n        } // switch\n    }\n\n    private parseLiteral(): NumberLiteralExpr | StringLiteralExpr | never {\n        switch (this.lex.token()) {\n            case Token.Number: {\n                const expr = new NumberLiteralExpr(parseFloat(this.lex.text()));\n                this.lex.next();\n                return expr;\n            }\n            case Token.String: {\n                const expr = new StringLiteralExpr(this.lex.text());\n                this.lex.next();\n                return expr;\n            }\n            default:\n                throw new Error(\"Syntax error\");\n        } // switch\n    }\n\n    private parseUnary(): Expr | never {\n        if (this.lex.token() === Token.Exclaim) {\n            this.lex.next();\n            return new CallExpr(\"!\", [this.parseUnary()]);\n        }\n        return this.parsePrimary();\n    }\n\n    private parseRelational(): Expr | never {\n        let expr = this.parseUnary();\n        while (true) {\n            if (this.lex.token() === Token.Identifier && this.lex.text() === \"in\") {\n                this.lex.next();\n                this.yyexpect(Token.LBracket);\n                const elements = [this.parseLiteral()];\n                while (this.lex.token() === Token.Comma) {\n                    this.lex.next();\n                    elements.push(this.parseLiteral());\n                }\n                this.yyexpect(Token.RBracket);\n                expr = new CallExpr(\"in\", [\n                    expr,\n                    LiteralExpr.fromValue(elements.map(({ value }) => value))\n                ]);\n            } else {\n                const op = getRelationalOp(this.lex.token());\n                if (op === undefined) {\n                    break;\n                }\n                this.lex.next();\n                const right = this.parseUnary();\n                expr = new CallExpr(op, [expr, right]);\n            }\n        }\n        return expr;\n    }\n\n    private parseEquality(): Expr | never {\n        let expr = this.parseRelational();\n        while (true) {\n            let op: string | undefined = getEqualityOp(this.lex.token());\n\n            if (op === undefined) {\n                break;\n            }\n\n            if (op === \"~=\") {\n                op = \"in\";\n            }\n\n            this.lex.next();\n            const right = this.parseRelational();\n            expr = new CallExpr(op, [expr, right]);\n        }\n        return expr;\n    }\n\n    private parseLogicalAnd(): Expr | never {\n        const expr = this.parseEquality();\n\n        if (this.lex.token() !== Token.AmpAmp) {\n            return expr;\n        }\n\n        const expressions: Expr[] = [expr];\n\n        do {\n            this.lex.next();\n            expressions.push(this.parseEquality());\n        } while (this.lex.token() === Token.AmpAmp);\n\n        return new CallExpr(\"all\", expressions);\n    }\n\n    private parseLogicalOr(): Expr | never {\n        const expr = this.parseLogicalAnd();\n\n        if (this.lex.token() !== Token.BarBar) {\n            return expr;\n        }\n\n        const expressions: Expr[] = [expr];\n\n        do {\n            this.lex.next();\n            expressions.push(this.parseLogicalAnd());\n        } while (this.lex.token() === Token.BarBar);\n\n        return new CallExpr(\"any\", expressions);\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Common communication protocol for [[WorkerService]].\n */\nexport namespace WorkerServiceProtocol {\n    /**\n     * Service id of worker manager ([[WorkerServiceManager]]) used to create/destroy service\n     * instances in workers.\n     */\n    export const WORKER_SERVICE_MANAGER_SERVICE_ID = \"worker-service-manager\";\n\n    /**\n     * Define possible names of messages exchanged with services within `WebWorker`.\n     */\n    export enum ServiceMessageName {\n        Initialized = \"initialized\",\n        Request = \"request\",\n        Response = \"response\"\n    }\n\n    /**\n     * Interface for `ServiceMessage` which describes metadata for a service messages.\n     */\n    export interface ServiceMessage {\n        service: string;\n        type: ServiceMessageName;\n    }\n\n    /**\n     * This message is sent by the worker to the main thread. No data is sent. Receiving this\n     * message confirms that the worker has started successfully.\n     */\n    export interface InitializedMessage extends ServiceMessage {\n        type: ServiceMessageName.Initialized;\n    }\n\n    /**\n     * Type guard to check if an object is a signal message from worker.\n     */\n    export function isInitializedMessage(message: any): message is InitializedMessage {\n        return (\n            message &&\n            typeof message.service === \"string\" &&\n            typeof message.type === \"string\" &&\n            message.type === ServiceMessageName.Initialized\n        );\n    }\n\n    /**\n     * Define possible names of requests called on services within `WebWorker`.\n     */\n    export enum Requests {\n        CreateService = \"create-service\",\n        DestroyService = \"destroy-service\"\n    }\n\n    /**\n     * This is an internal general interface used in communication with workers.\n     * Check [[ConcurrentWorkerSet]]'s invokeRequest function for exemplary usage.\n     */\n    export interface ServiceRequest {\n        type: string;\n    }\n\n    /**\n     * This message is sent by the main thread to [[WorkerServiceManager]] to dynamically create a\n     * new service.\n     *\n     * May throw `UnknownServiceError` if service of given type is not registered in\n     * [[WorkerServiceManager]], see [[isUnknownServiceError]].\n     */\n    export interface CreateServiceRequest extends ServiceRequest {\n        type: Requests.CreateService;\n\n        /**\n         * Type of service to be created.\n         *\n         * @see [[WorkerServiceManager.register]]\n         */\n        targetServiceType: string;\n\n        /**\n         * The newly created service instance will be available under this id.\n         */\n        targetServiceId: string;\n    }\n\n    /**\n     * Test if `error` thrown by [[CreateServiceRequest]] was caused by unknown type of service.\n     */\n    export function isUnknownServiceError(error: Error): boolean {\n        return /unknown targetServiceType requested: /.test(error.message);\n    }\n\n    /**\n     * This message is sent by the main thread to [[WorkerServiceManager]] to dynamically destroy a\n     * service.\n     */\n    export interface DestroyServiceRequest extends ServiceRequest {\n        type: Requests.DestroyService;\n\n        /**\n         * Id of service to be destroyed.\n         */\n        targetServiceId: string;\n    }\n\n    /**\n     * Possible service management messages (`CreateService` or `DestroyService`) sent to WebWorker.\n     */\n    export type WorkerServiceManagerRequest = CreateServiceRequest | DestroyServiceRequest;\n\n    /**\n     * This message is a part of the Request-Response scheme implemented to be used in communication\n     * between workers and the decoder.\n     */\n    export interface RequestMessage extends ServiceMessage {\n        type: ServiceMessageName.Request;\n        messageId: number;\n        request: any;\n    }\n\n    /**\n     * Type guard to check if an object is a request message sent to a worker.\n     */\n    export function isRequestMessage(message: any): message is RequestMessage {\n        return (\n            message &&\n            typeof message.service === \"string\" &&\n            typeof message.type === \"string\" &&\n            message.type === ServiceMessageName.Request\n        );\n    }\n\n    /**\n     * This message is a part of the Request-Response scheme implemented to be used in communication\n     * between workers and the decoder.\n     */\n    export interface ResponseMessage extends ServiceMessage {\n        type: ServiceMessageName.Response;\n        messageId: number;\n        errorMessage?: string;\n        errorStack?: string;\n        response?: object;\n    }\n\n    /**\n     * Type guard to check if an object is a request message sent to a worker.\n     */\n    export function isResponseMessage(message: any): message is ResponseMessage {\n        return (\n            message &&\n            typeof message.service === \"string\" &&\n            typeof message.type === \"string\" &&\n            message.type === ServiceMessageName.Response\n        );\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoJson } from \"../lib/GeoJsonDataType\";\nimport { WorkerServiceProtocol } from \"./WorkerServiceProtocol\";\n\n/**\n * Communication protocol with [[ITiler]].\n */\nexport namespace WorkerTilerProtocol {\n    /**\n     * Define possible names of requests called on tiler services within `WebWorker`.\n     */\n    export enum Requests {\n        RegisterIndex = \"register-index\",\n        UpdateIndex = \"update-index\",\n        TileRequest = \"tile-request\"\n    }\n\n    /**\n     * This object is sent to the tiler to register a new tile index in the worker.\n     */\n    export interface RegisterIndexRequest extends WorkerServiceProtocol.ServiceRequest {\n        type: Requests.RegisterIndex;\n        id: string;\n        input: string | GeoJson;\n    }\n\n    /**\n     * Type guard to check if an object is an index registration request sent to a worker.\n     */\n    export function isRegisterIndexRequest(message: any): message is RegisterIndexRequest {\n        return (\n            message && typeof message.type === \"string\" && message.type === Requests.RegisterIndex\n        );\n    }\n\n    /**\n     * This object is sent to the tiler to register a new tile index in the worker.\n     */\n    export interface UpdateIndexRequest extends WorkerServiceProtocol.ServiceRequest {\n        type: Requests.UpdateIndex;\n        id: string;\n        input: string | GeoJson;\n    }\n\n    /**\n     * Type guard to check if an object is an update request for the index registration.\n     */\n    export function isUpdateIndexRequest(message: any): message is UpdateIndexRequest {\n        return message && typeof message.type === \"string\" && message.type === Requests.UpdateIndex;\n    }\n\n    /**\n     * This object is sent to the tiler asking to retrieve a specific tile. The expected response\n     * type is an object containing a tiled payload.\n     */\n    export interface TileRequest extends WorkerServiceProtocol.ServiceRequest {\n        type: Requests.TileRequest;\n        index: string;\n        tileKey: number;\n    }\n\n    /**\n     * Type guard to check if an object is a tile request sent to a worker.\n     */\n    export function isTileRequest(message: any): message is TileRequest {\n        return message && typeof message.type === \"string\" && message.type === Requests.TileRequest;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Definitions, StyleSet } from \"./Theme\";\nimport { WorkerServiceProtocol } from \"./WorkerServiceProtocol\";\n\n/**\n * Interface for `OptionsMap` which describes a general structure of key-value pairs.\n */\nexport interface OptionsMap {\n    [name: string]: any;\n}\n\n/**\n * Allows to cancel and prioritize requests inside the requestQueue. Useful to optimize the order of\n * decoding tiles during animations and camera movements.\n *\n * `RequestController` is not extending [[AbortController]], because this is not supported in ES5.\n */\nexport class RequestController implements AbortController {\n    /**\n     * Creates an instance of `RequestController`.\n     *\n     * @param {number} priority\n     * @param {AbortController} abortController Optional [[AbortController]] used internally, since\n     *      [[AbortController]]s should not be subclassed.\n     */\n    constructor(\n        public priority: number = 0,\n        public abortController: AbortController = new AbortController()\n    ) {}\n\n    get signal(): AbortSignal {\n        return this.abortController.signal;\n    }\n\n    /**\n     * Invoking this method will set this object's AbortSignal's aborted flag and\n     * signal to any observers that the associated activity is to be aborted.\n     */\n    abort(): void {\n        this.abortController.abort();\n    }\n}\n\n/**\n * Communication protocol with [[ITileDecoder]].\n */\nexport namespace WorkerDecoderProtocol {\n    /**\n     * Define possible names of messages exchanged with decoder services within `WebWorker`.\n     */\n    export enum DecoderMessageName {\n        Configuration = \"configuration\"\n    }\n\n    /**\n     * Interface for `DecodedTileMessage` which describes metadata for a decoded tile.\n     */\n    export interface DecoderMessage {\n        service: string;\n        type: DecoderMessageName;\n    }\n\n    /**\n     * Interface for a ConfigurationMessage that is sent from the datasource to the decoder. The\n     * message used to configure the [[ITileDecoder]].\n     */\n    export interface ConfigurationMessage extends DecoderMessage {\n        type: DecoderMessageName.Configuration;\n        styleSet?: StyleSet;\n        definitions?: Definitions;\n        options?: OptionsMap;\n        languages?: string[];\n    }\n\n    /**\n     * Type guard to check if an object is an instance of `ConfigurationMessage`.\n     */\n    export function isConfigurationMessage(message: any): message is ConfigurationMessage {\n        return (\n            message &&\n            typeof message.service === \"string\" &&\n            typeof message.type === \"string\" &&\n            message.type === DecoderMessageName.Configuration\n        );\n    }\n\n    /**\n     * Define possible names of requests called on decoder services within `WebWorker`.\n     */\n    export enum Requests {\n        DecodeTileRequest = \"decode-tile-request\",\n        TileInfoRequest = \"tile-info-request\"\n    }\n\n    /**\n     * This object is sent to the decoder asking to decode a specific tile. The expected response\n     * type is a [[DecodedTile]].\n     */\n    export interface DecodeTileRequest extends WorkerServiceProtocol.ServiceRequest {\n        type: Requests.DecodeTileRequest;\n        tileKey: number;\n        data: ArrayBufferLike;\n        projection: string;\n    }\n\n    /**\n     * Type guard to check if an object is a decoded tile object sent to a worker.\n     */\n    export function isDecodeTileRequest(message: any): message is DecodeTileRequest {\n        return (\n            message &&\n            typeof message.type === \"string\" &&\n            message.type === Requests.DecodeTileRequest\n        );\n    }\n\n    /**\n     * This object is sent to the decoder asking for a tile info of a specific tile. The expected\n     * response type is a [[DecodedTile]].\n     */\n    export interface TileInfoRequest extends WorkerServiceProtocol.ServiceRequest {\n        type: Requests.TileInfoRequest;\n        tileKey: number;\n        data: ArrayBufferLike;\n        projection: string;\n    }\n\n    /**\n     * Type guard to check if an object is an info tile object sent to a worker.\n     */\n    export function isTileInfoRequest(message: any): message is TileInfoRequest {\n        return (\n            message && typeof message.type === \"string\" && message.type === Requests.TileInfoRequest\n        );\n    }\n}\n","/*\n * Copyright (C) 2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Represents an object that carry [[GeoBox]] extents like interface.\n */\nexport interface GeoBoxExtentLike {\n    /**\n     * Latitude span in degrees.\n     */\n    readonly latitudeSpan: number;\n\n    /**\n     * Longitude span in degrees\n     */\n    readonly longitudeSpan: number;\n}\n\n/**\n * Type guard to assert that `object` conforms to [[GeoBoxExtentLike]] interface.\n */\nexport function isGeoBoxExtentLike(obj: any): obj is GeoBoxExtentLike {\n    return (\n        obj &&\n        typeof obj === \"object\" &&\n        typeof obj.latitudeSpan === \"number\" &&\n        typeof obj.longitudeSpan === \"number\"\n    );\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinates } from \"../coordinates/GeoCoordinates\";\nimport { GeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Box3Like, isBox3Like } from \"../math/Box3Like\";\nimport { MathUtils } from \"../math/MathUtils\";\nimport { isOrientedBox3Like, OrientedBox3Like } from \"../math/OrientedBox3Like\";\nimport { Vector3Like } from \"../math/Vector3Like\";\nimport { Projection, ProjectionType } from \"./Projection\";\n\nimport * as THREE from \"three\";\n\nclass IdentityProjection extends Projection {\n    /** @override */\n    readonly type: ProjectionType = ProjectionType.Planar;\n\n    /** @override */\n    getScaleFactor(_worldPoint: Vector3Like): number {\n        return 1;\n    }\n\n    /** @override */\n    worldExtent<WorldBoundingBox extends Box3Like>(\n        minAltitude: number,\n        maxAltitude: number,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        if (!result) {\n            result = (new THREE.Box3() as Box3Like) as WorldBoundingBox;\n        }\n        result.min.x = -Math.PI;\n        result.min.y = -Math.PI * 0.5;\n        result.min.z = minAltitude;\n        result.max.x = Math.PI;\n        result.max.y = Math.PI * 0.5;\n        result.max.z = maxAltitude;\n        return result;\n    }\n\n    /** @override */\n    projectPoint<WorldCoordinates extends Vector3Like>(\n        geoPoint: GeoCoordinatesLike,\n        result?: WorldCoordinates\n    ): WorldCoordinates {\n        if (!result) {\n            // tslint:disable-next-line:no-object-literal-type-assertion\n            result = { x: 0, y: 0, z: 0 } as WorldCoordinates;\n        }\n        result.x = THREE.MathUtils.degToRad(geoPoint.longitude);\n        result.y = THREE.MathUtils.degToRad(geoPoint.latitude);\n        result.z = geoPoint.altitude || 0;\n        return result;\n    }\n\n    /** @override */\n    unprojectPoint(worldPoint: Vector3Like): GeoCoordinates {\n        const geoPoint = GeoCoordinates.fromRadians(worldPoint.y, worldPoint.x, worldPoint.z);\n        return geoPoint;\n    }\n\n    /** @override */\n    unprojectAltitude(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    projectBox<WorldBoundingBox extends Box3Like | OrientedBox3Like>(\n        geoBox: GeoBox,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        if (!result) {\n            result = (new THREE.Box3() as Box3Like) as WorldBoundingBox;\n        }\n        const min = this.projectPoint(\n            new GeoCoordinates(geoBox.south, geoBox.west, geoBox.minAltitude)\n        );\n        const max = this.projectPoint(\n            new GeoCoordinates(geoBox.north, geoBox.east, geoBox.maxAltitude)\n        );\n        if (isBox3Like(result)) {\n            result.min.x = min.x;\n            result.min.y = min.y;\n            result.min.z = min.z;\n            result.max.x = max.x;\n            result.max.y = max.y;\n            result.max.z = max.z;\n        } else if (isOrientedBox3Like(result)) {\n            MathUtils.newVector3(1, 0, 0, result.xAxis);\n            MathUtils.newVector3(0, 1, 0, result.yAxis);\n            MathUtils.newVector3(0, 0, 1, result.zAxis);\n            result.position.x = (min.x + max.x) * 0.5;\n            result.position.y = (min.y + max.y) * 0.5;\n            result.position.z = (min.z + max.z) * 0.5;\n            result.extents.x = (max.x - min.x) * 0.5;\n            result.extents.y = (max.y - min.y) * 0.5;\n            result.extents.z = Math.max(Number.EPSILON, (max.z - min.z) * 0.5);\n        }\n        return result;\n    }\n\n    /** @override */\n    unprojectBox(worldBox: Box3Like): GeoBox {\n        const minGeo = this.unprojectPoint(worldBox.min);\n        const maxGeo = this.unprojectPoint(worldBox.max);\n        return GeoBox.fromCoordinates(minGeo, maxGeo);\n    }\n\n    /** @override */\n    groundDistance(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    scalePointToSurface(worldPoint: Vector3Like): Vector3Like {\n        worldPoint.z = 0;\n        return worldPoint;\n    }\n\n    /** @override */\n    surfaceNormal(_worldPoint: Vector3Like, normal?: Vector3Like) {\n        if (normal === undefined) {\n            normal = { x: 0, y: 0, z: 1 };\n        } else {\n            normal.x = 0;\n            normal.y = 0;\n            normal.z = 1;\n        }\n        return normal;\n    }\n}\n\n/**\n * Identity [[Projection]] used to convert geo coordinates to unit coordinates and vice versa.\n */\nexport const identityProjection: Projection = new IdentityProjection(1);\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinates } from \"../coordinates/GeoCoordinates\";\nimport { GeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Box3Like, isBox3Like } from \"../math/Box3Like\";\nimport { MathUtils } from \"../math/MathUtils\";\nimport { isOrientedBox3Like, OrientedBox3Like } from \"../math/OrientedBox3Like\";\nimport { TransformLike } from \"../math/TransformLike\";\nimport { Vector3Like } from \"../math/Vector3Like\";\nimport { EarthConstants } from \"./EarthConstants\";\nimport { mercatorProjection, webMercatorProjection } from \"./MercatorProjection\";\nimport { Projection, ProjectionType } from \"./Projection\";\n\nimport * as THREE from \"three\";\n\n/**\n * Transforms the given vector using the provided basis.\n */\nfunction apply(\n    xAxis: Vector3Like,\n    yAxis: Vector3Like,\n    zAxis: Vector3Like,\n    v: Vector3Like\n): Vector3Like {\n    const x = xAxis.x * v.x + yAxis.x * v.y + zAxis.x * v.z;\n    const y = xAxis.y * v.x + yAxis.y * v.y + zAxis.y * v.z;\n    const z = xAxis.z * v.x + yAxis.z * v.y + zAxis.z * v.z;\n    v.x = x;\n    v.y = y;\n    v.z = z;\n    return v;\n}\n\n/**\n * Returns the quadrants for the given longitude. The quadrant is defined as:\n *  - quadrant(+Math.PI * -1.0) = 0\n *  - quadrant(+Math.PI * -0.5) = 1\n *  - quadrant(+Math.PI *  0.0) = 2\n *  - quadrant(+Math.PI *  0.5) = 3\n *  - quadrant(+Math.PI *  1.0) = 4\n *\n * @param longitude The longitude in radians.\n */\nfunction getLongitudeQuadrant(longitude: number) {\n    const oneOverPI = 1 / Math.PI;\n    const quadrantIndex = Math.floor(2 * (longitude * oneOverPI + 1));\n    return THREE.MathUtils.clamp(quadrantIndex, 0, 4);\n}\n\nfunction lengthOfVector3(worldPoint: Vector3Like): number {\n    const d = Math.sqrt(\n        worldPoint.x * worldPoint.x + worldPoint.y * worldPoint.y + worldPoint.z * worldPoint.z\n    );\n    return d;\n}\n\n/**\n * Creates a Box3 enclosing the geobox.\n *\n * @param geoBox Ghe given geobox\n * @param worldBox The resulting axis aligned bounding box.\n */\nfunction makeBox3<Bounds extends Box3Like>(\n    geoBox: GeoBox,\n    worldBox: Bounds,\n    unitScale: number\n): Bounds {\n    const halfEquatorialRadius = (unitScale + (geoBox.maxAltitude || 0)) * 0.5;\n\n    const minLongitude = THREE.MathUtils.degToRad(geoBox.west);\n    const maxLongitude = THREE.MathUtils.degToRad(geoBox.east);\n\n    const minLongitudeQuadrant = getLongitudeQuadrant(minLongitude);\n    const maxLongitudeQuadrant = getLongitudeQuadrant(maxLongitude);\n\n    let xMin = Math.cos(minLongitude);\n    let xMax = xMin;\n    let yMin = Math.sin(minLongitude);\n    let yMax = yMin;\n\n    for (\n        let quadrantIndex = minLongitudeQuadrant + 1;\n        quadrantIndex <= maxLongitudeQuadrant;\n        quadrantIndex++\n    ) {\n        // tslint:disable-next-line: no-bitwise\n        const x = ((quadrantIndex + 1) & 1) * ((quadrantIndex & 2) - 1);\n        xMin = Math.min(x, xMin);\n        xMax = Math.max(x, xMax);\n\n        // tslint:disable-next-line: no-bitwise\n        const y = (quadrantIndex & 1) * ((quadrantIndex & 2) - 1);\n        yMin = Math.min(y, yMin);\n        yMax = Math.max(y, yMax);\n    }\n\n    const cosMaxLongitude = Math.cos(maxLongitude);\n    xMin = Math.min(cosMaxLongitude, xMin);\n    xMax = Math.max(cosMaxLongitude, xMax);\n\n    const sinMaxLongitude = Math.sin(maxLongitude);\n    yMin = Math.min(sinMaxLongitude, yMin);\n    yMax = Math.max(sinMaxLongitude, yMax);\n\n    const xCenter = (xMax + xMin) * halfEquatorialRadius;\n    const xExtent = (xMax - xMin) * halfEquatorialRadius;\n\n    const yCenter = (yMax + yMin) * halfEquatorialRadius;\n    const yExtent = (yMax - yMin) * halfEquatorialRadius;\n\n    // Calculate Z boundaries.\n    const minLatitude = THREE.MathUtils.degToRad(geoBox.south);\n    const maxLatutide = THREE.MathUtils.degToRad(geoBox.north);\n\n    const zMax = Math.sin(maxLatutide);\n    const zMin = Math.sin(minLatitude);\n\n    const zCenter = (zMax + zMin) * halfEquatorialRadius;\n    const zExtent = (zMax - zMin) * halfEquatorialRadius;\n\n    worldBox.min.x = xCenter - xExtent;\n    worldBox.min.y = yCenter - yExtent;\n    worldBox.min.z = zCenter - zExtent;\n    worldBox.max.x = xCenter + xExtent;\n    worldBox.max.y = yCenter + yExtent;\n    worldBox.max.z = zCenter + zExtent;\n\n    return worldBox;\n}\n\n/**\n * Computes the spherical projection of the given geo coordinates.\n *\n * @param geoPoint The geo coordinates.\n * @param worldpoint The resulting world coordinates.\n */\nfunction project<WorldCoordinates extends Vector3Like>(\n    geoPoint: GeoCoordinatesLike,\n    worldpoint: WorldCoordinates,\n    unitScale: number\n): typeof worldpoint {\n    const radius = unitScale + (geoPoint.altitude || 0);\n    const latitude = THREE.MathUtils.degToRad(geoPoint.latitude);\n    const longitude = THREE.MathUtils.degToRad(geoPoint.longitude);\n    const cosLatitude = Math.cos(latitude);\n    worldpoint.x = radius * cosLatitude * Math.cos(longitude);\n    worldpoint.y = radius * cosLatitude * Math.sin(longitude);\n    worldpoint.z = radius * Math.sin(latitude);\n    return worldpoint;\n}\n\nclass SphereProjection extends Projection {\n    /** @override */\n    readonly type: ProjectionType = ProjectionType.Spherical;\n\n    /** @override */\n    worldExtent<Bounds extends Box3Like>(\n        _minElevation: number,\n        maxElevation: number,\n        result: Bounds = (new THREE.Box3() as Box3Like) as Bounds\n    ): Bounds {\n        const radius = this.unitScale + maxElevation;\n        result.min.x = -radius;\n        result.min.y = -radius;\n        result.min.z = -radius;\n        result.max.x = radius;\n        result.max.y = radius;\n        result.max.z = radius;\n        return result;\n    }\n\n    /** @override */\n    projectPoint<WorldCoordinates extends Vector3Like>(\n        geoPoint: GeoCoordinatesLike,\n        result: WorldCoordinates = MathUtils.newVector3(0, 0, 0) as WorldCoordinates\n    ): WorldCoordinates {\n        return project(geoPoint, result, this.unitScale);\n    }\n\n    /** @override */\n    unprojectPoint(point: Vector3Like): GeoCoordinates {\n        const parallelRadiusSq = point.x * point.x + point.y * point.y;\n        const parallelRadius = Math.sqrt(parallelRadiusSq);\n        const v = point.z / parallelRadius;\n\n        if (isNaN(v)) {\n            return GeoCoordinates.fromRadians(0, 0, -this.unitScale);\n        }\n\n        const radius = Math.sqrt(parallelRadiusSq + point.z * point.z);\n\n        return GeoCoordinates.fromRadians(\n            Math.atan(v),\n            Math.atan2(point.y, point.x),\n            radius - this.unitScale\n        );\n    }\n\n    /** @override */\n    unprojectAltitude(point: Vector3Like): number {\n        const parallelRadiusSq = point.x * point.x + point.y * point.y + point.z * point.z;\n        return Math.sqrt(parallelRadiusSq) - EarthConstants.EQUATORIAL_RADIUS;\n    }\n\n    /** @override */\n    projectBox<Bounds extends Box3Like | OrientedBox3Like>(\n        geoBox: GeoBox,\n        result: Bounds = (new THREE.Box3() as Box3Like) as Bounds\n    ): Bounds {\n        if (isBox3Like(result)) {\n            return makeBox3(geoBox, result, this.unitScale);\n        } else if (isOrientedBox3Like(result)) {\n            if (geoBox.longitudeSpan >= 90) {\n                const bounds = makeBox3(geoBox, new THREE.Box3() as Box3Like, this.unitScale);\n                MathUtils.newVector3(1, 0, 0, result.xAxis);\n                MathUtils.newVector3(0, 1, 0, result.yAxis);\n                MathUtils.newVector3(0, 0, 1, result.zAxis);\n                result.position.x = (bounds.max.x + bounds.min.x) * 0.5;\n                result.position.y = (bounds.max.y + bounds.min.y) * 0.5;\n                result.position.z = (bounds.max.z + bounds.min.z) * 0.5;\n                result.extents.x = (bounds.max.x - bounds.min.x) * 0.5;\n                result.extents.y = (bounds.max.y - bounds.min.y) * 0.5;\n                result.extents.z = (bounds.max.z - bounds.min.z) * 0.5;\n                return result;\n            }\n\n            const { south, west, north, east, center: mid } = geoBox;\n            const midX = mid.longitude;\n            const midY = mid.latitude;\n            const cosSouth = Math.cos(THREE.MathUtils.degToRad(south));\n            const sinSouth = Math.sin(THREE.MathUtils.degToRad(south));\n            const cosWest = Math.cos(THREE.MathUtils.degToRad(west));\n            const sinWest = Math.sin(THREE.MathUtils.degToRad(west));\n            const cosNorth = Math.cos(THREE.MathUtils.degToRad(north));\n            const sinNorth = Math.sin(THREE.MathUtils.degToRad(north));\n            const cosEast = Math.cos(THREE.MathUtils.degToRad(east));\n            const sinEast = Math.sin(THREE.MathUtils.degToRad(east));\n            const cosMidX = Math.cos(THREE.MathUtils.degToRad(midX));\n            const sinMidX = Math.sin(THREE.MathUtils.degToRad(midX));\n            const cosMidY = Math.cos(THREE.MathUtils.degToRad(midY));\n            const sinMidY = Math.sin(THREE.MathUtils.degToRad(midY));\n\n            // Build the orientation of the OBB using the normal vector and its partial derivates.\n\n            // the sperical coordinates of the mid point of the geobox.\n            MathUtils.newVector3(cosMidX * cosMidY, sinMidX * cosMidY, sinMidY, result.zAxis);\n\n            // the partial derivates of the normal vector.\n            MathUtils.newVector3(-sinMidX, cosMidX, 0, result.xAxis);\n            MathUtils.newVector3(-cosMidX * sinMidY, -sinMidX * sinMidY, cosMidY, result.yAxis);\n\n            let width: number;\n            let minY: number;\n            let maxY: number;\n\n            if (south >= 0) {\n                // abs(dot(southWest - southEast, xAxis))\n                width = Math.abs(\n                    cosSouth * (cosMidX * (sinWest - sinEast) + sinMidX * (cosEast - cosWest))\n                );\n\n                // dot(south, yAxis)\n                minY = cosMidY * sinSouth - sinMidY * cosSouth;\n\n                // dot(northEast, zAxis)\n                maxY =\n                    cosMidY * sinNorth -\n                    sinMidY * cosNorth * (cosMidX * cosEast + sinMidX * sinEast);\n            } else {\n                if (north <= 0) {\n                    // abs(dot(northWest - northEast, xAxis))\n                    width = Math.abs(\n                        cosNorth * (cosMidX * (sinWest - sinEast) + sinMidX * (cosEast - cosWest))\n                    );\n\n                    // dot(north, yAxis)\n                    maxY = cosMidY * sinNorth - sinMidY * cosNorth;\n                } else {\n                    // abs(dot(west - east, xAxis))\n                    width = Math.abs(cosMidX * (sinWest - sinEast) + sinMidX * (cosEast - cosWest));\n\n                    // dot(northEast, yAxis)\n                    maxY =\n                        cosMidY * sinNorth -\n                        sinMidY * cosNorth * (sinMidX * sinEast + cosMidX * cosEast);\n                }\n\n                // dot(southEast, yAxis)\n                minY =\n                    cosMidY * sinSouth -\n                    sinMidY * cosSouth * (cosMidX * cosEast + sinMidX * sinEast);\n            }\n\n            const rMax = (this.unitScale + (geoBox.maxAltitude || 0)) * 0.5;\n            const rMin = (this.unitScale + (geoBox.minAltitude || 0)) * 0.5;\n\n            // min(dot(southEast, zAxis), dot(northEast, zAxis))\n\n            const d = cosMidY * (cosMidX * cosEast + sinMidX * sinEast);\n\n            const minZ = Math.min(\n                cosNorth * d + sinNorth * sinMidY,\n                cosSouth * d + sinSouth * sinMidY\n            );\n\n            MathUtils.newVector3(\n                width * rMax,\n                (maxY - minY) * rMax,\n                rMax - minZ * rMin,\n                result.extents\n            );\n\n            MathUtils.newVector3(0, (minY + maxY) * rMax, rMax + rMax, result.position);\n\n            apply(result.xAxis, result.yAxis, result.zAxis, result.position);\n\n            result.position.x = result.position.x - result.zAxis.x * result.extents.z;\n            result.position.y = result.position.y - result.zAxis.y * result.extents.z;\n            result.position.z = result.position.z - result.zAxis.z * result.extents.z;\n\n            return result;\n        }\n\n        throw new Error(\"Invalid bounding box\");\n    }\n\n    /** @override */\n    unprojectBox(_worldBox: Box3Like): GeoBox {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    /** @override */\n    getScaleFactor(_worldPoint: Vector3Like): number {\n        return 1;\n    }\n\n    /** @override */\n    groundDistance(worldPoint: Vector3Like): number {\n        return lengthOfVector3(worldPoint) - this.unitScale;\n    }\n\n    /** @override */\n    scalePointToSurface(worldPoint: Vector3Like): Vector3Like {\n        const scale = this.unitScale / (lengthOfVector3(worldPoint) || 1);\n        worldPoint.x *= scale;\n        worldPoint.y *= scale;\n        worldPoint.z *= scale;\n        return worldPoint;\n    }\n\n    /** @override */\n    surfaceNormal(worldPoint: Vector3Like, normal?: Vector3Like) {\n        if (normal === undefined) {\n            normal = { x: 0, y: 0, z: 0 };\n        }\n        const scale = 1 / (lengthOfVector3(worldPoint) || 1);\n        normal.x = worldPoint.x * scale;\n        normal.y = worldPoint.y * scale;\n        normal.z = worldPoint.z * scale;\n        return normal;\n    }\n\n    /** @override */\n    reprojectPoint(\n        sourceProjection: Projection,\n        worldPos: Vector3Like,\n        result?: Vector3Like\n    ): Vector3Like {\n        if (sourceProjection === mercatorProjection || sourceProjection === webMercatorProjection) {\n            const { x, y, z } = worldPos;\n            const r = this.unitScale;\n            const mx = x / r - Math.PI;\n            const my = y / r - Math.PI;\n            const w = Math.exp(my);\n            const d = w * w;\n            const gx = (2 * w) / (d + 1);\n            const gy = (d - 1) / (d + 1);\n            const scale = r + z;\n\n            if (result === undefined) {\n                // tslint:disable-next-line: no-object-literal-type-assertion\n                result = {} as Vector3Like;\n            }\n\n            result.x = Math.cos(mx) * gx * scale;\n            result.y = Math.sin(mx) * gx * scale;\n            result.z = gy * scale;\n\n            if (sourceProjection === webMercatorProjection) {\n                result.z = -result.z;\n            }\n\n            return result;\n        }\n\n        return super.reprojectPoint(sourceProjection, worldPos, result!);\n    }\n\n    /** @override */\n    localTangentSpace(geoPoint: GeoCoordinatesLike, result: TransformLike): TransformLike {\n        const latitude = THREE.MathUtils.degToRad(geoPoint.latitude);\n        const longitude = THREE.MathUtils.degToRad(geoPoint.longitude);\n\n        const cosLongitude = Math.cos(longitude);\n        const sinLongitude = Math.sin(longitude);\n        const cosLatitude = Math.cos(latitude);\n        const sinLatitude = Math.sin(latitude);\n\n        MathUtils.newVector3(\n            cosLongitude * cosLatitude,\n            sinLongitude * cosLatitude,\n            sinLatitude,\n            result.zAxis\n        );\n\n        MathUtils.newVector3(-sinLongitude, cosLongitude, 0, result.xAxis);\n\n        MathUtils.newVector3(\n            -cosLongitude * sinLatitude,\n            -sinLongitude * sinLatitude,\n            cosLatitude,\n            result.yAxis\n        );\n\n        this.projectPoint(geoPoint, result.position);\n\n        return result;\n    }\n}\n\nexport const sphereProjection: Projection = new SphereProjection(EarthConstants.EQUATORIAL_RADIUS);\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { TileKey } from \"./TileKey\";\nimport { TilingScheme } from \"./TilingScheme\";\n\n/**\n * A class used to represent a quadtree.\n */\nexport class QuadTree {\n    /**\n     * Constructs a new `QuadTree` for the given [[TilingScheme]].\n     *\n     * Example:\n     * ```typescript\n     * const quadTree = new QuadTree(hereTilingScheme);\n     * const geoBox = quadTree.getGeoBox(tileKey);\n     * console.log(geoBox.center);\n     * ```\n     *\n     * @param tilingScheme The TilingScheme used by this `QuadTree`.\n     */\n    constructor(readonly tilingScheme: TilingScheme) {}\n\n    /**\n     * Visits this `QuadTree` and invoke the given accept method with the current [[TileKey]] and\n     * its bounding box in geo coordinates.\n     *\n     * Example:\n     * ```typescript\n     * const geoPos = new GeoCoordinates(latitude, longitude);\n     * const quadTree = new QuadTree(hereTilingScheme);\n     * quadTree.visit((tileKey, geoBox) => {\n     *     if (geoBox.contains(geoPos)) {\n     *         console.log(\"tile\", tileKey, \"contains\", geoPos);\n     *         return tileKey.level < 14; // stop visiting the quadtree if the level is >= 14.\n     *     }\n     *     return false; // stop visiting the quadtree,\n     *                   // the tile's geoBox doesn't contain the given coordinates.\n     * });\n     * ```\n     *\n     * @param accept A function that takes a [[TileKey]] and its bounding box in geo coordinates and\n     * returns `true` if the visit of the `QuadTree` should continue; otherwise `false`.\n     */\n    visit(accept: (tileKey: TileKey, geoBox: GeoBox) => boolean) {\n        this.visitTileKey(TileKey.fromRowColumnLevel(0, 0, 0), accept);\n    }\n\n    /**\n     * Visits the subtree starting from the given tile.\n     *\n     * @param tileKey The root of the subtree that should be visited.\n     * @param accept A function that takes a [[TileKey]] and its bounding box in geo coordinates and\n     * returns `true` if the visit of the `QuadTree` should continue; otherwise `false`.\n     */\n    visitTileKey(tileKey: TileKey, accept: (tileKey: TileKey, geoBox: GeoBox) => boolean) {\n        const geoBox = this.tilingScheme.getGeoBox(tileKey);\n\n        if (!accept(tileKey, geoBox)) {\n            return;\n        }\n\n        for (const subTileKey of this.tilingScheme.getSubTileKeys(tileKey)) {\n            this.visitTileKey(subTileKey, accept);\n        }\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { normalizedEquirectangularProjection } from \"../projection/EquirectangularProjection\";\nimport { halfQuadTreeSubdivisionScheme } from \"./HalfQuadTreeSubdivisionScheme\";\nimport { TilingScheme } from \"./TilingScheme\";\n\n/**\n * [[TilingScheme]] used by most of the data published by HERE.\n *\n * The `hereTilingScheme` features a half quadtree subdivision scheme and an equirectangular\n * projection.\n */\nexport const hereTilingScheme = new TilingScheme(\n    halfQuadTreeSubdivisionScheme,\n    normalizedEquirectangularProjection\n);\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { webMercatorProjection } from \"../projection/MercatorProjection\";\nimport { quadTreeSubdivisionScheme } from \"./QuadTreeSubdivisionScheme\";\nimport { TilingScheme } from \"./TilingScheme\";\n\n/**\n * A [[TilingScheme]] featuring quadtree subdivision scheme and web Mercator projection.\n */\nexport const webMercatorTilingScheme = new TilingScheme(\n    quadTreeSubdivisionScheme,\n    webMercatorProjection\n);\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { mercatorProjection } from \"../projection/MercatorProjection\";\nimport { quadTreeSubdivisionScheme } from \"./QuadTreeSubdivisionScheme\";\nimport { TilingScheme } from \"./TilingScheme\";\n\n/**\n * The [[TilingScheme]] used by the HERE web tiles.\n *\n * The `mercatorTilingScheme` features a quadtree subdivision scheme and a Mercator projection.\n */\nexport const mercatorTilingScheme = new TilingScheme(quadTreeSubdivisionScheme, mercatorProjection);\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { transverseMercatorProjection } from \"../projection/TransverseMercatorProjection\";\nimport { quadTreeSubdivisionScheme } from \"./QuadTreeSubdivisionScheme\";\nimport { TilingScheme } from \"./TilingScheme\";\n\n/**\n * A [[TilingScheme]] featuring quadtree subdivision scheme and\n * transverse Mercator projection.\n */\nexport const polarTilingScheme = new TilingScheme(\n    quadTreeSubdivisionScheme,\n    transverseMercatorProjection\n);\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Interface representing a Vector3.\n */\nexport interface Vector3Like {\n    /**\n     * The X position.\n     */\n    x: number;\n\n    /**\n     * The Y position.\n     */\n    y: number;\n\n    /**\n     * The Z position.\n     */\n    z: number;\n}\n\nexport function isVector3Like(v: any): v is Vector3Like {\n    return v && typeof v.x === \"number\" && typeof v.y === \"number\" && typeof v.z === \"number\";\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Vector3Like } from \"./Vector3Like\";\n\n/**\n * The interface [[TransformLike]] is used to represent transforms with\n * only translation and rotation.\n */\nexport interface TransformLike {\n    /**\n     * The position of this transform.\n     */\n    readonly position: Vector3Like;\n\n    /**\n     * The x-axis of this transform.\n     */\n    readonly xAxis: Vector3Like;\n\n    /**\n     * The y-axis of this transform.\n     */\n    readonly yAxis: Vector3Like;\n\n    /**\n     * The z-axis of this transform.\n     */\n    readonly zAxis: Vector3Like;\n}\n\n/**\n * Returns true if the given object implements the interface [[TransformLike]].\n *\n * @param object The object.\n */\nexport function isTransformLike(object: {}): object is TransformLike {\n    const transform = object as Partial<TransformLike>;\n    return (\n        transform.position !== undefined &&\n        transform.xAxis !== undefined &&\n        transform.yAxis !== undefined &&\n        transform.zAxis !== undefined\n    );\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Frustum, Matrix4, Plane, Ray, Vector3 } from \"three\";\nimport { OrientedBox3Like } from \"./OrientedBox3Like\";\n\nfunction intersectsSlab(\n    rayDir: Vector3,\n    p: Vector3,\n    axis: Vector3,\n    extent: number,\n    t: { min: number; max: number }\n): boolean {\n    const epsilon = 1e-20;\n    const e = axis.dot(p);\n    const f = axis.dot(rayDir);\n    if (Math.abs(f) < epsilon) {\n        // ray parallel to near/far slab lines.\n        return Math.abs(e) <= extent;\n    }\n\n    // ray intersects near/far slab lines.\n    const finv = 1 / f;\n    const t1 = (e + extent) * finv;\n    const t2 = (e - extent) * finv;\n    if (t1 > t2) {\n        // t1 is far intersect, t2 is near.\n        if (t2 > t.min) {\n            t.min = t2;\n        }\n        if (t1 < t.max) {\n            t.max = t1;\n        }\n    } else {\n        // t1 is near intersect, t2 is far.\n        if (t1 > t.min) {\n            t.min = t1;\n        }\n        if (t2 < t.max) {\n            t.max = t2;\n        }\n    }\n    return t.min <= t.max && t.max >= 0;\n}\n\nconst tmpVec = new Vector3();\nconst tmpT = { min: -Infinity, max: Infinity };\n\nexport class OrientedBox3 implements OrientedBox3Like {\n    /**\n     * The position of the center of this `OrientedBox3`.\n     */\n    readonly position = new Vector3();\n\n    /**\n     * The x-axis of this `OrientedBox3`.\n     */\n    readonly xAxis = new Vector3(1, 0, 0);\n\n    /**\n     * The y-axis of this `OrientedBox3`.\n     */\n    readonly yAxis = new Vector3(0, 1, 0);\n\n    /**\n     * The z-axis of this `OrientedBox3`.\n     */\n    readonly zAxis = new Vector3(0, 0, 1);\n\n    /**\n     * The extents of this `OrientedBox3`.\n     */\n    readonly extents = new Vector3();\n\n    /**\n     * Creates a new `OrientedBox3`.\n     */\n    constructor();\n\n    /**\n     * Creates a new `OrientedBox3` with the given position, orientation and extents.\n     *\n     * @param position The position of the center of the `OrientedBox3`.\n     * @param rotationMatrix The rotation of the `OrientedBox3`.\n     * @param extents The extents of the `OrientedBox3`.\n     */\n    constructor(position: Vector3, rotationMatrix: Matrix4, extents: Vector3);\n\n    /**\n     * Creates a new `OrientedBox3`.\n     *\n     * @hideconstructor\n     */\n    constructor(position?: Vector3, rotationMatrix?: Matrix4, extents?: Vector3) {\n        if (position !== undefined) {\n            this.position.copy(position);\n        }\n\n        if (rotationMatrix !== undefined) {\n            rotationMatrix.extractBasis(this.xAxis, this.yAxis, this.zAxis);\n        }\n\n        if (extents !== undefined) {\n            this.extents.copy(extents);\n        }\n    }\n\n    /**\n     * Create a copy of this [[OrientedBoundingBox]].\n     */\n    clone(): OrientedBox3 {\n        const newBox = new OrientedBox3();\n        newBox.copy(this);\n        return newBox;\n    }\n\n    /**\n     * Copies the values of `other` to this [[OrientedBox3]].\n     * @param other The other [[OrientedBox3]] to copy.\n     */\n    copy(other: OrientedBox3) {\n        this.position.copy(other.position);\n        this.xAxis.copy(other.xAxis);\n        this.yAxis.copy(other.yAxis);\n        this.zAxis.copy(other.zAxis);\n        this.extents.copy(other.extents);\n    }\n\n    /**\n     * Gets the center position of this [[OrientedBox3]].\n     *\n     * @param center The returned center position.\n     */\n    getCenter(center = new Vector3()): Vector3 {\n        return center.copy(this.position);\n    }\n\n    /**\n     * Gets the size of this [[OrientedBox3]].\n     *\n     * @param size The returned size.\n     */\n    getSize(size = new Vector3()): Vector3 {\n        return size.copy(this.extents).multiplyScalar(2);\n    }\n\n    /**\n     * Gets the orientation matrix of this `OrientedBox3`.\n     * @param matrix The output orientation matrix.\n     */\n    getRotationMatrix(matrix: Matrix4 = new Matrix4()): Matrix4 {\n        return matrix.makeBasis(this.xAxis, this.yAxis, this.zAxis);\n    }\n\n    /**\n     * Checks intersection with the given `THREE.Frustum` or array of `THREE.Plane`s.\n     *\n     * @param frustumOrPlanes Frustum or array of planes.\n     */\n    intersects(frustumOrPlanes: Plane[] | Frustum): boolean {\n        const planes: Plane[] = Array.isArray(frustumOrPlanes)\n            ? frustumOrPlanes\n            : frustumOrPlanes.planes;\n\n        for (const plane of planes) {\n            const r =\n                Math.abs(plane.normal.dot(this.xAxis) * this.extents.x) +\n                Math.abs(plane.normal.dot(this.yAxis) * this.extents.y) +\n                Math.abs(plane.normal.dot(this.zAxis) * this.extents.z);\n\n            const d = plane.distanceToPoint(this.position);\n\n            if (d + r < 0) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    /**\n     * Checks intersection with the given ray.\n     *\n     * @param ray The ray to test.\n     * @returns distance from ray origin to intersection point if it exist, undefined otherwise.\n     */\n    intersectsRay(ray: Ray): number | undefined {\n        // Slabs intersection algorithm.\n        tmpT.min = -Infinity;\n        tmpT.max = Infinity;\n        tmpVec.copy(this.position).sub(ray.origin);\n        if (!intersectsSlab(ray.direction, tmpVec, this.xAxis, this.extents.x, tmpT)) {\n            return undefined;\n        }\n        if (!intersectsSlab(ray.direction, tmpVec, this.yAxis, this.extents.y, tmpT)) {\n            return undefined;\n        }\n        if (!intersectsSlab(ray.direction, tmpVec, this.zAxis, this.extents.z, tmpT)) {\n            return undefined;\n        }\n\n        return tmpT.min > 0 ? tmpT.min : tmpT.max;\n    }\n\n    /**\n     * Returns true if this [[OrientedBox3]] contains the given point.\n     *\n     * @param point A valid point.\n     */\n    contains(point: Vector3): boolean {\n        const dx = point.x - this.position.x;\n        const dy = point.y - this.position.y;\n        const dz = point.z - this.position.z;\n        const x = Math.abs(dx * this.xAxis.x + dy * this.xAxis.y + dz * this.xAxis.z);\n        const y = Math.abs(dx * this.yAxis.x + dy * this.yAxis.y + dz * this.yAxis.z);\n        const z = Math.abs(dx * this.zAxis.x + dy * this.zAxis.y + dz * this.zAxis.z);\n        if (x > this.extents.x || y > this.extents.y || z > this.extents.z) {\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * Returns the distance from this [[OrientedBox3]] and the given `point`.\n     *\n     * @param point A point.\n     */\n    distanceToPoint(point: Vector3): number {\n        return Math.sqrt(this.distanceToPointSquared(point));\n    }\n\n    /**\n     * Returns the squared distance from this [[OrientedBox3]] and the given `point`.\n     *\n     * @param point A point.\n     */\n    distanceToPointSquared(point: Vector3): number {\n        const d = new Vector3();\n        d.subVectors(point, this.position);\n\n        const lengths = [d.dot(this.xAxis), d.dot(this.yAxis), d.dot(this.zAxis)];\n\n        let result = 0;\n\n        for (let i = 0; i < 3; ++i) {\n            const length = lengths[i];\n            const extent = this.extents.getComponent(i);\n            if (length < -extent) {\n                const dd = extent + length;\n                result += dd * dd;\n            } else if (length > extent) {\n                const dd = length - extent;\n                result += dd * dd;\n            }\n        }\n\n        return result;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { isJsonExpr } from \"./Expr\";\nimport { StyleDeclaration, Theme } from \"./Theme\";\n\n/**\n * The ThemeVisitor visits every style in the theme in a depth-first fashion.\n */\nexport class ThemeVisitor {\n    constructor(readonly theme: Theme) {}\n    /**\n     * Applies a function to every style in the theme.\n     *\n     * @param visitFunc Function to be called with `style` as an argument. Function should return\n     *                  `true` to cancel visitation.\n     * @returns `true` if function has finished prematurely.\n     */\n    visitStyles(visitFunc: (style: StyleDeclaration) => boolean): boolean {\n        const visit = (style: StyleDeclaration): boolean => {\n            if (isJsonExpr(style)) {\n                return false;\n            }\n            if (visitFunc(style)) {\n                return true;\n            }\n            return false;\n        };\n        if (this.theme.styles !== undefined) {\n            for (const styleSetName in this.theme.styles) {\n                if (this.theme.styles[styleSetName] !== undefined) {\n                    for (const style of this.theme.styles[styleSetName]) {\n                        if (visit(style)) {\n                            return true;\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    DecodedTile,\n    Definitions,\n    ITileDecoder,\n    OptionsMap,\n    StyleSet,\n    TileInfo\n} from \"@here/harp-datasource-protocol\";\nimport { StyleSetEvaluator } from \"@here/harp-datasource-protocol/index-decoder\";\nimport { Projection, TileKey } from \"@here/harp-geoutils\";\n\n/**\n * `ThemedTileDecoder` implements an [[ITileDecoder]] which uses a [[Theme]] to apply styles to the\n * objects displayed in the map.\n *\n * By default, decoders are executed in web workers (using [[TileDecoderService]]) for performance\n * reasons.\n */\nexport abstract class ThemedTileDecoder implements ITileDecoder {\n    languages?: string[];\n    m_storageLevelOffset: number = 0;\n\n    protected m_styleSetEvaluator?: StyleSetEvaluator;\n    abstract connect(): Promise<void>;\n\n    dispose() {\n        // implemented in subclasses\n    }\n\n    decodeTile(\n        data: ArrayBufferLike,\n        tileKey: TileKey,\n        projection: Projection\n    ): Promise<DecodedTile> {\n        if (this.m_styleSetEvaluator === undefined) {\n            return Promise.reject(new Error(\"No style is defined\"));\n        }\n\n        return this.decodeThemedTile(data, tileKey, this.m_styleSetEvaluator, projection);\n    }\n\n    // tslint:disable:no-unused-variable\n    getTileInfo(\n        data: ArrayBufferLike,\n        tileKey: TileKey,\n        projection: Projection\n    ): Promise<TileInfo | undefined> {\n        return Promise.resolve(undefined);\n    }\n    // tslint:disable:no-unused-variable\n\n    configure(\n        styleSet?: StyleSet,\n        definitions?: Definitions,\n        languages?: string[],\n        options?: OptionsMap\n    ): void {\n        if (styleSet !== undefined) {\n            this.m_styleSetEvaluator = new StyleSetEvaluator(styleSet, definitions);\n        }\n        if (languages !== undefined) {\n            this.languages = languages;\n        }\n        if (options !== undefined && options.storageLevelOffset !== undefined) {\n            this.m_storageLevelOffset = options.storageLevelOffset;\n        }\n    }\n\n    /**\n     * Create a [[DecodedTile]] from binary tile data and a theme description in form of a\n     * [[StyleSetEvaluator]].\n     *\n     * @param data Binary data in form of [[ArrayBufferLike]], or any object.\n     * @param tileKey Quadtree address of tile.\n     * @param styleSetEvaluator Processor of [[Theme]], identifies styling techniques applicable to\n     *      individual objects.\n     * @param projection Projection used by the individual data sources.\n     */\n    abstract decodeThemedTile(\n        data: ArrayBufferLike | {},\n        tileKey: TileKey,\n        styleSetEvaluator: StyleSetEvaluator,\n        projection: Projection\n    ): Promise<DecodedTile>;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { LoggerManager } from \"@here/harp-utils\";\n\nimport {\n    BooleanLiteralExpr,\n    CallExpr,\n    CaseExpr,\n    Env,\n    Expr,\n    ExprScope,\n    ExprVisitor,\n    HasAttributeExpr,\n    isJsonExpr,\n    JsonExpr,\n    LiteralExpr,\n    MatchExpr,\n    NullLiteralExpr,\n    NumberLiteralExpr,\n    ObjectLiteralExpr,\n    StringLiteralExpr,\n    Value,\n    VarExpr\n} from \"./Expr\";\nimport { ExprPool } from \"./ExprPool\";\nimport {\n    interpolatedPropertyDefinitionToJsonExpr,\n    isInterpolatedPropertyDefinition\n} from \"./InterpolatedPropertyDefs\";\nimport { AttrScope, mergeTechniqueDescriptor } from \"./TechniqueDescriptor\";\nimport { IndexedTechnique, Technique, techniqueDescriptors } from \"./Techniques\";\nimport {\n    Definitions,\n    isActualSelectorDefinition,\n    isJsonExprReference,\n    LineStyle,\n    Style,\n    StyleDeclaration,\n    StyleSelector,\n    StyleSet\n} from \"./Theme\";\n\nconst logger = LoggerManager.instance.create(\"StyleSetEvaluator\");\n\nconst emptyTechniqueDescriptor = mergeTechniqueDescriptor<Technique>({});\n\ninterface StyleInternalParams {\n    /**\n     * Optimization: Lazy creation and storage of expression in a style object.\n     */\n    _whenExpr?: Expr;\n    _minZoomLevelExpr?: Expr;\n    _maxZoomLevelExpr?: Expr;\n\n    _staticAttributes?: Array<[string, Value]>;\n\n    /**\n     * These attributes are used to instantiate Technique variants.\n     *\n     * @see [[TechiqueDescriptor.techniquePropNames]]\n     */\n    _dynamicTechniqueAttributes?: Array<[string, Expr]>;\n\n    /**\n     * These attributes must be evaluated basing with feature env.\n     *\n     * They are not propagated to rendering scope.\n     *\n     * @see [[TechniqueAttrScope.Feature]]\n     */\n    _dynamicFeatureAttributes?: Array<[string, Expr]>;\n\n    /**\n     * These attributes are forwarded as serialized by decoder to main thread, so they are resolved\n     * directly in render loop.\n     *\n     * Will contain attributes from these lists\n     *  - interpolants from [[TechiqueDescriptor.techniquePropNames]]\n     *  - expressions [[TechniqueDescriptor.dynamicPropNames]] (Future)\n     */\n    _dynamicForwardedAttributes?: Array<[string, Expr]>;\n    _dynamicTechniques?: Map<string, IndexedTechnique>;\n\n    /**\n     * Optimization: Index into table in StyleSetEvaluator.\n     * @hidden\n     */\n    _staticTechnique?: IndexedTechnique;\n\n    /**\n     * Optimization: StyleSet index.\n     * @hidden\n     */\n    _styleSetIndex?: number;\n\n    /**\n     * Optimization: Requested $geometryType.\n     * @hidden\n     */\n    _geometryType?: string;\n\n    /**\n     * `true` if any of the properties of this technique\n     * requires access to the feature's state.\n     */\n    _usesFeatureState?: boolean;\n}\n\ntype InternalStyle = Style & StyleSelector & StyleInternalParams;\n\n/**\n * [[StyleConditionClassifier]] searches for usages of `$layer` in `when` conditions\n * associated with styling rules.\n *\n * @hidden\n */\nclass StyleConditionClassifier implements ExprVisitor<Expr | undefined, Expr | undefined> {\n    private _style!: InternalStyle;\n\n    classify(style: InternalStyle) {\n        if (style._whenExpr) {\n            const savedStyle = this.switchStyle(style);\n            style._whenExpr = style._whenExpr.accept(this, undefined);\n            this._style = savedStyle;\n        }\n    }\n\n    visitNullLiteralExpr(expr: NullLiteralExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitBooleanLiteralExpr(expr: BooleanLiteralExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitNumberLiteralExpr(expr: NumberLiteralExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitStringLiteralExpr(expr: StringLiteralExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitObjectLiteralExpr(expr: ObjectLiteralExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitVarExpr(expr: VarExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitHasAttributeExpr(expr: HasAttributeExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitMatchExpr(expr: MatchExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitCaseExpr(expr: CaseExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitCallExpr(call: CallExpr, enclosingExpr: Expr | undefined): Expr | undefined {\n        if (call.op === \"all\") {\n            // processing of an `[\"all\", e1, e2, ... eN]` expression. In this case\n            // search for expressions matching comparison of `$layer` and string literals\n            // in the sub expressions.\n            const children = call.args\n                .map(childExpr => childExpr.accept(this, call))\n                .filter(childExpr => childExpr !== undefined) as Expr[];\n\n            return new CallExpr(call.op, children);\n        } else if (enclosingExpr) {\n            // `call` is a direct child expression of an `\"all\"` operator.\n            const matched = this.matchVarStringComparison(call);\n\n            if (matched) {\n                if (this._style.layer === undefined && matched.name === \"$layer\") {\n                    // found a subexpression `[\"==\", [\"get\", \"$layer\"], \"some layer name\"]`\n                    // enclosed in an `[\"all\", e1...eN]` expression. Remove it from\n                    // its parent expression and store the value of the expected $layer in\n                    // [[StyleInternalParams]].\n\n                    this._style.layer = matched.value;\n\n                    // return `undefined` to remove this sub expression from its parent.\n                    return undefined;\n                } else if (\n                    this._style._geometryType === undefined &&\n                    matched.name === \"$geometryType\"\n                ) {\n                    // found a subexpression `[\"==\", [\"get\", \"$geometryType\"], \"geometry\"]`\n                    // enclosed in an `[\"all\", e1...eN]` expression. Remove it from\n                    // its parent expression and store the value of the expected $geometryType in\n                    // [[StyleInternalParams]].\n\n                    this._style._geometryType = matched.value;\n\n                    // return `undefined` to remove this sub expression from its parent.\n                    return undefined;\n                }\n            }\n        }\n\n        return call;\n    }\n\n    /**\n     * Tests if the given `call` matches the structure [\"==\", [\"get\", name], value].\n     * If a match is found returns an object containing the `name` and the `value`;\n     *\n     * @param call The expression to match.\n     */\n    private matchVarStringComparison(call: CallExpr) {\n        if (call.op === \"==\") {\n            const left = call.args[0];\n            const right = call.args[1];\n\n            if (left instanceof VarExpr && right instanceof StringLiteralExpr) {\n                return { name: left.name, value: right.value };\n            }\n\n            if (right instanceof VarExpr && left instanceof StringLiteralExpr) {\n                return { name: right.name, value: left.value };\n            }\n        }\n\n        return undefined;\n    }\n\n    /**\n     * Sets the given `style` as current.\n     *\n     * @returns The previous `style`.\n     */\n    private switchStyle(style: InternalStyle) {\n        const saved = this._style;\n        this._style = style;\n        return saved;\n    }\n}\n\nclass OptimizedSubSetKey {\n    key: string;\n    layer: string | undefined;\n    geometryType: string | undefined;\n\n    cachedStyleSet?: InternalStyle[];\n\n    constructor(layer?: string | undefined, geometryType?: string | undefined) {\n        this.key = \"\";\n        this.set(layer, geometryType);\n    }\n\n    set(\n        layer: string | undefined,\n        geometryType: string | undefined,\n        env?: Env\n    ): OptimizedSubSetKey {\n        let keyUpdateNeeded: boolean = false;\n        if (layer === undefined) {\n            const envLayer = env !== undefined ? env.lookup(\"$layer\") : undefined;\n            layer = typeof envLayer === \"string\" ? envLayer : undefined;\n        }\n        if (this.layer !== layer) {\n            this.layer = layer;\n            keyUpdateNeeded = true;\n        }\n\n        if (geometryType === undefined) {\n            const envGeometryType = env !== undefined ? env.lookup(\"$geometryType\") : undefined;\n            geometryType = typeof envGeometryType === \"string\" ? envGeometryType : undefined;\n        }\n        if (this.geometryType !== geometryType) {\n            this.geometryType = geometryType;\n            keyUpdateNeeded = true;\n        }\n\n        if (keyUpdateNeeded) {\n            this.updateKey();\n        }\n        return this;\n    }\n\n    private updateKey() {\n        if (this.layer !== undefined) {\n            // tslint:disable-next-line:prefer-conditional-expression\n            if (this.geometryType !== undefined) {\n                this.key = `${this.layer}:${this.geometryType}`;\n            } else {\n                this.key = `${this.layer}:`;\n            }\n        } else {\n            if (this.geometryType !== undefined) {\n                this.key = `:${this.geometryType}`;\n            } else {\n                this.key = \"all\";\n            }\n        }\n        this.cachedStyleSet = undefined;\n    }\n}\n\n/**\n * Combine data from datasource and apply the rules from a specified theme to show it on the map.\n */\nexport class StyleSetEvaluator {\n    readonly styleSet: InternalStyle[];\n\n    private readonly m_techniques: IndexedTechnique[] = [];\n    private readonly m_exprPool = new ExprPool();\n    private readonly m_cachedResults = new Map<Expr, Value>();\n    private readonly m_styleConditionClassifier = new StyleConditionClassifier();\n    private readonly m_subStyleSetCache = new Map<string, InternalStyle[]>();\n    private readonly m_definitions?: Definitions;\n    private readonly m_definitionExprCache = new Map<string, Expr>();\n    private readonly m_tmpOptimizedSubSetKey: OptimizedSubSetKey = new OptimizedSubSetKey();\n    private readonly m_emptyEnv = new Env();\n    private m_featureDependencies: string[] = [];\n    private m_layer: string | undefined;\n    private m_geometryType: string | undefined;\n    private m_zoomLevel: number | undefined;\n    private m_previousResult: IndexedTechnique[] | undefined;\n    private m_previousEnv: Env | undefined;\n\n    constructor(styleSet: StyleSet, definitions?: Definitions) {\n        this.m_definitions = definitions;\n        this.styleSet = resolveReferences(styleSet, definitions);\n        computeDefaultRenderOrder(this.styleSet);\n        this.compileStyleSet();\n    }\n\n    /**\n     * Find all techniques that fit the current objects' environment.\n     * *The techniques in the resulting array may not be modified* since they are being reused for\n     * identical objects.\n     *\n     * @param env The objects environment, i.e. the attributes that are relevant for its\n     * representation.\n     * @param layer The optional layer name used to filter techniques.\n     * @param geometryType The optional geometryType used to filter techniques.\n     */\n    getMatchingTechniques(\n        env: Env,\n        layer?: string | undefined,\n        geometryType?: string | undefined\n    ): IndexedTechnique[] {\n        if (\n            this.m_previousResult &&\n            this.m_previousEnv &&\n            this.m_featureDependencies.every(p => this.m_previousEnv?.lookup(p) === env.lookup(p))\n        ) {\n            return this.m_previousResult;\n        }\n\n        const result: IndexedTechnique[] = [];\n        this.m_cachedResults.clear();\n\n        const optimizedSubSetKey = this.m_tmpOptimizedSubSetKey;\n        optimizedSubSetKey.set(layer, geometryType, env);\n\n        // get the requested $layer and $geometryType, if any.\n        this.m_layer = optimizedSubSetKey.layer;\n        this.m_geometryType = optimizedSubSetKey.geometryType;\n        this.m_zoomLevel = env.lookup(\"$zoom\") as number | undefined;\n\n        const searchedStyleSet = this.getOptimizedStyleSet(optimizedSubSetKey);\n\n        for (const currStyle of searchedStyleSet) {\n            if (this.processStyle(env, currStyle, result)) {\n                break;\n            }\n        }\n\n        this.m_previousResult = result;\n        this.m_previousEnv = env;\n\n        return result;\n    }\n\n    /**\n     * Check if `styleSet` contains any rule related to `layer`.\n     *\n     * @param layer name of layer\n     */\n    wantsLayer(layer: string): boolean {\n        return (\n            this.getOptimizedStyleSet(this.m_tmpOptimizedSubSetKey.set(layer, undefined)).length > 0\n        );\n    }\n\n    /**\n     * Check if `styleSet` contains any rule related to particular `[layer, geometryType]` pair.\n     *\n     * @param layer name of layer\n     * @param geometryType type of layer - `point`, `line` or `polygon`\n     */\n    wantsFeature(layer: string, geometryType?: string): boolean {\n        return (\n            this.getOptimizedStyleSet(this.m_tmpOptimizedSubSetKey.set(layer, geometryType))\n                .length > 0\n        );\n    }\n\n    /**\n     * Get the expression evaluation cache, for further feature processing.\n     *\n     * This object is valid until next `getMatchingTechniques` call.\n     */\n    get expressionEvaluatorCache() {\n        return this.m_cachedResults;\n    }\n\n    /**\n     * Reset array of techniques.\n     *\n     * Cleans technique array and indices, so it doesn't accumulate accross several decoding runs.\n     */\n    resetTechniques() {\n        for (const techinque of this.m_techniques) {\n            techinque._index = undefined!;\n        }\n        this.m_techniques.length = 0;\n        this.m_previousResult = undefined;\n        this.m_previousEnv = undefined;\n    }\n\n    /**\n     * Get the (current) array of techniques that have been created during decoding.\n     */\n    get techniques(): IndexedTechnique[] {\n        return this.m_techniques;\n    }\n\n    /**\n     * Get the (current) array of techniques that have been created during decoding.\n     */\n    get decodedTechniques(): IndexedTechnique[] {\n        return this.m_techniques.map(makeDecodedTechnique);\n    }\n\n    private getOptimizedStyleSet(subSetKey: OptimizedSubSetKey): InternalStyle[] {\n        if (subSetKey.cachedStyleSet !== undefined) {\n            return subSetKey.cachedStyleSet;\n        }\n        let optimizedStyleSet = this.m_subStyleSetCache.get(subSetKey.key);\n        if (optimizedStyleSet !== undefined) {\n            subSetKey.cachedStyleSet = optimizedStyleSet;\n            return optimizedStyleSet;\n        }\n        optimizedStyleSet = this.createPreFilteredStyleSet(subSetKey);\n        this.m_subStyleSetCache.set(subSetKey.key, optimizedStyleSet);\n        subSetKey.cachedStyleSet = optimizedStyleSet;\n        return optimizedStyleSet;\n    }\n\n    private createPreFilteredStyleSet(subSetKey: OptimizedSubSetKey) {\n        const { layer, geometryType } = subSetKey;\n\n        return this.styleSet.filter(style => {\n            if (layer !== undefined && style.layer !== undefined && style.layer !== layer) {\n                return false;\n            }\n            if (\n                geometryType !== undefined &&\n                style._geometryType !== undefined &&\n                style._geometryType !== geometryType\n            ) {\n                return false;\n            }\n            return true;\n        });\n    }\n\n    /**\n     * Compile the `when` conditions found when traversting the styling rules.\n     */\n    private compileStyleSet() {\n        this.m_featureDependencies = [\"$layer\", \"$geometryType\", \"$zoom\"];\n\n        this.styleSet.forEach(style => this.compileStyle(style));\n\n        // Create optimized styleSets for each `layer` & `geometryType` tuple.\n        this.styleSet.forEach(style => {\n            this.getOptimizedStyleSet(\n                this.m_tmpOptimizedSubSetKey.set(style.layer, style._geometryType)\n            );\n        });\n    }\n\n    /**\n     * Compile the `when` conditions reachable from the given `style`.\n     *\n     * @param style The current style.\n     */\n    private compileStyle(style: InternalStyle) {\n        this.checkStyleDynamicAttributes(style);\n\n        if (style.when !== undefined) {\n            try {\n                style._whenExpr = Array.isArray(style.when)\n                    ? Expr.fromJSON(style.when, this.m_definitions, this.m_definitionExprCache)\n                    : // tslint:disable-next-line: deprecation\n                      Expr.parse(style.when);\n\n                // search for usages of '$layer' and any other\n                // special symbol that can be used to speed up the evaluation\n                // of the `when` conditions associated to this `style`.\n                this.m_styleConditionClassifier.classify(style);\n\n                if (style._whenExpr !== undefined) {\n                    style._whenExpr = style._whenExpr.intern(this.m_exprPool);\n                }\n\n                const deps = style._whenExpr.dependencies();\n\n                deps?.properties.forEach(prop => {\n                    if (!this.m_featureDependencies.includes(prop)) {\n                        this.m_featureDependencies.push(prop);\n                    }\n                });\n\n                if (isJsonExpr(style.minZoomLevel)) {\n                    style._minZoomLevelExpr = Expr.fromJSON(style.minZoomLevel).intern(\n                        this.m_exprPool\n                    );\n                }\n\n                if (isJsonExpr(style.maxZoomLevel)) {\n                    style._maxZoomLevelExpr = Expr.fromJSON(style.maxZoomLevel).intern(\n                        this.m_exprPool\n                    );\n                }\n            } catch (err) {\n                logger.log(\n                    \"failed to evaluate expression\",\n                    JSON.stringify(style.when),\n                    \"error\",\n                    String(err)\n                );\n            }\n        }\n    }\n\n    /**\n     * Process a style (and its sub-styles) hierarchically to look for the technique that fits the\n     * current objects' environment. The attributes of the styles are assembled to create a unique\n     * technique for every object.\n     *\n     * @param env The objects environment, i.e. the attributes that are relevant for its\n     *            representation.\n     * @param style Current style (could also be top of stack).\n     * @param result The array of resulting techniques. There may be more than one technique per\n     *               object, resulting in multiple graphical objects for representation.\n     * @returns `true` if style has been found and processing is finished. `false` if not found, or\n     *          more than one technique should be applied.\n     */\n    private processStyle(env: Env, style: InternalStyle, result: Technique[]): boolean {\n        if (!this.checkZoomLevel(env, style)) {\n            return false;\n        }\n\n        if (\n            this.m_layer !== undefined &&\n            style.layer !== undefined &&\n            style.layer !== this.m_layer\n        ) {\n            return false;\n        }\n        if (\n            this.m_geometryType !== undefined &&\n            style._geometryType !== undefined &&\n            style._geometryType !== this.m_geometryType\n        ) {\n            return false;\n        }\n\n        if (style._whenExpr) {\n            try {\n                if (!style._whenExpr.evaluate(env, ExprScope.Condition, this.m_cachedResults)) {\n                    // Stop processing this styling rule. The `when` condition\n                    // associated with the current `style` evaluates to false so\n                    // no techinque defined by this style should be applied.\n                    return false;\n                }\n            } catch (error) {\n                logger.error(\n                    `failed to evaluate expression '${JSON.stringify(style.when)}': ${error}`\n                );\n                return false;\n            }\n        }\n\n        if (style.technique === undefined) {\n            return false;\n        }\n        // we found a technique!\n        if (style.technique !== \"none\") {\n            result.push(this.getTechniqueForStyleMatch(env, style));\n        }\n        // stop processing if \"final\" is set\n        return style.final === true;\n    }\n\n    private checkZoomLevel(env: Env, style: InternalStyle) {\n        if (style.minZoomLevel === undefined && style.maxZoomLevel === undefined) {\n            return true;\n        }\n\n        const zoomLevel = this.m_zoomLevel;\n        if (zoomLevel === undefined) {\n            return true;\n        }\n\n        if (style.minZoomLevel !== undefined) {\n            let minZoomLevel: Value = style.minZoomLevel;\n\n            if (style._minZoomLevelExpr) {\n                // the constraint is defined as expression, evaluate it and\n                // use its value\n                try {\n                    minZoomLevel = style._minZoomLevelExpr.evaluate(\n                        env,\n                        ExprScope.Condition,\n                        this.m_cachedResults\n                    );\n                } catch (error) {\n                    logger.error(\n                        `failed to evaluate expression '${JSON.stringify(\n                            style._minZoomLevelExpr\n                        )}': ${error}`\n                    );\n                }\n            }\n\n            if (typeof minZoomLevel === \"number\" && zoomLevel < minZoomLevel) {\n                return false;\n            }\n        }\n\n        if (style.maxZoomLevel !== undefined) {\n            let maxZoomLevel: Value = style.maxZoomLevel;\n\n            if (style._maxZoomLevelExpr) {\n                try {\n                    maxZoomLevel = style._maxZoomLevelExpr.evaluate(\n                        env,\n                        ExprScope.Condition,\n                        this.m_cachedResults\n                    );\n                } catch (error) {\n                    logger.error(\n                        `failed to evaluate expression '${JSON.stringify(\n                            style._maxZoomLevelExpr\n                        )}': ${error}`\n                    );\n                }\n            }\n\n            if (typeof maxZoomLevel === \"number\" && zoomLevel > maxZoomLevel) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    private getTechniqueForStyleMatch(env: Env, style: InternalStyle) {\n        let technique: IndexedTechnique | undefined;\n        if (style._dynamicTechniques !== undefined) {\n            const dynamicAttributes = this.evaluateTechniqueProperties(style, env);\n            const key = this.getDynamicTechniqueKey(style, dynamicAttributes);\n            technique = style._dynamicTechniques!.get(key);\n            if (technique === undefined) {\n                technique = this.createTechnique(style, key, dynamicAttributes);\n                style._dynamicTechniques!.set(key, technique);\n            }\n        } else {\n            technique = style._staticTechnique;\n            if (technique === undefined) {\n                style._staticTechnique = technique = this.createTechnique(\n                    style,\n                    `${style._styleSetIndex}`,\n                    []\n                ) as IndexedTechnique;\n            }\n        }\n\n        if (technique._index === undefined) {\n            technique._index = this.m_techniques.length;\n            this.m_techniques.push(technique);\n        }\n        return technique;\n    }\n\n    private getDynamicTechniqueKey(\n        style: InternalStyle,\n        dynamicAttributes: Array<[string, Value]>\n    ) {\n        const dynamicAttrKey = dynamicAttributes\n            .map(([_attrName, attrValue]) => {\n                if (attrValue === undefined) {\n                    return \"U\";\n                } else {\n                    return JSON.stringify(attrValue);\n                }\n            })\n            .join(\":\");\n        return `${style._styleSetIndex!}:${dynamicAttrKey}`;\n    }\n\n    private checkStyleDynamicAttributes(style: InternalStyle) {\n        if (style._dynamicTechniqueAttributes !== undefined || style.technique === \"none\") {\n            return;\n        }\n\n        style._dynamicTechniqueAttributes = [];\n        style._dynamicFeatureAttributes = [];\n        style._dynamicForwardedAttributes = [];\n        style._staticAttributes = [];\n\n        const dynamicFeatureAttributes = style._dynamicFeatureAttributes;\n        const dynamicTechniqueAttributes = style._dynamicTechniqueAttributes;\n        const dynamicForwardedAttributes = style._dynamicForwardedAttributes;\n        const targetStaticAttributes = style._staticAttributes;\n\n        const techniqueDescriptor =\n            techniqueDescriptors[style.technique] || emptyTechniqueDescriptor;\n\n        const processAttribute = (attrName: string, attrValue: Value | JsonExpr | undefined) => {\n            if (attrValue === undefined) {\n                return;\n            }\n\n            if (isJsonExpr(attrValue)) {\n                attrValue = Expr.fromJSON(\n                    attrValue,\n                    this.m_definitions,\n                    this.m_definitionExprCache\n                ).intern(this.m_exprPool);\n            } else if (isInterpolatedPropertyDefinition(attrValue)) {\n                // found a property using an object-like interpolation definition.\n                attrValue = Expr.fromJSON(\n                    interpolatedPropertyDefinitionToJsonExpr(attrValue)\n                ).intern(this.m_exprPool);\n            }\n\n            if (Expr.isExpr(attrValue)) {\n                const deps = attrValue.dependencies();\n\n                if (deps.featureState) {\n                    if (attrName !== \"enabled\") {\n                        logger.log(\"feature-state is not supported in this context\");\n                    } else {\n                        style._usesFeatureState = true;\n                    }\n                }\n\n                if (deps.properties.size === 0 && !attrValue.isDynamic()) {\n                    // no data-dependencies detected.\n                    attrValue = attrValue.evaluate(this.m_emptyEnv);\n                }\n            }\n\n            if (Expr.isExpr(attrValue)) {\n                let attrScope: AttrScope | undefined = (techniqueDescriptor.attrScopes as any)[\n                    attrName as any\n                ];\n\n                if (attrScope === undefined) {\n                    // Use [[AttrScope.TechniqueGeometry]] as default scope for the attribute.\n                    attrScope = AttrScope.TechniqueGeometry;\n                }\n\n                const deps = attrValue.dependencies();\n\n                deps.properties.forEach(prop => {\n                    if (!this.m_featureDependencies.includes(prop)) {\n                        this.m_featureDependencies.push(prop);\n                    }\n                });\n\n                switch (attrScope) {\n                    case AttrScope.FeatureGeometry:\n                        dynamicFeatureAttributes.push([attrName, attrValue]);\n                        break;\n                    case AttrScope.TechniqueGeometry:\n                        dynamicTechniqueAttributes.push([attrName, attrValue]);\n                        break;\n                    case AttrScope.TechniqueRendering:\n                        if (deps.properties.size === 0) {\n                            dynamicForwardedAttributes.push([attrName, attrValue]);\n                        } else {\n                            dynamicTechniqueAttributes.push([attrName, attrValue]);\n                        }\n                        break;\n                }\n            } else if (attrValue !== undefined && attrValue !== null) {\n                targetStaticAttributes.push([attrName, attrValue]);\n            }\n        };\n\n        processAttribute(\"_category\", style.category);\n        processAttribute(\"_secondaryCategory\", (style as LineStyle).secondaryCategory);\n\n        processAttribute(\"renderOrder\", style.renderOrder);\n\n        // TODO: What the heck is that !?\n        processAttribute(\"label\", style.labelProperty);\n\n        // line & solid-line secondaryRenderOrder should be generic attr\n        // TODO: maybe just warn and force move it to `attr` ?\n        processAttribute(\"secondaryRenderOrder\", (style as LineStyle).secondaryRenderOrder);\n\n        if (style.attr !== undefined) {\n            for (const attrName in style.attr) {\n                if (!style.attr.hasOwnProperty(attrName)) {\n                    continue;\n                }\n                processAttribute(attrName, (style.attr as any)[attrName]);\n            }\n        }\n\n        if (dynamicTechniqueAttributes.length > 0) {\n            style._dynamicTechniques = new Map();\n        }\n    }\n\n    private evaluateTechniqueProperties(style: InternalStyle, env: Env): Array<[string, Value]> {\n        if (style._dynamicTechniqueAttributes === undefined) {\n            return [];\n        }\n\n        const instantiationContext = { env };\n\n        return style._dynamicTechniqueAttributes.map(([attrName, attrExpr]) => {\n            try {\n                if (attrExpr.isDynamic()) {\n                    const reducedExpr = attrExpr.instantiate(instantiationContext);\n                    return [attrName, reducedExpr];\n                }\n\n                const evaluatedValue = attrExpr.evaluate(\n                    env,\n                    ExprScope.Value,\n                    this.m_cachedResults\n                );\n                return [attrName, evaluatedValue];\n            } catch (error) {\n                logger.error(`failed to evaluate expression '${attrExpr.toJSON()}': ${error}`);\n                return [attrName, null];\n            }\n        });\n    }\n\n    private createTechnique(\n        style: InternalStyle,\n        key: string,\n        dynamicAttrs: Array<[string, Value]>\n    ) {\n        const technique: any = {};\n        technique.name = style.technique;\n        if (style._staticAttributes !== undefined) {\n            for (const [attrName, attrValue] of style._staticAttributes) {\n                if (attrValue !== null) {\n                    technique[attrName] = attrValue;\n                }\n            }\n        }\n        for (const [attrName, attrValue] of dynamicAttrs) {\n            if (attrValue !== null) {\n                technique[attrName] = attrValue;\n            }\n        }\n\n        if (style._dynamicFeatureAttributes !== undefined) {\n            for (const [attrName, attrValue] of style._dynamicFeatureAttributes) {\n                technique[attrName] = attrValue;\n            }\n        }\n\n        if (style._dynamicForwardedAttributes !== undefined) {\n            for (const [attrName, attrValue] of style._dynamicForwardedAttributes) {\n                technique[attrName] = attrValue;\n            }\n        }\n\n        technique._index = this.m_techniques.length;\n        technique._styleSetIndex = style._styleSetIndex!;\n        if (style.styleSet !== undefined) {\n            technique._styleSet = style.styleSet;\n        }\n        if (style._usesFeatureState !== undefined) {\n            technique._usesFeatureState = style._usesFeatureState;\n        }\n        this.m_techniques.push(technique as IndexedTechnique);\n        return technique as IndexedTechnique;\n    }\n}\n\nfunction computeDefaultRenderOrder(styleSet: InternalStyle[]) {\n    let techniqueRenderOrder = 0;\n    let styleSetIndex = 0;\n    for (const style of styleSet) {\n        style._styleSetIndex = styleSetIndex++;\n        if (style.technique !== undefined && style.renderOrder === undefined) {\n            style.renderOrder = techniqueRenderOrder++;\n        }\n    }\n}\n\nfunction resolveReferences(styleSet: StyleDeclaration[], definitions: Definitions | undefined) {\n    return styleSet.map(style => resolveStyleReferences(style, definitions));\n}\n\nfunction resolveStyleReferences(\n    style: StyleDeclaration,\n    definitions: Definitions | undefined\n): InternalStyle {\n    if (isJsonExpr(style)) {\n        if (!isJsonExprReference(style)) {\n            throw new Error(\"invalid expression in this context, only 'ref's are supported\");\n        }\n        // expand and instantiate references to style definitions.\n        const definitionName = style[1];\n        const def = definitions && definitions[definitionName];\n        if (!def) {\n            throw new Error(`invalid reference '${definitionName}' - not found`);\n        }\n        if (!isActualSelectorDefinition(def)) {\n            throw new Error(`invalid reference '${definitionName}' - expected style definition`);\n        }\n        // instantiate the style\n        return resolveStyleReferences(def, definitions);\n    }\n\n    return { ...style };\n}\n\n/**\n * Create transferable representation of dynamic technique.\n *\n * Converts  non-transferable [[Expr]]instances back to JSON form.\n */\nexport function makeDecodedTechnique(technique: IndexedTechnique): IndexedTechnique {\n    const result: Partial<IndexedTechnique> = {};\n    for (const attrName in technique) {\n        if (!technique.hasOwnProperty(attrName)) {\n            continue;\n        }\n\n        let attrValue: any = (technique as any)[attrName];\n\n        if (\n            typeof attrValue === \"object\" &&\n            (attrValue.isVector2 || attrValue.isVector3 || attrValue.isVector4)\n        ) {\n            attrValue = LiteralExpr.fromValue(attrValue);\n        }\n\n        if (Expr.isExpr(attrValue)) {\n            attrValue = attrValue.toJSON();\n        }\n\n        (result as any)[attrName] = attrValue;\n    }\n    return (result as any) as IndexedTechnique;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    BooleanLiteralExpr,\n    CallExpr,\n    CaseExpr,\n    Expr,\n    ExprVisitor,\n    HasAttributeExpr,\n    MatchExpr,\n    NullLiteralExpr,\n    NumberLiteralExpr,\n    ObjectLiteralExpr,\n    StringLiteralExpr,\n    VarExpr\n} from \"./Expr\";\n\nimport { Value } from \"./Env\";\n\n/**\n * [[ExprPool]] maintains a set of unique interned [[Expr]] objects.\n *\n * @hidden\n */\nexport class ExprPool implements ExprVisitor<Expr, void> {\n    private readonly m_booleanLiterals = new Map<boolean, BooleanLiteralExpr>();\n    private readonly m_numberLiterals = new Map<number, NumberLiteralExpr>();\n    private readonly m_stringLiterals = new Map<string, StringLiteralExpr>();\n    private readonly m_objectLiterals = new Map<object, ObjectLiteralExpr>();\n    private readonly m_arrayLiterals: ObjectLiteralExpr[] = [];\n    private readonly m_varExprs = new Map<string, VarExpr>();\n    private readonly m_hasAttributeExprs = new Map<string, HasAttributeExpr>();\n    private readonly m_matchExprs: MatchExpr[] = [];\n    private readonly m_caseExprs: CaseExpr[] = [];\n    private readonly m_callExprs = new Map<string, CallExpr[]>();\n\n    /**\n     * Add `expr` to this [[ExprPool]] and return a unique [[Expr]]\n     * object that is structurally equivalent to `expr`.\n     *\n     * @param expr The [[Expr]] to add to this [[ExprPool]].\n     * @returns A unique [[Expr]] that is structurally equivalent to `expr`.\n     */\n    add(expr: Expr): Expr {\n        return expr.accept(this, undefined);\n    }\n\n    visitNullLiteralExpr(expr: NullLiteralExpr, context: void): Expr {\n        return NullLiteralExpr.instance;\n    }\n\n    visitBooleanLiteralExpr(expr: BooleanLiteralExpr, context: void): Expr {\n        const e = this.m_booleanLiterals.get(expr.value);\n        if (e) {\n            return e;\n        }\n        this.m_booleanLiterals.set(expr.value, expr);\n        return expr;\n    }\n\n    visitNumberLiteralExpr(expr: NumberLiteralExpr, context: void): Expr {\n        const e = this.m_numberLiterals.get(expr.value);\n        if (e) {\n            return e;\n        }\n        this.m_numberLiterals.set(expr.value, expr);\n        return expr;\n    }\n\n    visitStringLiteralExpr(expr: StringLiteralExpr, context: void): Expr {\n        const e = this.m_stringLiterals.get(expr.value);\n        if (e) {\n            return e;\n        }\n        this.m_stringLiterals.set(expr.value, expr);\n        return expr;\n    }\n\n    visitObjectLiteralExpr(expr: ObjectLiteralExpr, context: void): Expr {\n        const e = this.m_objectLiterals.get(expr.value);\n        if (e) {\n            return e;\n        }\n\n        if (Array.isArray(expr.value)) {\n            const array = expr.value as Value[];\n\n            const r = this.m_arrayLiterals.find(literal => {\n                const elements = literal.value as Value[];\n                if (elements.length !== array.length) {\n                    return false;\n                }\n                return array.every((x, i) => x === elements[i]);\n            });\n\n            if (r !== undefined) {\n                return r;\n            }\n\n            this.m_arrayLiterals.push(expr);\n        }\n\n        this.m_objectLiterals.set(expr.value, expr);\n\n        return expr;\n    }\n\n    visitVarExpr(expr: VarExpr, context: void): Expr {\n        const e = this.m_varExprs.get(expr.name);\n        if (e) {\n            return e;\n        }\n        this.m_varExprs.set(expr.name, expr);\n        return expr;\n    }\n\n    visitHasAttributeExpr(expr: HasAttributeExpr, context: void): Expr {\n        const e = this.m_hasAttributeExprs.get(expr.name);\n        if (e) {\n            return e;\n        }\n        this.m_hasAttributeExprs.set(expr.name, expr);\n        return expr;\n    }\n\n    visitMatchExpr(expr: MatchExpr, context: void): Expr {\n        const value = expr.value.accept(this, context);\n        const branches: typeof expr.branches = expr.branches.map(([label, body]) => [\n            label,\n            body.accept(this, context)\n        ]);\n        const fallback = expr.fallback.accept(this, context);\n        for (const candidate of this.m_matchExprs) {\n            if (candidate.value !== value) {\n                continue;\n            }\n            if (candidate.fallback !== fallback) {\n                continue;\n            }\n            if (candidate.branches.length !== branches.length) {\n                continue;\n            }\n            let branchesMatching = true;\n            for (let i = 0; i < branches.length; i++) {\n                if (\n                    branches[i][0] !== candidate.branches[i][0] ||\n                    branches[i][1] !== candidate.branches[i][1]\n                ) {\n                    branchesMatching = false;\n                    break;\n                }\n            }\n            if (branchesMatching) {\n                return candidate;\n            }\n        }\n        const r = new MatchExpr(value, branches, fallback);\n        this.m_matchExprs.push(r);\n        return r;\n    }\n\n    visitCaseExpr(expr: CaseExpr, context: void): Expr {\n        const branches: typeof expr.branches = expr.branches.map(([condition, body]) => [\n            condition.accept(this, context),\n            body.accept(this, context)\n        ]);\n        const fallback = expr.fallback.accept(this, context);\n\n        for (const candidate of this.m_caseExprs) {\n            if (candidate.fallback !== fallback) {\n                continue;\n            }\n            if (candidate.branches.length !== branches.length) {\n                continue;\n            }\n            let branchesMatching = true;\n            for (let i = 0; i < branches.length; i++) {\n                if (\n                    branches[i][0] !== candidate.branches[i][0] ||\n                    branches[i][1] !== candidate.branches[i][1]\n                ) {\n                    branchesMatching = false;\n                    break;\n                }\n            }\n            if (branchesMatching) {\n                return candidate;\n            }\n        }\n\n        const r = new CaseExpr(branches, fallback);\n        this.m_caseExprs.push(r);\n        return r;\n    }\n\n    visitCallExpr(expr: CallExpr, context: void): Expr {\n        // rewrite the actual arguments\n        const expressions = expr.args.map(childExpr => childExpr.accept(this, context));\n        // ensure we have a valid set of interned expressions for the calls\n        if (!this.m_callExprs.has(expr.op)) {\n            this.m_callExprs.set(expr.op, []);\n        }\n        // get the calls for the given operator.\n        const calls = this.m_callExprs.get(expr.op)!;\n        for (const call of calls) {\n            // check the number of arguments\n            if (call.args.length !== expressions.length) {\n                continue;\n            }\n            // find the index of the first mismatch.\n            let index = 0;\n            for (; index < call.args.length; ++index) {\n                if (call.args[index] !== expressions[index]) {\n                    break;\n                }\n            }\n            if (index === call.args.length) {\n                // no mismatch found, return the 'interned' call.\n                return call;\n            }\n        }\n        const e = new CallExpr(expr.op, expressions);\n        calls.push(e);\n        return e;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Fills an index buffer with the indices for the extruded walls for a polygon contour.\n *\n * @param indexBuffer Index buffer to be filled.\n * @param vertexOffset Starting offset of the vertices composing the contour.\n * @param vertexStride Number of elements per contour vertex.\n * @param contour Vertices that compose the contour.\n * @param contourEdges Collection of booleans indicating if contour edges should be added.\n * @param boundaryWalls If `false`, walls in tile boundaries will not be created.\n *\n */\nexport function addExtrudedWalls(\n    indexBuffer: number[],\n    vertexOffset: number,\n    vertexStride: number,\n    contour: number[],\n    contourEdges?: boolean[],\n    boundaryWalls?: boolean\n): void {\n    // Infer the index buffer's position of the vertices that form the extruded-polygons' walls\n    // by stepping through the contour segment by segment.\n    const nSegments = contour.length / vertexStride;\n    for (let i = 0; i < nSegments; ++i) {\n        const vFootprint0 = vertexOffset + i * 2;\n        const vRoof0 = vFootprint0 + 1;\n        const vFootprint1 = vertexOffset + ((i + 1) % nSegments) * 2;\n        const vRoof1 = vFootprint1 + 1;\n        if (boundaryWalls !== false || contourEdges === undefined) {\n            indexBuffer.push(vFootprint0, vRoof0, vRoof1, vRoof1, vFootprint1, vFootprint0);\n        } else if (contourEdges[i]) {\n            indexBuffer.push(vFootprint0, vRoof0, vRoof1, vRoof1, vFootprint1, vFootprint0);\n        }\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nconst currEdgeStart = new THREE.Vector2();\nconst currEdgeGoal = new THREE.Vector2();\nconst prevEdgeStart = new THREE.Vector2();\nconst prevEdgeGoal = new THREE.Vector2();\n\n/**\n * Fills an index buffer with the indices for the edges of a polygon contour.\n *\n * @param indexBuffer Edge index buffer to be filled.\n * @param vertexOffset Starting offset of the vertices composing the contour.\n * @param vertexStride Number of elements per contour vertex.\n * @param polygonContour Vertices that compose the contour.\n * @param polygonContourEdges Collection of booleans indicating if contour edges should be added.\n */\nexport function addPolygonEdges(\n    indexBuffer: number[],\n    vertexOffset: number,\n    vertexStride: number,\n    polygonContour: number[],\n    polygonContourEdges: boolean[],\n    isExtruded?: boolean,\n    addFootprintEdges?: boolean,\n    wallEdgeSlope?: number\n) {\n    for (let i = 0; i < polygonContourEdges.length; ++i) {\n        if (polygonContourEdges[i]) {\n            if (isExtruded === true) {\n                const vFootprint0 = vertexOffset + i * 2;\n                const vRoof0 = vFootprint0 + 1;\n                const vFootprint1 = vertexOffset + ((i + 1) % polygonContourEdges.length) * 2;\n                const vRoof1 = vFootprint1 + 1;\n\n                if (addFootprintEdges === true) {\n                    indexBuffer.push(vFootprint0, vFootprint1);\n                }\n                indexBuffer.push(vRoof0, vRoof1);\n\n                const prevEdgeIdx = (i === 0 ? polygonContourEdges.length : i) - 1;\n                if (polygonContourEdges[prevEdgeIdx]) {\n                    if (wallEdgeSlope !== undefined) {\n                        const v0x = polygonContour[i * vertexStride];\n                        const v0y = polygonContour[i * vertexStride + 1];\n                        const v1x =\n                            polygonContour[((i + 1) % polygonContourEdges.length) * vertexStride];\n                        const v1y =\n                            polygonContour[\n                                ((i + 1) % polygonContourEdges.length) * vertexStride + 1\n                            ];\n\n                        currEdgeStart.set(v0x, v0y);\n                        currEdgeGoal.set(v1x, v1y);\n                        prevEdgeStart.set(\n                            polygonContour[prevEdgeIdx * vertexStride],\n                            polygonContour[prevEdgeIdx * vertexStride + 1]\n                        );\n                        prevEdgeGoal.set(currEdgeStart.x, currEdgeStart.y);\n\n                        if (\n                            prevEdgeGoal\n                                .sub(prevEdgeStart)\n                                .normalize()\n                                .dot(currEdgeGoal.sub(currEdgeStart).normalize()) <= wallEdgeSlope\n                        ) {\n                            indexBuffer.push(vFootprint0, vRoof0);\n                        }\n                    } else {\n                        indexBuffer.push(vFootprint0, vRoof0);\n                    }\n                }\n            } else {\n                const vFoot0 = vertexOffset + i;\n                const vRoof0 = vertexOffset + ((i + 1) % polygonContourEdges.length);\n                indexBuffer.push(vFoot0, vRoof0);\n            }\n        }\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    BufferAttribute as ThreeBufferAttribute,\n    BufferGeometry as ThreeBufferGeometry,\n    InterleavedBufferAttribute as ThreeInterleavedBufferAttribute,\n    TypedArray\n} from \"three\";\nimport {\n    BufferAttribute,\n    BufferElementType,\n    Geometry,\n    GeometryType,\n    InterleavedBufferAttribute\n} from \"./DecodedTile\";\n\n/**\n * Collection of helper methods to convert\n * {@link https://threejs.org/docs/index.html#api/en/core/BufferGeometry|three.js BufferGeometry}\n * to [[Geometry]] that allows creation and transfering of THREE BufferGeometry in webworkers.\n * See also [[CustomDatasourceExample]].\n */\nexport namespace ThreeBufferUtils {\n    export function getBufferElementType(buffer: TypedArray): BufferElementType {\n        if (buffer instanceof Int8Array) {\n            return \"int8\";\n        } else if (buffer instanceof Uint8Array) {\n            return \"uint8\";\n        } else if (buffer instanceof Int16Array) {\n            return \"int16\";\n        } else if (buffer instanceof Uint16Array) {\n            return \"uint16\";\n        } else if (buffer instanceof Int32Array) {\n            return \"int32\";\n        } else if (buffer instanceof Uint32Array) {\n            return \"uint32\";\n        } else if (buffer instanceof Float32Array) {\n            return \"float\";\n        }\n\n        throw new Error(`Unsupported buffer type ${name}`);\n    }\n\n    export function fromThreeBufferAttribute(\n        bufferAttribute: ThreeBufferAttribute\n    ): BufferAttribute {\n        const buffer = (bufferAttribute.array as any) as TypedArray;\n        return {\n            name: bufferAttribute.name,\n            buffer: buffer.buffer,\n            type: getBufferElementType(buffer),\n            itemCount: bufferAttribute.itemSize,\n            normalized: bufferAttribute.normalized\n        };\n    }\n\n    export function fromThreeInterleavedBufferAttribute(\n        bufferAttribute: ThreeInterleavedBufferAttribute\n    ): InterleavedBufferAttribute {\n        throw new Error(\"Not implemented yet\");\n    }\n\n    export function fromThreeBufferGeometry(\n        bufferGeometry: ThreeBufferGeometry,\n        techniqueIndex: number\n    ): Geometry {\n        const vertexAttributes: BufferAttribute[] = [];\n        const attributeNames = Object.getOwnPropertyNames(bufferGeometry.attributes);\n        for (const name of attributeNames) {\n            const attribute = bufferGeometry.attributes[name];\n            // FIXME: Also support InterleavedBufferAttribute\n            const vertexAttribute = fromThreeBufferAttribute(attribute as ThreeBufferAttribute);\n            vertexAttribute.name = name;\n            vertexAttributes.push(vertexAttribute);\n        }\n        const index =\n            bufferGeometry.index !== null\n                ? fromThreeBufferAttribute(bufferGeometry.index)\n                : undefined;\n\n        let count = 0;\n        if (index !== undefined) {\n            count = bufferGeometry.index === null ? 0 : bufferGeometry.index.count;\n        } else {\n            // If there is no index buffer, try to deduce the count from the position attribute.\n            const posAttr = bufferGeometry.attributes.position as ThreeBufferAttribute;\n            if (posAttr === undefined) {\n                throw new Error(\"Missing position attibute to deduce item count\");\n            }\n            count = posAttr.count;\n        }\n\n        return {\n            type: GeometryType.Unspecified,\n            vertexAttributes,\n            index,\n            groups: [{ start: 0, count, technique: techniqueIndex }]\n        };\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    addBuffersToTransferList,\n    BufferAttribute,\n    getProjection,\n    InterleavedBufferAttribute,\n    ITileDecoder,\n    WorkerDecoderProtocol\n} from \"@here/harp-datasource-protocol\";\nimport { TileKey } from \"@here/harp-geoutils\";\nimport { LoggerManager } from \"@here/harp-utils\";\n\nimport { WorkerService, WorkerServiceResponse } from \"./WorkerService\";\n\nconst logger = LoggerManager.instance.create(\"TileDecoderService\");\n\n/**\n * An extension to [[WorkerService]], the `TileDecoderService` implements an asynchronous\n * (message based) service to decode tile content in web workers. The `TileDecoderService` itself\n * lives in the web worker, and communicates with messages by means of a [[ConcurrentWorkerSet]]\n * with the application.\n *\n * The `TileDecoderService` handles a [[DecodeTileRequest]], which contains a tile and its freshly\n * loaded binary data, decodes the content with the [[ITileDecoder]] that the service is configured\n * to use, and sends the data back in form of a [[WorkerServiceResponse]].\n */\nexport class TileDecoderService extends WorkerService {\n    /**\n     * Start a [[TileDecoderService]] with a given decoder.\n     *\n     * @param serviceId Service id. Must be unique.\n     * @param decoder   [[TileDecoder]] instance.\n     */\n    static start(serviceId: string, decoder: ITileDecoder) {\n        return new TileDecoderService(serviceId, decoder);\n    }\n\n    /**\n     * Set up the `TileDecoderService`. The name of the service must be unique\n     *\n     * @param serviceId Service id. Must be unique.\n     * @param m_decoder Decoder to handle the decoding and info requests.\n     */\n    constructor(readonly serviceId: string, private readonly m_decoder: ITileDecoder) {\n        super(serviceId);\n        this.m_decoder.connect();\n    }\n\n    /**\n     * Handle incoming request messages. Identifies message type and processes the request.\n     *\n     * @param request Message that is either a DecodeTileRequest or a TileInfoRequest.\n     * @returns A promise which resolves to a [[WorkerServiceResponse]].\n     * @override\n     */\n    protected handleRequest(request: any): Promise<WorkerServiceResponse> {\n        if (WorkerDecoderProtocol.isDecodeTileRequest(request)) {\n            return this.handleDecodeTileRequest(request);\n        } else if (WorkerDecoderProtocol.isTileInfoRequest(request)) {\n            return this.handleTileInfoRequest(request);\n        } else {\n            return super.handleRequest(request);\n        }\n    }\n\n    /**\n     * Handle incoming configuration message. Configuration message is passed on to decoder.\n     *\n     * @param request Message of type [[ConfigurationMessage]].\n     * @override\n     */\n    protected handleMessage(message: any) {\n        if (WorkerDecoderProtocol.isConfigurationMessage(message)) {\n            this.handleConfigurationMessage(message);\n        } else {\n            logger.error(`[${this.serviceId}]: invalid message ${message.type}`);\n        }\n    }\n\n    private async handleDecodeTileRequest(\n        request: WorkerDecoderProtocol.DecodeTileRequest\n    ): Promise<WorkerServiceResponse> {\n        const tileKey = TileKey.fromMortonCode(request.tileKey);\n        const projection = getProjection(request.projection);\n\n        const decodedTile = await this.m_decoder.decodeTile(request.data, tileKey, projection);\n\n        const transferList: ArrayBufferLike[] = [];\n\n        const transferBufferAttribute = (\n            attribute?: BufferAttribute | InterleavedBufferAttribute\n        ) => {\n            if (\n                attribute !== undefined &&\n                attribute.buffer.byteLength > 0 &&\n                !transferList.includes(attribute.buffer)\n            ) {\n                transferList.push(attribute.buffer);\n            }\n        };\n\n        decodedTile.geometries.forEach(geom => {\n            geom.vertexAttributes?.forEach(attr => transferBufferAttribute(attr));\n            geom.interleavedVertexAttributes?.forEach(attr => transferBufferAttribute(attr));\n            transferBufferAttribute(geom.index);\n            transferBufferAttribute(geom.edgeIndex);\n\n            if (\n                Array.isArray(geom.objInfos) &&\n                geom.objInfos.length === 1 &&\n                typeof geom.objInfos[0] === \"object\" &&\n                geom.objInfos[0]?.hasOwnProperty(\"displacementMap\")\n            ) {\n                const obj = geom.objInfos[0] as any;\n                transferBufferAttribute(obj.displacementMap);\n            }\n\n            if (Array.isArray(geom.attachments)) {\n                geom.attachments.forEach(attachment => {\n                    transferBufferAttribute(attachment.index);\n                    transferBufferAttribute(attachment.edgeIndex);\n                });\n            }\n        });\n\n        decodedTile.techniques.forEach(technique => {\n            addBuffersToTransferList(technique, transferList);\n        });\n\n        return {\n            response: decodedTile,\n            transferList\n        };\n    }\n\n    private handleTileInfoRequest(\n        request: WorkerDecoderProtocol.TileInfoRequest\n    ): Promise<WorkerServiceResponse> {\n        const tileKey = TileKey.fromMortonCode(request.tileKey);\n        const projection = getProjection(request.projection);\n\n        return this.m_decoder.getTileInfo(request.data, tileKey, projection).then(tileInfo => {\n            const transferList: ArrayBuffer[] =\n                tileInfo !== undefined && tileInfo.transferList !== undefined\n                    ? tileInfo.transferList\n                    : [];\n            return {\n                response: tileInfo,\n                transferList\n            };\n        });\n    }\n\n    private handleConfigurationMessage(message: WorkerDecoderProtocol.ConfigurationMessage) {\n        this.m_decoder.configure(\n            message.styleSet,\n            message.definitions,\n            message.languages,\n            message.options\n        );\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ITiler, WorkerTilerProtocol } from \"@here/harp-datasource-protocol\";\nimport { TileKey } from \"@here/harp-geoutils\";\nimport { GeoJsonTiler } from \"./GeoJsonTiler\";\nimport { WorkerService, WorkerServiceResponse } from \"./WorkerService\";\n\n/**\n * An extension to [[WorkerService]], the `TilerService` implements an asynchronous (message based)\n * service to tile untiled payloads in web workers. The `TilerService` itself lives in the web\n * worker, and communicates with messages by means of a [[ConcurrentWorkerSet]] with the\n * application.\n *\n * The `TilerService` registers tile indices (parent tile to be subdivided) by handling a\n * [[RegisterIndexRequest]], and can later retrieve tiled payloads from through the [[TileRequest]].\n * The data is sent back in form of a [[WorkerServiceResponse]].\n */\nexport class TilerService extends WorkerService {\n    /**\n     * Start a [[TilerService]].\n     *\n     * @param serviceId Service id. Must be unique.\n     */\n    static start(serviceId: string) {\n        return new TilerService(serviceId);\n    }\n    tiler: ITiler = new GeoJsonTiler();\n\n    /**\n     * Set up the `TilerService`. The name of the service must be unique\n     *\n     * @param serviceId Service id. Must be unique.\n     */\n    constructor(readonly serviceId: string) {\n        super(serviceId);\n    }\n\n    /**\n     * Handle incoming request messages. Identifies message type and processes the request.\n     *\n     * @param request [[WorkerTilerProtocol]] request.\n     * @returns A promise which resolves to a [[WorkerServiceResponse]].\n     * @override\n     */\n    protected handleRequest(request: any): Promise<WorkerServiceResponse> {\n        if (WorkerTilerProtocol.isRegisterIndexRequest(request)) {\n            return this.handleRegisterIndexRequest(request);\n        } else if (WorkerTilerProtocol.isUpdateIndexRequest(request)) {\n            return this.handleUpdateIndexRequest(request);\n        } else if (WorkerTilerProtocol.isTileRequest(request)) {\n            return this.handleTileRequest(request);\n        } else {\n            return super.handleRequest(request);\n        }\n    }\n\n    private async handleTileRequest(\n        request: WorkerTilerProtocol.TileRequest\n    ): Promise<WorkerServiceResponse> {\n        const tileKey = TileKey.fromMortonCode(request.tileKey);\n        const tile = await this.tiler.getTile(request.index, tileKey);\n\n        return { response: tile || {} };\n    }\n\n    private async handleRegisterIndexRequest(\n        message: WorkerTilerProtocol.RegisterIndexRequest\n    ): Promise<WorkerServiceResponse> {\n        const input = typeof message.input === \"string\" ? new URL(message.input) : message.input;\n        await this.tiler.registerIndex(message.id, input);\n\n        return { response: {} };\n    }\n\n    private async handleUpdateIndexRequest(\n        message: WorkerTilerProtocol.UpdateIndexRequest\n    ): Promise<WorkerServiceResponse> {\n        const input = typeof message.input === \"string\" ? new URL(message.input) : message.input;\n\n        this.tiler.updateIndex(message.id, input);\n\n        return { response: {} };\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { WorkerServiceProtocol } from \"@here/harp-datasource-protocol\";\nimport { WorkerService, WorkerServiceResponse } from \"./WorkerService\";\n\n/**\n * Factory function that creates [[WorkerService]].\n */\nexport type WorkerServiceFactory = (serviceId: string) => WorkerService;\n\n/**\n * Worker service class definition as needed by [[WorkerServiceManager.register]].\n */\nexport interface WorkerServiceDescriptor {\n    serviceType: string;\n    factory: WorkerServiceFactory;\n}\n\n/**\n * Manages dynamic worker services in Web Worker context.\n *\n * Handles `CreateService` and `DestroyService` messages sent to Web Worker. Singleton (in scope of\n * one worker runtime!), starts automatically with first [[getInstance]] call.\n */\nexport class WorkerServiceManager extends WorkerService {\n    /**\n     * Gets the default instance of `WorkerServiceManager`. Starts the service when first called.\n     */\n    static getInstance() {\n        if (this.m_service === undefined) {\n            this.m_service = new WorkerServiceManager(\n                WorkerServiceProtocol.WORKER_SERVICE_MANAGER_SERVICE_ID\n            );\n        }\n        return this.m_service;\n    }\n\n    /**\n     * Default instance of `WorkerServiceManager`.\n     */\n    private static m_service: WorkerServiceManager;\n\n    /**\n     * Contains all registered service factories indexed by `serviceType`.\n     */\n    private m_factories = new Map<string, WorkerServiceFactory>();\n\n    /**\n     * Contains all managed worker services indexed by their `serviceId`.\n     */\n    private m_services = new Map<string, WorkerService>();\n\n    private constructor(\n        serviceId: string = WorkerServiceProtocol.WORKER_SERVICE_MANAGER_SERVICE_ID\n    ) {\n        super(serviceId);\n    }\n\n    /**\n     * Register [[WorkerService]] class to this manager.\n     *\n     * @param workerServiceDescriptor service type and factory\n     */\n    register(workerServiceDescriptor: WorkerServiceDescriptor): void {\n        this.m_factories.set(workerServiceDescriptor.serviceType, workerServiceDescriptor.factory);\n    }\n\n    /** @override */\n    protected handleRequest(request: any): Promise<WorkerServiceResponse> {\n        if (request.type === WorkerServiceProtocol.Requests.CreateService) {\n            const existingService = this.m_services.get(request.targetServiceId);\n            if (existingService !== undefined) {\n                throw Error(\n                    // tslint:disable-next-line: max-line-length\n                    `error - service with targetServiceId='${request.targetServiceId}' already running, ignoring CreateService request`\n                );\n            }\n\n            const factory = this.m_factories.get(request.targetServiceType);\n\n            if (factory === undefined) {\n                throw Error(`unknown targetServiceType requested: '${request.targetServiceType}'`);\n            }\n\n            const service = factory(request.targetServiceId);\n            this.m_services.set(request.targetServiceId, service);\n        }\n        if (request.type === WorkerServiceProtocol.Requests.DestroyService) {\n            const service = this.m_services.get(request.targetServiceId);\n            if (service === undefined) {\n                throw Error(`unknown targetServiceId '${request.targetServiceId}'`);\n            }\n            service.destroy();\n            this.m_services.delete(request.targetServiceId);\n        }\n\n        return Promise.resolve({\n            response: {}\n        });\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    GeoBox,\n    OrientedBox3,\n    Projection,\n    TileKey,\n    TilingScheme,\n    webMercatorTilingScheme\n} from \"@here/harp-geoutils\";\n\nimport { WorldTileProjectionCookie } from \"./OmvUtils\";\n\nimport * as THREE from \"three\";\n\nexport class DecodeInfo {\n    /**\n     * The [[GeoBox]] of the Tile to decode.\n     */\n    readonly geoBox: GeoBox;\n\n    readonly projectedBoundingBox = new OrientedBox3();\n\n    /**\n     * The tile bounds in the OMV tile space [[webMercatorTilingScheme]].\n     */\n    readonly tileBounds = new THREE.Box3();\n\n    /**\n     * The tile size in the OMV tile space [[webMercatorTilingScheme]].\n     */\n    readonly tileSize = new THREE.Vector3();\n\n    /**\n     * The center of the Tile in the target [[Projection]] space.\n     * Geometries generated by decoding the OMV tile must be relative\n     * to this position.\n     */\n    readonly center = new THREE.Vector3();\n\n    /**\n     * @internal\n     */\n    worldTileProjectionCookie?: WorldTileProjectionCookie;\n\n    /**\n     * Estimated tile size in pixels.\n     */\n    readonly tileSizeOnScreen: number;\n\n    /**\n     * Constructs a new [[DecodeInfo]].\n     *\n     * @param adapterId The id of the [[OmvDataAdapter]] used for decoding.\n     * @param targetProjection The [[Projection]]\n     * @param tileKey The [[TileKey]] of the Tile to decode.\n     * @param storageLevelOffset The storage level offset.\n     */\n    constructor(\n        readonly adapterId: string,\n        readonly targetProjection: Projection,\n        readonly tileKey: TileKey,\n        readonly storageLevelOffset: number = 0\n    ) {\n        this.geoBox = this.tilingScheme.getGeoBox(tileKey);\n        this.targetProjection.projectBox(this.geoBox, this.projectedBoundingBox);\n        this.projectedBoundingBox.getCenter(this.center);\n        this.tilingScheme.getWorldBox(tileKey, this.tileBounds);\n        this.tileBounds.getSize(this.tileSize);\n        this.tileSizeOnScreen = 256 * Math.pow(2, -this.storageLevelOffset);\n    }\n\n    /**\n     * The [[TilingScheme]] of the OMV data, currenly it is defined\n     * to be [[webMercatorTilingScheme]].\n     */\n    get tilingScheme(): TilingScheme {\n        return webMercatorTilingScheme;\n    }\n\n    /**\n     * The [[Projection]] of OMV tiled data, currenly it is defined\n     * to be [[webMercatorProjection]].\n     */\n    get sourceProjection(): Projection {\n        return this.tilingScheme.projection;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Env, MapEnv, Value, ValueMap } from \"@here/harp-datasource-protocol/index-decoder\";\nimport { TileKey } from \"@here/harp-geoutils\";\nimport { ILogger } from \"@here/harp-utils\";\nimport * as Long from \"long\";\nimport { Vector2 } from \"three\";\nimport { DecodeInfo } from \"./DecodeInfo\";\nimport { IGeometryProcessor, ILineGeometry, IPolygonGeometry } from \"./IGeometryProcessor\";\nimport { OmvFeatureFilter } from \"./OmvDataFilter\";\nimport { OmvDataAdapter } from \"./OmvDecoder\";\nimport { OmvGeometryType } from \"./OmvDecoderDefs\";\nimport { isArrayBufferLike } from \"./OmvUtils\";\nimport { com } from \"./proto/vector_tile\";\n\n/**\n * @hidden\n */\nexport enum CommandKind {\n    MoveTo = 1,\n    LineTo = 2,\n    ClosePath = 7\n}\n\n/**\n * @hidden\n */\nexport interface BaseCommand {\n    kind: CommandKind;\n}\n\n/**\n * @hidden\n */\nexport interface PositionCommand extends BaseCommand {\n    position: Vector2;\n}\n\n/**\n * @hidden\n */\nexport type GeometryCommand = BaseCommand | PositionCommand;\n\n/**\n * @hidden\n */\nexport function isMoveToCommand(command: GeometryCommand): command is PositionCommand {\n    return command.kind === CommandKind.MoveTo;\n}\n\n/**\n * @hidden\n */\nexport function isLineToCommand(command: GeometryCommand): command is PositionCommand {\n    return command.kind === CommandKind.LineTo;\n}\n\n/**\n * @hidden\n */\nexport function isClosePathCommand(command: GeometryCommand): command is PositionCommand {\n    return command.kind === CommandKind.ClosePath;\n}\n\n/**\n * @hidden\n */\nexport interface OmvVisitor {\n    visitLayer?(layer: com.mapbox.pb.Tile.ILayer): boolean;\n    endVisitLayer?(layer: com.mapbox.pb.Tile.ILayer): void;\n    visitPointFeature?(feature: com.mapbox.pb.Tile.IFeature): void;\n    visitLineFeature?(feature: com.mapbox.pb.Tile.IFeature): void;\n    visitPolygonFeature?(feature: com.mapbox.pb.Tile.IFeature): void;\n}\n\n/**\n * @hidden\n */\nexport function visitOmv(vectorTile: com.mapbox.pb.Tile, visitor: OmvVisitor) {\n    if (!vectorTile.layers) {\n        return;\n    }\n\n    for (const layer of vectorTile.layers) {\n        if (!visitor.visitLayer || visitor.visitLayer(layer)) {\n            visitOmvLayer(layer, visitor);\n        }\n        if (visitor.endVisitLayer) {\n            visitor.endVisitLayer(layer);\n        }\n    }\n}\n\n/**\n * @hidden\n */\nexport function visitOmvLayer(layer: com.mapbox.pb.Tile.ILayer, visitor: OmvVisitor) {\n    if (!visitor.visitLayer || visitor.visitLayer(layer)) {\n        if (layer.features) {\n            for (const feature of layer.features) {\n                switch (feature.type) {\n                    case com.mapbox.pb.Tile.GeomType.UNKNOWN:\n                        break;\n\n                    case com.mapbox.pb.Tile.GeomType.POINT:\n                        if (visitor.visitPointFeature) {\n                            visitor.visitPointFeature(feature);\n                        }\n                        break;\n\n                    case com.mapbox.pb.Tile.GeomType.LINESTRING:\n                        if (visitor.visitLineFeature) {\n                            visitor.visitLineFeature(feature);\n                        }\n                        break;\n\n                    case com.mapbox.pb.Tile.GeomType.POLYGON:\n                        if (visitor.visitPolygonFeature) {\n                            visitor.visitPolygonFeature(feature);\n                        }\n                        break;\n                }\n            }\n        }\n    }\n\n    if (visitor.endVisitLayer) {\n        visitor.endVisitLayer(layer);\n    }\n}\n\n/**\n * @hidden\n */\nexport interface FeatureAttributesVisitor {\n    visitAttribute(name: string, value: com.mapbox.pb.Tile.IValue): boolean;\n}\n\n/**\n * @hidden\n */\nexport class FeatureAttributes {\n    accept(\n        layer: com.mapbox.pb.Tile.ILayer,\n        feature: com.mapbox.pb.Tile.IFeature,\n        visitor: FeatureAttributesVisitor\n    ): void {\n        const { keys, values } = layer;\n        const tags = feature.tags;\n\n        if (!tags || !keys || !values) {\n            return;\n        }\n\n        for (let i = 0; i < tags.length; i += 2) {\n            const key = keys[tags[i]];\n            const value = values[tags[i + 1]];\n            if (!visitor.visitAttribute(key, value)) {\n                break;\n            }\n        }\n    }\n}\n\n/**\n * @hidden\n */\nexport interface GeometryCommandsVisitor {\n    type: \"Point\" | \"Line\" | \"Polygon\";\n    visitCommand(command: GeometryCommand): void;\n}\n\n/**\n * @hidden\n */\nexport class GeometryCommands {\n    accept(geometry: number[] | null, visitor: GeometryCommandsVisitor) {\n        if (!geometry) {\n            return;\n        }\n\n        const geometryCount = geometry.length;\n\n        let currX = 0;\n        let currY = 0;\n\n        const xCoords: number[] = [];\n        const yCoords: number[] = [];\n        const commands: GeometryCommand[] = [];\n        for (let cmdIndex = 0; cmdIndex < geometryCount; ) {\n            // tslint:disable:no-bitwise\n            const kind = (geometry[cmdIndex] & 0x7) as CommandKind;\n            const count = geometry[cmdIndex] >> 0x3;\n            // tslint:enable:no-bitwise\n            ++cmdIndex;\n\n            if (kind === CommandKind.MoveTo || kind === CommandKind.LineTo) {\n                for (let n = 0; n < count; ++n) {\n                    const xx = geometry[cmdIndex++];\n                    const yy = geometry[cmdIndex++];\n\n                    // tslint:disable:no-bitwise\n                    currX += (xx >> 1) ^ -(xx & 1);\n                    currY += (yy >> 1) ^ -(yy & 1);\n                    if (visitor.type === \"Polygon\") {\n                        xCoords.push(currX);\n                        yCoords.push(currY);\n                    }\n\n                    const position = new Vector2(currX, currY);\n                    commands.push({ kind, position });\n                }\n            } else {\n                for (const command of commands) {\n                    visitor.visitCommand(command);\n                }\n                visitor.visitCommand({ kind });\n                xCoords.length = 0;\n                yCoords.length = 0;\n                commands.length = 0;\n            }\n        }\n\n        if (commands.length > 0) {\n            for (const command of commands) {\n                visitor.visitCommand(command);\n            }\n        }\n    }\n}\n\nconst propertyCategories = [\n    \"stringValue\",\n    \"floatValue\",\n    \"doubleValue\",\n    \"intValue\",\n    \"uintValue\",\n    \"sintValue\",\n    \"boolValue\"\n];\n\nfunction simplifiedValue(value: com.mapbox.pb.Tile.IValue): Value {\n    const hasOwnProperty = Object.prototype.hasOwnProperty;\n\n    for (const category of propertyCategories) {\n        if (hasOwnProperty.call(value, category)) {\n            const v = value[category as keyof com.mapbox.pb.Tile.IValue];\n\n            if (v === undefined) {\n                throw new Error(\"unpexted undefined value\");\n            }\n\n            return Long.isLong(v) ? (v as any).toNumber() : v;\n        }\n    }\n\n    throw new Error(\"not happening\");\n}\n\nfunction replaceReservedName(name: string): string {\n    switch (name) {\n        case \"id\":\n            return \"$id\";\n        default:\n            return name;\n    } // switch\n}\n\nfunction decodeFeatureId(\n    feature: com.mapbox.pb.Tile.IFeature,\n    logger?: ILogger\n): number | string | undefined {\n    if (feature.hasOwnProperty(\"id\")) {\n        const id = feature.id;\n        if (typeof id === \"number\") {\n            return id;\n        } else if (id) {\n            if (logger !== undefined && id.greaterThan(Number.MAX_SAFE_INTEGER)) {\n                logger.error(\n                    \"Invalid ID: Larger than largest available Number in feature: \",\n                    feature\n                );\n            }\n            return id.toNumber();\n        }\n    }\n\n    return undefined;\n}\n\nfunction readAttributes(\n    layer: com.mapbox.pb.Tile.ILayer,\n    feature: com.mapbox.pb.Tile.IFeature,\n    defaultAttributes: ValueMap = {}\n): ValueMap {\n    const attrs = new FeatureAttributes();\n\n    const attributes: ValueMap = defaultAttributes || {};\n\n    attrs.accept(layer, feature, {\n        visitAttribute: (name, value) => {\n            attributes[replaceReservedName(name)] = simplifiedValue(value);\n            return true;\n        }\n    });\n\n    return attributes;\n}\n\nfunction createFeatureEnv(\n    layer: com.mapbox.pb.Tile.ILayer,\n    feature: com.mapbox.pb.Tile.IFeature,\n    geometryType: string,\n    storageLevel: number,\n    storageLevelOffset?: number,\n    logger?: ILogger,\n    parent?: Env\n): MapEnv {\n    const attributes: ValueMap = {\n        $layer: layer.name,\n        $level: storageLevel,\n        $zoom: Math.max(0, storageLevel - (storageLevelOffset || 0)),\n        $geometryType: geometryType\n    };\n\n    // Some sources serve `id` directly as `IFeature` property ...\n    const featureId = decodeFeatureId(feature, logger);\n    if (featureId !== undefined) {\n        attributes.$id = featureId;\n    }\n\n    readAttributes(layer, feature, attributes);\n\n    return new MapEnv(attributes, parent);\n}\n\nfunction asGeometryType(feature: com.mapbox.pb.Tile.IFeature | undefined): OmvGeometryType {\n    if (feature === undefined) {\n        return OmvGeometryType.UNKNOWN;\n    }\n\n    switch (feature.type) {\n        case com.mapbox.pb.Tile.GeomType.UNKNOWN:\n            return OmvGeometryType.UNKNOWN;\n        case com.mapbox.pb.Tile.GeomType.POINT:\n            return OmvGeometryType.POINT;\n        case com.mapbox.pb.Tile.GeomType.LINESTRING:\n            return OmvGeometryType.LINESTRING;\n        case com.mapbox.pb.Tile.GeomType.POLYGON:\n            return OmvGeometryType.POLYGON;\n        default:\n            return OmvGeometryType.UNKNOWN;\n    } // switch\n}\n\n/**\n * The class [[OmvProtobufDataAdapter]] converts OMV protobuf geo data\n * to geometries for the given [[IGeometryProcessor]].\n */\nexport class OmvProtobufDataAdapter implements OmvDataAdapter, OmvVisitor {\n    id = \"omv-protobuf\";\n\n    private readonly m_geometryCommands = new GeometryCommands();\n    private readonly m_processor: IGeometryProcessor;\n    private readonly m_logger?: ILogger;\n    private m_dataFilter?: OmvFeatureFilter;\n\n    private m_tileKey!: TileKey;\n    private m_layer!: com.mapbox.pb.Tile.ILayer;\n\n    /**\n     * Constructs a new [[OmvProtobufDataAdapter]].\n     *\n     * @param processor The [[IGeometryProcessor]] used to process the data.\n     * @param dataFilter The [[OmvFeatureFilter]] used to filter features.\n     * @param logger The [[ILogger]] used to log diagnostic messages.\n     */\n    constructor(processor: IGeometryProcessor, dataFilter?: OmvFeatureFilter, logger?: ILogger) {\n        this.m_processor = processor;\n        this.m_dataFilter = dataFilter;\n        this.m_logger = logger;\n    }\n\n    /**\n     * The [[OmvFeatureFilter]] used to filter features.\n     */\n    get dataFilter(): OmvFeatureFilter | undefined {\n        return this.m_dataFilter;\n    }\n\n    /**\n     * The [[OmvFeatureFilter]] used to filter features.\n     */\n    set dataFilter(dataFilter: OmvFeatureFilter | undefined) {\n        this.m_dataFilter = dataFilter;\n    }\n\n    /**\n     * Checks that the given data can be processed by this [[OmvProtobufDataAdapter]].\n     */\n    canProcess(data: ArrayBufferLike | {}): boolean {\n        return isArrayBufferLike(data);\n    }\n\n    /**\n     * Processes the given data payload using this adapter's [[IGeometryProcessor]].\n     *\n     * @param data The data payload to process.\n     * @param decodeInfo The [[DecodedInfo]] of the tile to proceess.\n     */\n    process(data: ArrayBufferLike, decodeInfo: DecodeInfo) {\n        const { tileKey } = decodeInfo;\n        const payload = new Uint8Array(data);\n        const proto = com.mapbox.pb.Tile.decode(payload);\n\n        this.m_tileKey = tileKey;\n\n        visitOmv(proto, this);\n    }\n\n    /**\n     * Visits the OMV layer.\n     *\n     * @param layer The OMV layer to process.\n     */\n    visitLayer(layer: com.mapbox.pb.Tile.ILayer): boolean {\n        this.m_layer = layer;\n\n        const storageLevel = this.m_tileKey.level;\n        const layerName = layer.name;\n\n        if (\n            this.m_dataFilter !== undefined &&\n            !this.m_dataFilter.wantsLayer(layerName, storageLevel)\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Visits point features.\n     *\n     * @param feature The OMV point features to process.\n     */\n    visitPointFeature(feature: com.mapbox.pb.Tile.IFeature): void {\n        if (feature.geometry === undefined) {\n            return;\n        }\n\n        const storageLevel = this.m_tileKey.level;\n        const layerName = this.m_layer.name;\n        const layerExtents = this.m_layer.extent || 4096;\n\n        if (\n            this.m_dataFilter !== undefined &&\n            !this.m_dataFilter.wantsPointFeature(layerName, asGeometryType(feature), storageLevel)\n        ) {\n            return;\n        }\n\n        const geometry: Vector2[] = [];\n        this.m_geometryCommands.accept(feature.geometry, {\n            type: \"Point\",\n            visitCommand: command => {\n                if (isMoveToCommand(command)) {\n                    geometry.push(command.position);\n                }\n            }\n        });\n\n        if (geometry.length === 0) {\n            return;\n        }\n\n        const env = createFeatureEnv(\n            this.m_layer,\n            feature,\n            \"point\",\n            storageLevel,\n            this.m_processor.storageLevelOffset,\n            this.m_logger\n        );\n\n        this.m_processor.processPointFeature(layerName, layerExtents, geometry, env, storageLevel);\n    }\n\n    /**\n     * Visits the line features.\n     *\n     * @param feature The line features to process.\n     */\n    visitLineFeature(feature: com.mapbox.pb.Tile.IFeature): void {\n        if (feature.geometry === undefined) {\n            return;\n        }\n\n        const storageLevel = this.m_tileKey.level;\n        const layerName = this.m_layer.name;\n        const layerExtents = this.m_layer.extent || 4096;\n\n        if (\n            this.m_dataFilter !== undefined &&\n            !this.m_dataFilter.wantsLineFeature(layerName, asGeometryType(feature), storageLevel)\n        ) {\n            return;\n        }\n\n        const geometry: ILineGeometry[] = [];\n        let positions: Vector2[];\n        this.m_geometryCommands.accept(feature.geometry, {\n            type: \"Line\",\n            visitCommand: command => {\n                if (isMoveToCommand(command)) {\n                    positions = [command.position];\n                    geometry.push({ positions });\n                } else if (isLineToCommand(command)) {\n                    positions.push(command.position);\n                }\n            }\n        });\n\n        if (geometry.length === 0) {\n            return;\n        }\n\n        const env = createFeatureEnv(\n            this.m_layer,\n            feature,\n            \"line\",\n            storageLevel,\n            this.m_processor.storageLevelOffset,\n            this.m_logger\n        );\n\n        this.m_processor.processLineFeature(layerName, layerExtents, geometry, env, storageLevel);\n    }\n\n    /**\n     * Visits the polygon features.\n     *\n     * @param feature The polygon features to process.\n     */\n    visitPolygonFeature(feature: com.mapbox.pb.Tile.IFeature): void {\n        if (feature.geometry === undefined) {\n            return;\n        }\n\n        const storageLevel = this.m_tileKey.level;\n        const layerName = this.m_layer.name;\n        const layerExtents = this.m_layer.extent || 4096;\n\n        if (\n            this.m_dataFilter !== undefined &&\n            !this.m_dataFilter.wantsPolygonFeature(layerName, asGeometryType(feature), storageLevel)\n        ) {\n            return;\n        }\n\n        const geometry: IPolygonGeometry[] = [];\n        const currentPolygon: IPolygonGeometry = { rings: [] };\n        let currentRing: Vector2[];\n        this.m_geometryCommands.accept(feature.geometry, {\n            type: \"Polygon\",\n            visitCommand: command => {\n                if (isMoveToCommand(command)) {\n                    currentRing = [command.position];\n                } else if (isLineToCommand(command)) {\n                    currentRing.push(command.position);\n                } else if (isClosePathCommand(command)) {\n                    currentPolygon.rings.push(currentRing);\n                }\n            }\n        });\n\n        if (currentPolygon.rings.length > 0) {\n            geometry.push(currentPolygon);\n        }\n\n        if (geometry.length === 0) {\n            return;\n        }\n\n        const env = createFeatureEnv(\n            this.m_layer,\n            feature,\n            \"polygon\",\n            storageLevel,\n            this.m_processor.storageLevelOffset,\n            this.m_logger\n        );\n\n        this.m_processor.processPolygonFeature(\n            layerName,\n            layerExtents,\n            geometry,\n            env,\n            storageLevel\n        );\n    }\n}\n","module.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n","/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.com = (function() {\n\n    /**\n     * Namespace com.\n     * @exports com\n     * @namespace\n     */\n    var com = {};\n\n    com.mapbox = (function() {\n\n        /**\n         * Namespace mapbox.\n         * @memberof com\n         * @namespace\n         */\n        var mapbox = {};\n\n        mapbox.pb = (function() {\n\n            /**\n             * Namespace pb.\n             * @memberof com.mapbox\n             * @namespace\n             */\n            var pb = {};\n\n            pb.Tile = (function() {\n\n                /**\n                 * Properties of a Tile.\n                 * @memberof com.mapbox.pb\n                 * @interface ITile\n                 * @property {Array.<com.mapbox.pb.Tile.ILayer>|null} [layers] Tile layers\n                 */\n\n                /**\n                 * Constructs a new Tile.\n                 * @memberof com.mapbox.pb\n                 * @classdesc Represents a Tile.\n                 * @implements ITile\n                 * @constructor\n                 * @param {com.mapbox.pb.ITile=} [properties] Properties to set\n                 */\n                function Tile(properties) {\n                    this.layers = [];\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * Tile layers.\n                 * @member {Array.<com.mapbox.pb.Tile.ILayer>} layers\n                 * @memberof com.mapbox.pb.Tile\n                 * @instance\n                 */\n                Tile.prototype.layers = $util.emptyArray;\n\n                /**\n                 * Decodes a Tile message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof com.mapbox.pb.Tile\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {com.mapbox.pb.Tile} Tile\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                Tile.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.mapbox.pb.Tile();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 3:\n                            if (!(message.layers && message.layers.length))\n                                message.layers = [];\n                            message.layers.push($root.com.mapbox.pb.Tile.Layer.decode(reader, reader.uint32()));\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes a Tile message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof com.mapbox.pb.Tile\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {com.mapbox.pb.Tile} Tile\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                Tile.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Creates a Tile message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof com.mapbox.pb.Tile\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {com.mapbox.pb.Tile} Tile\n                 */\n                Tile.fromObject = function fromObject(object) {\n                    if (object instanceof $root.com.mapbox.pb.Tile)\n                        return object;\n                    var message = new $root.com.mapbox.pb.Tile();\n                    if (object.layers) {\n                        if (!Array.isArray(object.layers))\n                            throw TypeError(\".com.mapbox.pb.Tile.layers: array expected\");\n                        message.layers = [];\n                        for (var i = 0; i < object.layers.length; ++i) {\n                            if (typeof object.layers[i] !== \"object\")\n                                throw TypeError(\".com.mapbox.pb.Tile.layers: object expected\");\n                            message.layers[i] = $root.com.mapbox.pb.Tile.Layer.fromObject(object.layers[i]);\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from a Tile message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof com.mapbox.pb.Tile\n                 * @static\n                 * @param {com.mapbox.pb.Tile} message Tile\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                Tile.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.arrays || options.defaults)\n                        object.layers = [];\n                    if (message.layers && message.layers.length) {\n                        object.layers = [];\n                        for (var j = 0; j < message.layers.length; ++j)\n                            object.layers[j] = $root.com.mapbox.pb.Tile.Layer.toObject(message.layers[j], options);\n                    }\n                    return object;\n                };\n\n                /**\n                 * Converts this Tile to JSON.\n                 * @function toJSON\n                 * @memberof com.mapbox.pb.Tile\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                Tile.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                /**\n                 * GeomType enum.\n                 * @name com.mapbox.pb.Tile.GeomType\n                 * @enum {string}\n                 * @property {number} UNKNOWN=0 UNKNOWN value\n                 * @property {number} POINT=1 POINT value\n                 * @property {number} LINESTRING=2 LINESTRING value\n                 * @property {number} POLYGON=3 POLYGON value\n                 */\n                Tile.GeomType = (function() {\n                    var valuesById = {}, values = Object.create(valuesById);\n                    values[valuesById[0] = \"UNKNOWN\"] = 0;\n                    values[valuesById[1] = \"POINT\"] = 1;\n                    values[valuesById[2] = \"LINESTRING\"] = 2;\n                    values[valuesById[3] = \"POLYGON\"] = 3;\n                    return values;\n                })();\n\n                Tile.Value = (function() {\n\n                    /**\n                     * Properties of a Value.\n                     * @memberof com.mapbox.pb.Tile\n                     * @interface IValue\n                     * @property {string|null} [stringValue] Value stringValue\n                     * @property {number|null} [floatValue] Value floatValue\n                     * @property {number|null} [doubleValue] Value doubleValue\n                     * @property {number|Long|null} [intValue] Value intValue\n                     * @property {number|Long|null} [uintValue] Value uintValue\n                     * @property {number|Long|null} [sintValue] Value sintValue\n                     * @property {boolean|null} [boolValue] Value boolValue\n                     */\n\n                    /**\n                     * Constructs a new Value.\n                     * @memberof com.mapbox.pb.Tile\n                     * @classdesc Represents a Value.\n                     * @implements IValue\n                     * @constructor\n                     * @param {com.mapbox.pb.Tile.IValue=} [properties] Properties to set\n                     */\n                    function Value(properties) {\n                        if (properties)\n                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                if (properties[keys[i]] != null)\n                                    this[keys[i]] = properties[keys[i]];\n                    }\n\n                    /**\n                     * Value stringValue.\n                     * @member {string} stringValue\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @instance\n                     */\n                    Value.prototype.stringValue = \"\";\n\n                    /**\n                     * Value floatValue.\n                     * @member {number} floatValue\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @instance\n                     */\n                    Value.prototype.floatValue = 0;\n\n                    /**\n                     * Value doubleValue.\n                     * @member {number} doubleValue\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @instance\n                     */\n                    Value.prototype.doubleValue = 0;\n\n                    /**\n                     * Value intValue.\n                     * @member {number|Long} intValue\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @instance\n                     */\n                    Value.prototype.intValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n                    /**\n                     * Value uintValue.\n                     * @member {number|Long} uintValue\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @instance\n                     */\n                    Value.prototype.uintValue = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n                    /**\n                     * Value sintValue.\n                     * @member {number|Long} sintValue\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @instance\n                     */\n                    Value.prototype.sintValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n                    /**\n                     * Value boolValue.\n                     * @member {boolean} boolValue\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @instance\n                     */\n                    Value.prototype.boolValue = false;\n\n                    /**\n                     * Decodes a Value message from the specified reader or buffer.\n                     * @function decode\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @param {number} [length] Message length if known beforehand\n                     * @returns {com.mapbox.pb.Tile.Value} Value\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Value.decode = function decode(reader, length) {\n                        if (!(reader instanceof $Reader))\n                            reader = $Reader.create(reader);\n                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.mapbox.pb.Tile.Value();\n                        while (reader.pos < end) {\n                            var tag = reader.uint32();\n                            switch (tag >>> 3) {\n                            case 1:\n                                message.stringValue = reader.string();\n                                break;\n                            case 2:\n                                message.floatValue = reader.float();\n                                break;\n                            case 3:\n                                message.doubleValue = reader.double();\n                                break;\n                            case 4:\n                                message.intValue = reader.int64();\n                                break;\n                            case 5:\n                                message.uintValue = reader.uint64();\n                                break;\n                            case 6:\n                                message.sintValue = reader.sint64();\n                                break;\n                            case 7:\n                                message.boolValue = reader.bool();\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Decodes a Value message from the specified reader or buffer, length delimited.\n                     * @function decodeDelimited\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @returns {com.mapbox.pb.Tile.Value} Value\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Value.decodeDelimited = function decodeDelimited(reader) {\n                        if (!(reader instanceof $Reader))\n                            reader = new $Reader(reader);\n                        return this.decode(reader, reader.uint32());\n                    };\n\n                    /**\n                     * Creates a Value message from a plain object. Also converts values to their respective internal types.\n                     * @function fromObject\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @static\n                     * @param {Object.<string,*>} object Plain object\n                     * @returns {com.mapbox.pb.Tile.Value} Value\n                     */\n                    Value.fromObject = function fromObject(object) {\n                        if (object instanceof $root.com.mapbox.pb.Tile.Value)\n                            return object;\n                        var message = new $root.com.mapbox.pb.Tile.Value();\n                        if (object.stringValue != null)\n                            message.stringValue = String(object.stringValue);\n                        if (object.floatValue != null)\n                            message.floatValue = Number(object.floatValue);\n                        if (object.doubleValue != null)\n                            message.doubleValue = Number(object.doubleValue);\n                        if (object.intValue != null)\n                            if ($util.Long)\n                                (message.intValue = $util.Long.fromValue(object.intValue)).unsigned = false;\n                            else if (typeof object.intValue === \"string\")\n                                message.intValue = parseInt(object.intValue, 10);\n                            else if (typeof object.intValue === \"number\")\n                                message.intValue = object.intValue;\n                            else if (typeof object.intValue === \"object\")\n                                message.intValue = new $util.LongBits(object.intValue.low >>> 0, object.intValue.high >>> 0).toNumber();\n                        if (object.uintValue != null)\n                            if ($util.Long)\n                                (message.uintValue = $util.Long.fromValue(object.uintValue)).unsigned = true;\n                            else if (typeof object.uintValue === \"string\")\n                                message.uintValue = parseInt(object.uintValue, 10);\n                            else if (typeof object.uintValue === \"number\")\n                                message.uintValue = object.uintValue;\n                            else if (typeof object.uintValue === \"object\")\n                                message.uintValue = new $util.LongBits(object.uintValue.low >>> 0, object.uintValue.high >>> 0).toNumber(true);\n                        if (object.sintValue != null)\n                            if ($util.Long)\n                                (message.sintValue = $util.Long.fromValue(object.sintValue)).unsigned = false;\n                            else if (typeof object.sintValue === \"string\")\n                                message.sintValue = parseInt(object.sintValue, 10);\n                            else if (typeof object.sintValue === \"number\")\n                                message.sintValue = object.sintValue;\n                            else if (typeof object.sintValue === \"object\")\n                                message.sintValue = new $util.LongBits(object.sintValue.low >>> 0, object.sintValue.high >>> 0).toNumber();\n                        if (object.boolValue != null)\n                            message.boolValue = Boolean(object.boolValue);\n                        return message;\n                    };\n\n                    /**\n                     * Creates a plain object from a Value message. Also converts values to other types if specified.\n                     * @function toObject\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @static\n                     * @param {com.mapbox.pb.Tile.Value} message Value\n                     * @param {$protobuf.IConversionOptions} [options] Conversion options\n                     * @returns {Object.<string,*>} Plain object\n                     */\n                    Value.toObject = function toObject(message, options) {\n                        if (!options)\n                            options = {};\n                        var object = {};\n                        if (options.defaults) {\n                            object.stringValue = \"\";\n                            object.floatValue = 0;\n                            object.doubleValue = 0;\n                            if ($util.Long) {\n                                var long = new $util.Long(0, 0, false);\n                                object.intValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                            } else\n                                object.intValue = options.longs === String ? \"0\" : 0;\n                            if ($util.Long) {\n                                var long = new $util.Long(0, 0, true);\n                                object.uintValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                            } else\n                                object.uintValue = options.longs === String ? \"0\" : 0;\n                            if ($util.Long) {\n                                var long = new $util.Long(0, 0, false);\n                                object.sintValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                            } else\n                                object.sintValue = options.longs === String ? \"0\" : 0;\n                            object.boolValue = false;\n                        }\n                        if (message.stringValue != null && message.hasOwnProperty(\"stringValue\"))\n                            object.stringValue = message.stringValue;\n                        if (message.floatValue != null && message.hasOwnProperty(\"floatValue\"))\n                            object.floatValue = options.json && !isFinite(message.floatValue) ? String(message.floatValue) : message.floatValue;\n                        if (message.doubleValue != null && message.hasOwnProperty(\"doubleValue\"))\n                            object.doubleValue = options.json && !isFinite(message.doubleValue) ? String(message.doubleValue) : message.doubleValue;\n                        if (message.intValue != null && message.hasOwnProperty(\"intValue\"))\n                            if (typeof message.intValue === \"number\")\n                                object.intValue = options.longs === String ? String(message.intValue) : message.intValue;\n                            else\n                                object.intValue = options.longs === String ? $util.Long.prototype.toString.call(message.intValue) : options.longs === Number ? new $util.LongBits(message.intValue.low >>> 0, message.intValue.high >>> 0).toNumber() : message.intValue;\n                        if (message.uintValue != null && message.hasOwnProperty(\"uintValue\"))\n                            if (typeof message.uintValue === \"number\")\n                                object.uintValue = options.longs === String ? String(message.uintValue) : message.uintValue;\n                            else\n                                object.uintValue = options.longs === String ? $util.Long.prototype.toString.call(message.uintValue) : options.longs === Number ? new $util.LongBits(message.uintValue.low >>> 0, message.uintValue.high >>> 0).toNumber(true) : message.uintValue;\n                        if (message.sintValue != null && message.hasOwnProperty(\"sintValue\"))\n                            if (typeof message.sintValue === \"number\")\n                                object.sintValue = options.longs === String ? String(message.sintValue) : message.sintValue;\n                            else\n                                object.sintValue = options.longs === String ? $util.Long.prototype.toString.call(message.sintValue) : options.longs === Number ? new $util.LongBits(message.sintValue.low >>> 0, message.sintValue.high >>> 0).toNumber() : message.sintValue;\n                        if (message.boolValue != null && message.hasOwnProperty(\"boolValue\"))\n                            object.boolValue = message.boolValue;\n                        return object;\n                    };\n\n                    /**\n                     * Converts this Value to JSON.\n                     * @function toJSON\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @instance\n                     * @returns {Object.<string,*>} JSON object\n                     */\n                    Value.prototype.toJSON = function toJSON() {\n                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                    };\n\n                    return Value;\n                })();\n\n                Tile.Feature = (function() {\n\n                    /**\n                     * Properties of a Feature.\n                     * @memberof com.mapbox.pb.Tile\n                     * @interface IFeature\n                     * @property {number|Long|null} [id] Feature id\n                     * @property {Array.<number>|null} [tags] Feature tags\n                     * @property {com.mapbox.pb.Tile.GeomType|null} [type] Feature type\n                     * @property {Array.<number>|null} [geometry] Feature geometry\n                     */\n\n                    /**\n                     * Constructs a new Feature.\n                     * @memberof com.mapbox.pb.Tile\n                     * @classdesc Represents a Feature.\n                     * @implements IFeature\n                     * @constructor\n                     * @param {com.mapbox.pb.Tile.IFeature=} [properties] Properties to set\n                     */\n                    function Feature(properties) {\n                        this.tags = [];\n                        this.geometry = [];\n                        if (properties)\n                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                if (properties[keys[i]] != null)\n                                    this[keys[i]] = properties[keys[i]];\n                    }\n\n                    /**\n                     * Feature id.\n                     * @member {number|Long} id\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @instance\n                     */\n                    Feature.prototype.id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n                    /**\n                     * Feature tags.\n                     * @member {Array.<number>} tags\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @instance\n                     */\n                    Feature.prototype.tags = $util.emptyArray;\n\n                    /**\n                     * Feature type.\n                     * @member {com.mapbox.pb.Tile.GeomType} type\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @instance\n                     */\n                    Feature.prototype.type = 0;\n\n                    /**\n                     * Feature geometry.\n                     * @member {Array.<number>} geometry\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @instance\n                     */\n                    Feature.prototype.geometry = $util.emptyArray;\n\n                    /**\n                     * Decodes a Feature message from the specified reader or buffer.\n                     * @function decode\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @param {number} [length] Message length if known beforehand\n                     * @returns {com.mapbox.pb.Tile.Feature} Feature\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Feature.decode = function decode(reader, length) {\n                        if (!(reader instanceof $Reader))\n                            reader = $Reader.create(reader);\n                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.mapbox.pb.Tile.Feature();\n                        while (reader.pos < end) {\n                            var tag = reader.uint32();\n                            switch (tag >>> 3) {\n                            case 1:\n                                message.id = reader.uint64();\n                                break;\n                            case 2:\n                                if (!(message.tags && message.tags.length))\n                                    message.tags = [];\n                                if ((tag & 7) === 2) {\n                                    var end2 = reader.uint32() + reader.pos;\n                                    while (reader.pos < end2)\n                                        message.tags.push(reader.uint32());\n                                } else\n                                    message.tags.push(reader.uint32());\n                                break;\n                            case 3:\n                                message.type = reader.int32();\n                                break;\n                            case 4:\n                                if (!(message.geometry && message.geometry.length))\n                                    message.geometry = [];\n                                if ((tag & 7) === 2) {\n                                    var end2 = reader.uint32() + reader.pos;\n                                    while (reader.pos < end2)\n                                        message.geometry.push(reader.uint32());\n                                } else\n                                    message.geometry.push(reader.uint32());\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Decodes a Feature message from the specified reader or buffer, length delimited.\n                     * @function decodeDelimited\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @returns {com.mapbox.pb.Tile.Feature} Feature\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Feature.decodeDelimited = function decodeDelimited(reader) {\n                        if (!(reader instanceof $Reader))\n                            reader = new $Reader(reader);\n                        return this.decode(reader, reader.uint32());\n                    };\n\n                    /**\n                     * Creates a Feature message from a plain object. Also converts values to their respective internal types.\n                     * @function fromObject\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @static\n                     * @param {Object.<string,*>} object Plain object\n                     * @returns {com.mapbox.pb.Tile.Feature} Feature\n                     */\n                    Feature.fromObject = function fromObject(object) {\n                        if (object instanceof $root.com.mapbox.pb.Tile.Feature)\n                            return object;\n                        var message = new $root.com.mapbox.pb.Tile.Feature();\n                        if (object.id != null)\n                            if ($util.Long)\n                                (message.id = $util.Long.fromValue(object.id)).unsigned = true;\n                            else if (typeof object.id === \"string\")\n                                message.id = parseInt(object.id, 10);\n                            else if (typeof object.id === \"number\")\n                                message.id = object.id;\n                            else if (typeof object.id === \"object\")\n                                message.id = new $util.LongBits(object.id.low >>> 0, object.id.high >>> 0).toNumber(true);\n                        if (object.tags) {\n                            if (!Array.isArray(object.tags))\n                                throw TypeError(\".com.mapbox.pb.Tile.Feature.tags: array expected\");\n                            message.tags = [];\n                            for (var i = 0; i < object.tags.length; ++i)\n                                message.tags[i] = object.tags[i] >>> 0;\n                        }\n                        switch (object.type) {\n                        case \"UNKNOWN\":\n                        case 0:\n                            message.type = 0;\n                            break;\n                        case \"POINT\":\n                        case 1:\n                            message.type = 1;\n                            break;\n                        case \"LINESTRING\":\n                        case 2:\n                            message.type = 2;\n                            break;\n                        case \"POLYGON\":\n                        case 3:\n                            message.type = 3;\n                            break;\n                        }\n                        if (object.geometry) {\n                            if (!Array.isArray(object.geometry))\n                                throw TypeError(\".com.mapbox.pb.Tile.Feature.geometry: array expected\");\n                            message.geometry = [];\n                            for (var i = 0; i < object.geometry.length; ++i)\n                                message.geometry[i] = object.geometry[i] >>> 0;\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Creates a plain object from a Feature message. Also converts values to other types if specified.\n                     * @function toObject\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @static\n                     * @param {com.mapbox.pb.Tile.Feature} message Feature\n                     * @param {$protobuf.IConversionOptions} [options] Conversion options\n                     * @returns {Object.<string,*>} Plain object\n                     */\n                    Feature.toObject = function toObject(message, options) {\n                        if (!options)\n                            options = {};\n                        var object = {};\n                        if (options.arrays || options.defaults) {\n                            object.tags = [];\n                            object.geometry = [];\n                        }\n                        if (options.defaults) {\n                            if ($util.Long) {\n                                var long = new $util.Long(0, 0, true);\n                                object.id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                            } else\n                                object.id = options.longs === String ? \"0\" : 0;\n                            object.type = options.enums === String ? \"UNKNOWN\" : 0;\n                        }\n                        if (message.id != null && message.hasOwnProperty(\"id\"))\n                            if (typeof message.id === \"number\")\n                                object.id = options.longs === String ? String(message.id) : message.id;\n                            else\n                                object.id = options.longs === String ? $util.Long.prototype.toString.call(message.id) : options.longs === Number ? new $util.LongBits(message.id.low >>> 0, message.id.high >>> 0).toNumber(true) : message.id;\n                        if (message.tags && message.tags.length) {\n                            object.tags = [];\n                            for (var j = 0; j < message.tags.length; ++j)\n                                object.tags[j] = message.tags[j];\n                        }\n                        if (message.type != null && message.hasOwnProperty(\"type\"))\n                            object.type = options.enums === String ? $root.com.mapbox.pb.Tile.GeomType[message.type] : message.type;\n                        if (message.geometry && message.geometry.length) {\n                            object.geometry = [];\n                            for (var j = 0; j < message.geometry.length; ++j)\n                                object.geometry[j] = message.geometry[j];\n                        }\n                        return object;\n                    };\n\n                    /**\n                     * Converts this Feature to JSON.\n                     * @function toJSON\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @instance\n                     * @returns {Object.<string,*>} JSON object\n                     */\n                    Feature.prototype.toJSON = function toJSON() {\n                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                    };\n\n                    return Feature;\n                })();\n\n                Tile.Layer = (function() {\n\n                    /**\n                     * Properties of a Layer.\n                     * @memberof com.mapbox.pb.Tile\n                     * @interface ILayer\n                     * @property {number} version Layer version\n                     * @property {string} name Layer name\n                     * @property {Array.<com.mapbox.pb.Tile.IFeature>|null} [features] Layer features\n                     * @property {Array.<string>|null} [keys] Layer keys\n                     * @property {Array.<com.mapbox.pb.Tile.IValue>|null} [values] Layer values\n                     * @property {number|null} [extent] Layer extent\n                     */\n\n                    /**\n                     * Constructs a new Layer.\n                     * @memberof com.mapbox.pb.Tile\n                     * @classdesc Represents a Layer.\n                     * @implements ILayer\n                     * @constructor\n                     * @param {com.mapbox.pb.Tile.ILayer=} [properties] Properties to set\n                     */\n                    function Layer(properties) {\n                        this.features = [];\n                        this.keys = [];\n                        this.values = [];\n                        if (properties)\n                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                if (properties[keys[i]] != null)\n                                    this[keys[i]] = properties[keys[i]];\n                    }\n\n                    /**\n                     * Layer version.\n                     * @member {number} version\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @instance\n                     */\n                    Layer.prototype.version = 1;\n\n                    /**\n                     * Layer name.\n                     * @member {string} name\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @instance\n                     */\n                    Layer.prototype.name = \"\";\n\n                    /**\n                     * Layer features.\n                     * @member {Array.<com.mapbox.pb.Tile.IFeature>} features\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @instance\n                     */\n                    Layer.prototype.features = $util.emptyArray;\n\n                    /**\n                     * Layer keys.\n                     * @member {Array.<string>} keys\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @instance\n                     */\n                    Layer.prototype.keys = $util.emptyArray;\n\n                    /**\n                     * Layer values.\n                     * @member {Array.<com.mapbox.pb.Tile.IValue>} values\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @instance\n                     */\n                    Layer.prototype.values = $util.emptyArray;\n\n                    /**\n                     * Layer extent.\n                     * @member {number} extent\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @instance\n                     */\n                    Layer.prototype.extent = 4096;\n\n                    /**\n                     * Decodes a Layer message from the specified reader or buffer.\n                     * @function decode\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @param {number} [length] Message length if known beforehand\n                     * @returns {com.mapbox.pb.Tile.Layer} Layer\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Layer.decode = function decode(reader, length) {\n                        if (!(reader instanceof $Reader))\n                            reader = $Reader.create(reader);\n                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.mapbox.pb.Tile.Layer();\n                        while (reader.pos < end) {\n                            var tag = reader.uint32();\n                            switch (tag >>> 3) {\n                            case 15:\n                                message.version = reader.uint32();\n                                break;\n                            case 1:\n                                message.name = reader.string();\n                                break;\n                            case 2:\n                                if (!(message.features && message.features.length))\n                                    message.features = [];\n                                message.features.push($root.com.mapbox.pb.Tile.Feature.decode(reader, reader.uint32()));\n                                break;\n                            case 3:\n                                if (!(message.keys && message.keys.length))\n                                    message.keys = [];\n                                message.keys.push(reader.string());\n                                break;\n                            case 4:\n                                if (!(message.values && message.values.length))\n                                    message.values = [];\n                                message.values.push($root.com.mapbox.pb.Tile.Value.decode(reader, reader.uint32()));\n                                break;\n                            case 5:\n                                message.extent = reader.uint32();\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                        if (!message.hasOwnProperty(\"version\"))\n                            throw $util.ProtocolError(\"missing required 'version'\", { instance: message });\n                        if (!message.hasOwnProperty(\"name\"))\n                            throw $util.ProtocolError(\"missing required 'name'\", { instance: message });\n                        return message;\n                    };\n\n                    /**\n                     * Decodes a Layer message from the specified reader or buffer, length delimited.\n                     * @function decodeDelimited\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @returns {com.mapbox.pb.Tile.Layer} Layer\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Layer.decodeDelimited = function decodeDelimited(reader) {\n                        if (!(reader instanceof $Reader))\n                            reader = new $Reader(reader);\n                        return this.decode(reader, reader.uint32());\n                    };\n\n                    /**\n                     * Creates a Layer message from a plain object. Also converts values to their respective internal types.\n                     * @function fromObject\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @static\n                     * @param {Object.<string,*>} object Plain object\n                     * @returns {com.mapbox.pb.Tile.Layer} Layer\n                     */\n                    Layer.fromObject = function fromObject(object) {\n                        if (object instanceof $root.com.mapbox.pb.Tile.Layer)\n                            return object;\n                        var message = new $root.com.mapbox.pb.Tile.Layer();\n                        if (object.version != null)\n                            message.version = object.version >>> 0;\n                        if (object.name != null)\n                            message.name = String(object.name);\n                        if (object.features) {\n                            if (!Array.isArray(object.features))\n                                throw TypeError(\".com.mapbox.pb.Tile.Layer.features: array expected\");\n                            message.features = [];\n                            for (var i = 0; i < object.features.length; ++i) {\n                                if (typeof object.features[i] !== \"object\")\n                                    throw TypeError(\".com.mapbox.pb.Tile.Layer.features: object expected\");\n                                message.features[i] = $root.com.mapbox.pb.Tile.Feature.fromObject(object.features[i]);\n                            }\n                        }\n                        if (object.keys) {\n                            if (!Array.isArray(object.keys))\n                                throw TypeError(\".com.mapbox.pb.Tile.Layer.keys: array expected\");\n                            message.keys = [];\n                            for (var i = 0; i < object.keys.length; ++i)\n                                message.keys[i] = String(object.keys[i]);\n                        }\n                        if (object.values) {\n                            if (!Array.isArray(object.values))\n                                throw TypeError(\".com.mapbox.pb.Tile.Layer.values: array expected\");\n                            message.values = [];\n                            for (var i = 0; i < object.values.length; ++i) {\n                                if (typeof object.values[i] !== \"object\")\n                                    throw TypeError(\".com.mapbox.pb.Tile.Layer.values: object expected\");\n                                message.values[i] = $root.com.mapbox.pb.Tile.Value.fromObject(object.values[i]);\n                            }\n                        }\n                        if (object.extent != null)\n                            message.extent = object.extent >>> 0;\n                        return message;\n                    };\n\n                    /**\n                     * Creates a plain object from a Layer message. Also converts values to other types if specified.\n                     * @function toObject\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @static\n                     * @param {com.mapbox.pb.Tile.Layer} message Layer\n                     * @param {$protobuf.IConversionOptions} [options] Conversion options\n                     * @returns {Object.<string,*>} Plain object\n                     */\n                    Layer.toObject = function toObject(message, options) {\n                        if (!options)\n                            options = {};\n                        var object = {};\n                        if (options.arrays || options.defaults) {\n                            object.features = [];\n                            object.keys = [];\n                            object.values = [];\n                        }\n                        if (options.defaults) {\n                            object.name = \"\";\n                            object.extent = 4096;\n                            object.version = 1;\n                        }\n                        if (message.name != null && message.hasOwnProperty(\"name\"))\n                            object.name = message.name;\n                        if (message.features && message.features.length) {\n                            object.features = [];\n                            for (var j = 0; j < message.features.length; ++j)\n                                object.features[j] = $root.com.mapbox.pb.Tile.Feature.toObject(message.features[j], options);\n                        }\n                        if (message.keys && message.keys.length) {\n                            object.keys = [];\n                            for (var j = 0; j < message.keys.length; ++j)\n                                object.keys[j] = message.keys[j];\n                        }\n                        if (message.values && message.values.length) {\n                            object.values = [];\n                            for (var j = 0; j < message.values.length; ++j)\n                                object.values[j] = $root.com.mapbox.pb.Tile.Value.toObject(message.values[j], options);\n                        }\n                        if (message.extent != null && message.hasOwnProperty(\"extent\"))\n                            object.extent = message.extent;\n                        if (message.version != null && message.hasOwnProperty(\"version\"))\n                            object.version = message.version;\n                        return object;\n                    };\n\n                    /**\n                     * Converts this Layer to JSON.\n                     * @function toJSON\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @instance\n                     * @returns {Object.<string,*>} JSON object\n                     */\n                    Layer.prototype.toJSON = function toJSON() {\n                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                    };\n\n                    return Layer;\n                })();\n\n                return Tile;\n            })();\n\n            return pb;\n        })();\n\n        return mapbox;\n    })();\n\n    return com;\n})();\n\nmodule.exports = $root;\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.Reader._configure(protobuf.BufferReader);\n    protobuf.util._configure();\n}\n\n// Set up buffer utility according to the environment\nprotobuf.Writer._configure(protobuf.BufferWriter);\nconfigure();\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\nvar Buffer = util.Buffer;\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Buffer} Buffer\n */\nBufferWriter.alloc = function alloc_buffer(size) {\n    return (BufferWriter.alloc = util._Buffer_allocUnsafe)(size);\n};\n\nvar writeBytesBuffer = Buffer && Buffer.prototype instanceof Uint8Array && Buffer.prototype.set.name === \"set\"\n    ? function writeBytesBuffer_set(val, buf, pos) {\n        buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n                           // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytesBuffer_copy(val, buf, pos) {\n        if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n        else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n    };\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else\n        buf.utf8Write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\n/* istanbul ignore else */\nif (util.Buffer)\n    BufferReader.prototype._slice = util.Buffer.prototype.slice;\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    AttributeMap,\n    BufferAttribute,\n    composeTechniqueTextureName,\n    DecodedTile,\n    ExtrudedPolygonTechnique,\n    FillTechnique,\n    Geometry,\n    GeometryType,\n    getFeatureId,\n    getFeatureText,\n    Group,\n    IndexedTechnique,\n    InterleavedBufferAttribute,\n    isExtrudedLineTechnique,\n    isExtrudedPolygonTechnique,\n    isFillTechnique,\n    isLabelRejectionLineTechnique,\n    isLineMarkerTechnique,\n    isLineTechnique,\n    isPoiTechnique,\n    isSolidLineTechnique,\n    isSpecialDashesLineTechnique,\n    isStandardTechnique,\n    isTextTechnique,\n    LineMarkerTechnique,\n    PathGeometry,\n    PoiGeometry,\n    PoiTechnique,\n    StyleColor,\n    Technique,\n    TextGeometry,\n    TextPathGeometry,\n    TextTechnique,\n    textureCoordinateType,\n    TextureCoordinateType\n} from \"@here/harp-datasource-protocol\";\nimport {\n    Env,\n    IMeshBuffers,\n    StyleSetEvaluator,\n    Value\n} from \"@here/harp-datasource-protocol/index-decoder\";\nimport { LineGroup } from \"@here/harp-lines/lib/Lines\";\nimport { triangulateLine } from \"@here/harp-lines/lib/TriangulateLines\";\nimport { assert, getOptionValue, LoggerManager, Math2D } from \"@here/harp-utils\";\nimport earcut from \"earcut\";\nimport * as THREE from \"three\";\n\nimport {\n    normalizedEquirectangularProjection,\n    ProjectionType,\n    Vector3Like,\n    webMercatorProjection\n} from \"@here/harp-geoutils\";\n\nimport { ILineGeometry, IPolygonGeometry } from \"./IGeometryProcessor\";\nimport { LinesGeometry } from \"./OmvDataSource\";\nimport { IOmvEmitter, Ring } from \"./OmvDecoder\";\nimport {\n    tile2world,\n    webMercatorTile2TargetTile,\n    webMercatorTile2TargetWorld,\n    world2tile\n} from \"./OmvUtils\";\n\nimport {\n    AttrEvaluationContext,\n    evaluateTechniqueAttr\n} from \"@here/harp-datasource-protocol/lib/TechniqueAttr\";\nimport { clipPolygon } from \"@here/harp-geometry/lib/ClipPolygon\";\nimport {\n    EdgeLengthGeometrySubdivisionModifier,\n    SubdivisionMode\n} from \"@here/harp-geometry/lib/EdgeLengthGeometrySubdivisionModifier\";\n// tslint:disable-next-line:max-line-length\nimport { SphericalGeometrySubdivisionModifier } from \"@here/harp-geometry/lib/SphericalGeometrySubdivisionModifier\";\nimport { ExtrusionFeatureDefs } from \"@here/harp-materials/lib/MapMeshMaterialsDefs\";\nimport { DecodeInfo } from \"./DecodeInfo\";\n\nconst logger = LoggerManager.instance.create(\"OmvDecodedTileEmitter\");\n\nconst tempTileOrigin = new THREE.Vector3();\nconst tempVertOrigin = new THREE.Vector3();\nconst tempVertNormal = new THREE.Vector3();\nconst tempFootDisp = new THREE.Vector3();\nconst tempRoofDisp = new THREE.Vector3();\n\nconst tmpV2 = new THREE.Vector2();\nconst tmpV2r = new THREE.Vector2();\nconst tmpV3 = new THREE.Vector3();\nconst tmpV3r = new THREE.Vector3();\nconst tmpV4 = new THREE.Vector3();\n\nconst tempP0 = new THREE.Vector2();\nconst tempP1 = new THREE.Vector2();\nconst tempPreviousTangent = new THREE.Vector2();\n\nconst tmpPointA = new THREE.Vector3();\nconst tmpPointB = new THREE.Vector3();\nconst tmpPointC = new THREE.Vector3();\nconst tmpPointD = new THREE.Vector3();\nconst tmpPointE = new THREE.Vector3();\nconst tmpLine = new THREE.Line3();\n\n/**\n * Minimum number of pixels per character. Used during estimation if there is enough screen space\n * available to render a text. Based on the estimated screen size of a tile.\n */\nconst MIN_AVERAGE_CHAR_WIDTH = 5;\n\n/**\n * Estimation \"fudge factor\", tweaking the size estimation to\n *\n * a) allow room for zooming in to the tile, and\n *\n * b) allow for some tilting, where the edge of a tile closer to the camera has more space.\n *\n * Useful values are between 0 (allow all labels), 0.5 (allow labels at twice the default display\n * size of the tile) and 1.0 (skip labels that would normally not be displayed at default tile\n * size).\n */\nconst SIZE_ESTIMATION_FACTOR = 0.5;\n\n/**\n * Maximum allowed corner angle inside a label path.\n */\nconst MAX_CORNER_ANGLE = Math.PI / 8;\n\n/**\n * Used to identify an invalid (or better: unused) array index.\n */\nconst INVALID_ARRAY_INDEX = -1;\n\nfunction createIndexBufferAttribute(\n    elements: ArrayLike<number>,\n    maxValue: number,\n    name: string = \"index\"\n): BufferAttribute {\n    const type = maxValue > 65535 ? \"uint32\" : \"uint16\";\n    const storage = type === \"uint32\" ? new Uint32Array(elements) : new Uint16Array(elements);\n    const buffer = storage.buffer;\n    return {\n        itemCount: 1,\n        name,\n        buffer,\n        type\n    };\n}\n\n// for tilezen by default extrude all buildings even those without height data\nclass MeshBuffers implements IMeshBuffers {\n    readonly positions: number[] = [];\n    readonly normals: number[] = [];\n    readonly textureCoordinates: number[] = [];\n    readonly colors: number[] = [];\n    readonly extrusionAxis: number[] = [];\n    readonly indices: number[] = [];\n    readonly edgeIndices: number[] = [];\n    readonly groups: Group[] = [];\n    readonly texts: number[] = [];\n    readonly pathLengths: number[] = [];\n    readonly stringCatalog: Array<string | undefined> = [];\n    readonly imageTextures: number[] = [];\n\n    /**\n     * Optional list of feature start indices. The indices point into the index attribute.\n     */\n    readonly featureStarts: number[] = [];\n\n    /**\n     * An optional list of additional data that can be used as additional data for the object\n     * picking.\n     */\n    readonly objInfos: AttributeMap[] = [];\n\n    constructor(readonly type: GeometryType) {}\n\n    addText(text: string) {\n        let index = this.stringCatalog.indexOf(text);\n\n        if (index < 0) {\n            index = this.stringCatalog.length;\n            this.stringCatalog.push(text);\n        }\n        return index;\n    }\n}\n\nexport enum LineType {\n    Simple,\n    Complex\n}\n\ntype TexCoordsFunction = (tilePos: THREE.Vector2, tileExtents: number) => { u: number; v: number };\nconst tmpColor = new THREE.Color();\n\nexport class OmvDecodedTileEmitter implements IOmvEmitter {\n    // mapping from style index to mesh buffers\n    private readonly m_meshBuffers = new Map<number, MeshBuffers>();\n\n    private readonly m_geometries: Geometry[] = [];\n    private readonly m_textGeometries: TextGeometry[] = [];\n    private readonly m_textPathGeometries: TextPathGeometry[] = [];\n    private readonly m_pathGeometries: PathGeometry[] = [];\n    private readonly m_poiGeometries: PoiGeometry[] = [];\n    private readonly m_simpleLines: LinesGeometry[] = [];\n    private readonly m_solidLines: LinesGeometry[] = [];\n\n    private readonly m_sources: string[] = [];\n    private m_maxGeometryHeight: number = 0;\n\n    constructor(\n        private readonly m_decodeInfo: DecodeInfo,\n        private readonly m_styleSetEvaluator: StyleSetEvaluator,\n        private readonly m_gatherFeatureAttributes: boolean,\n        private readonly m_skipShortLabels: boolean,\n        private readonly m_enableElevationOverlay: boolean,\n        private readonly m_languages?: string[]\n    ) {}\n\n    get projection() {\n        return this.m_decodeInfo.targetProjection;\n    }\n\n    get center() {\n        return this.m_decodeInfo.center;\n    }\n\n    /**\n     * Creates the Point of Interest geometries for the given feature.\n     *\n     * @param layer Tile's layer to be processed.\n     * @param extents Tile's layer extents.\n     * @param geometry The current feature containing the main geometry.\n     * @param env The [[MapEnv]] containing the environment information for the map.\n     * @param techniques The array of [[Technique]] that will be applied to the geometry.\n     * @param featureId The id of the feature.\n     */\n    processPointFeature(\n        layer: string,\n        extents: number,\n        geometry: THREE.Vector2[],\n        context: AttrEvaluationContext,\n        techniques: IndexedTechnique[],\n        featureId: number | undefined\n    ): void {\n        const env = context.env;\n        this.processFeatureCommon(env);\n\n        for (const technique of techniques) {\n            if (technique === undefined) {\n                continue;\n            }\n\n            const techniqueIndex = technique._index;\n            const meshBuffers = this.findOrCreateMeshBuffers(techniqueIndex, GeometryType.Point);\n\n            if (meshBuffers === undefined) {\n                continue;\n            }\n\n            const { positions, texts, imageTextures, objInfos } = meshBuffers;\n\n            const shouldCreateTextGeometries =\n                isTextTechnique(technique) || isPoiTechnique(technique);\n\n            let imageTexture: string | undefined;\n            const wantsPoi = isPoiTechnique(technique);\n\n            if (wantsPoi) {\n                const poiTechnique = technique as PoiTechnique;\n                imageTexture = evaluateTechniqueAttr(context, poiTechnique.imageTexture);\n\n                // TODO: Move to decoder independent parts of code.\n                if (poiTechnique.poiName !== undefined) {\n                    imageTexture = evaluateTechniqueAttr(context, poiTechnique.poiName);\n                } else if (typeof poiTechnique.poiNameField === \"string\") {\n                    const poiNameFieldValue = env.lookup(poiTechnique.poiNameField) as string;\n                    imageTexture = poiNameFieldValue;\n                } else if (typeof poiTechnique.imageTextureField === \"string\") {\n                    const imageTextureValue = env.lookup(poiTechnique.imageTextureField) as string;\n                    imageTexture = composeTechniqueTextureName(imageTextureValue, poiTechnique);\n                }\n            }\n\n            for (const pos of geometry) {\n                if (shouldCreateTextGeometries) {\n                    const textTechnique = technique as TextTechnique;\n                    const text = getFeatureText(context, textTechnique, this.m_languages);\n\n                    if (text !== undefined && text.length > 0) {\n                        texts.push(meshBuffers.addText(text));\n                    } else {\n                        texts.push(INVALID_ARRAY_INDEX);\n                    }\n                }\n\n                // Always store the position, otherwise the following POIs will be\n                // misplaced.\n                if (shouldCreateTextGeometries) {\n                    webMercatorTile2TargetWorld(extents, this.m_decodeInfo, pos, tmpV3);\n                } else {\n                    webMercatorTile2TargetTile(extents, this.m_decodeInfo, pos, tmpV3);\n                }\n                positions.push(tmpV3.x, tmpV3.y, tmpV3.z);\n                objInfos.push(\n                    this.m_gatherFeatureAttributes ? env.entries : getFeatureId(env.entries)\n                );\n\n                if (wantsPoi) {\n                    if (imageTexture === undefined) {\n                        imageTextures.push(INVALID_ARRAY_INDEX);\n                    } else {\n                        imageTextures.push(meshBuffers.addText(imageTexture));\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     *\n     * Creates the line geometries for the given feature.\n     *\n     * @param layer Tile's layer to be processed.\n     * @param extents Tile's layer extents.\n     * @param geometry The current feature containing the main geometry.\n     * @param env The [[MapEnv]] containing the environment information for the map.\n     * @param techniques The array of [[Technique]] that will be applied to the geometry.\n     * @param featureId The id of the feature.\n     */\n    processLineFeature(\n        layer: string,\n        extents: number,\n        geometry: ILineGeometry[],\n        context: AttrEvaluationContext,\n        techniques: IndexedTechnique[],\n        featureId: number | undefined\n    ): void {\n        const env = context.env;\n        this.processFeatureCommon(env);\n\n        const localLines: number[][] = []; // lines in target tile space.\n        const worldLines: number[][] = []; // lines in world space.\n        const uvs: number[][] = [];\n        const offsets: number[][] = [];\n        const projectedBoundingBox = this.m_decodeInfo.projectedBoundingBox;\n\n        let localLineSegments: number[][]; // lines in target tile space for special dashes.\n\n        const tileWidth = projectedBoundingBox.extents.x * 2;\n        const tileHeight = projectedBoundingBox.extents.y * 2;\n        const tileSizeWorld = Math.max(tileWidth, tileHeight);\n\n        let computeTexCoords: TexCoordsFunction | undefined;\n        let texCoordinateType: TextureCoordinateType | undefined;\n\n        const hasUntiledLines = geometry[0].untiledPositions !== undefined;\n\n        // If true, special handling for dashes is required (round and diamond shaped dashes).\n        let hasIndividualLineSegments = false;\n        let hasContinuousLineSegments = false;\n\n        // Check if any of the techniques needs texture coordinates\n        for (const technique of techniques) {\n            if (technique === undefined) {\n                continue;\n            }\n            if (!computeTexCoords) {\n                computeTexCoords = this.getComputeTexCoordsFunc(technique);\n                texCoordinateType = this.getTextureCoordinateType(technique);\n            } else {\n                // Support generation of only one type of texture coordinates.\n                const otherTexCoordType = this.getTextureCoordinateType(technique);\n                assert(otherTexCoordType === undefined || texCoordinateType === otherTexCoordType);\n            }\n\n            hasIndividualLineSegments =\n                hasIndividualLineSegments || isSpecialDashesLineTechnique(technique);\n\n            hasContinuousLineSegments = hasContinuousLineSegments || !hasIndividualLineSegments;\n        }\n\n        for (const polyline of geometry) {\n            // Compute the world position of the untiled line and its distance to the origin of the\n            // line to properly join lines.\n            const untiledLine: number[] = [];\n            let lineDist = 0;\n            if (hasUntiledLines) {\n                this.m_decodeInfo.targetProjection.projectPoint(\n                    polyline.untiledPositions![0],\n                    tmpV3r\n                );\n                polyline.untiledPositions!.forEach(pos => {\n                    // Calculate the distance to the next un-normalized point.\n                    this.m_decodeInfo.targetProjection.projectPoint(pos, tmpV3);\n                    lineDist += tmpV3.distanceTo(tmpV3r);\n                    tmpV3r.copy(tmpV3);\n\n                    // Pushed the normalized point for line matching.\n                    this.m_decodeInfo.targetProjection.projectPoint(pos.normalized(), tmpV3);\n                    untiledLine.push(tmpV3.x, tmpV3.y, tmpV3.z, lineDist);\n                });\n            }\n\n            // Add continuous line as individual segments to improve special dashes by overlapping\n            // their connecting vertices. The technique/style should defined round or rectangular\n            // caps.\n            if (hasIndividualLineSegments) {\n                localLineSegments = [];\n\n                // Compute length of whole line and offsets of individual segments.\n                let lineLength = 0;\n                const pointCount = polyline.positions.length;\n                if (pointCount > 1) {\n                    let lastSegmentOffset = 0;\n\n                    for (let i = 0; i < pointCount - 1; i++) {\n                        const localLine: number[] = [];\n                        const worldLine: number[] = [];\n                        const lineUvs: number[] = [];\n                        const segmentOffsets: number[] = [];\n\n                        const pos1 = polyline.positions[i];\n                        const pos2 = polyline.positions[i + 1];\n                        webMercatorTile2TargetWorld(extents, this.m_decodeInfo, pos1, tmpV3);\n                        worldLine.push(tmpV3.x, tmpV3.y, tmpV3.z);\n                        webMercatorTile2TargetWorld(extents, this.m_decodeInfo, pos2, tmpV4);\n                        worldLine.push(tmpV4.x, tmpV4.y, tmpV4.z);\n\n                        if (computeTexCoords) {\n                            {\n                                const { u, v } = computeTexCoords(pos1, extents);\n                                lineUvs.push(u, v);\n                            }\n                            {\n                                const { u, v } = computeTexCoords(pos2, extents);\n                                lineUvs.push(u, v);\n                            }\n                        }\n                        if (hasUntiledLines) {\n                            // Find where in the [0...1] range relative to the line our current\n                            // vertex lies.\n                            let offset =\n                                this.findRelativePositionInLine(tmpV3, untiledLine) / lineDist;\n                            segmentOffsets.push(offset);\n                            offset = this.findRelativePositionInLine(tmpV4, untiledLine) / lineDist;\n                            segmentOffsets.push(offset);\n                        } else {\n                            segmentOffsets.push(lastSegmentOffset);\n\n                            // Compute length of segment and whole line to scale down later.\n                            const segmentLength = tmpV3.distanceTo(tmpV4);\n                            lineLength += segmentLength;\n                            lastSegmentOffset += segmentLength;\n                            segmentOffsets.push(lastSegmentOffset);\n                        }\n\n                        tmpV3.sub(this.m_decodeInfo.center);\n                        localLine.push(tmpV3.x, tmpV3.y, tmpV3.z);\n                        tmpV4.sub(this.m_decodeInfo.center);\n                        localLine.push(tmpV4.x, tmpV4.y, tmpV4.z);\n\n                        localLineSegments!.push(localLine);\n                        worldLines.push(worldLine);\n                        uvs.push(lineUvs);\n                        offsets.push(segmentOffsets);\n                    }\n                }\n\n                if (!hasUntiledLines && lineLength > 0) {\n                    // Scale down each individual segment to range [0..1] for whole line.\n                    for (const segOffsets of offsets) {\n                        segOffsets.forEach((offs, index) => {\n                            segOffsets[index] = offs / lineLength;\n                        });\n                    }\n                }\n            }\n\n            // Add continuous lines\n            if (hasContinuousLineSegments) {\n                const localLine: number[] = [];\n                const worldLine: number[] = [];\n                const lineUvs: number[] = [];\n                const lineOffsets: number[] = [];\n                polyline.positions.forEach(pos => {\n                    webMercatorTile2TargetWorld(extents, this.m_decodeInfo, pos, tmpV3);\n                    worldLine.push(tmpV3.x, tmpV3.y, tmpV3.z);\n\n                    if (computeTexCoords) {\n                        const { u, v } = computeTexCoords(pos, extents);\n                        lineUvs.push(u, v);\n                    }\n                    if (hasUntiledLines) {\n                        // Find where in the [0...1] range relative to the line our current vertex\n                        // lines.\n                        const offset =\n                            this.findRelativePositionInLine(tmpV3, untiledLine) / lineDist;\n                        lineOffsets.push(offset);\n                    }\n                    tmpV3.sub(this.m_decodeInfo.center);\n                    localLine.push(tmpV3.x, tmpV3.y, tmpV3.z);\n                });\n                localLines.push(localLine);\n                worldLines.push(worldLine);\n                uvs.push(lineUvs);\n                offsets.push(lineOffsets);\n            }\n        }\n\n        const wantCircle = this.m_decodeInfo.tileKey.level >= 11;\n\n        for (const technique of techniques) {\n            if (technique === undefined) {\n                continue;\n            }\n            const techniqueIndex = technique._index;\n            const techniqueName = technique.name;\n\n            if (isLineTechnique(technique) || isSolidLineTechnique(technique)) {\n                const lineGeometry = isLineTechnique(technique)\n                    ? this.m_simpleLines\n                    : this.m_solidLines;\n\n                const lineType = isLineTechnique(technique) ? LineType.Simple : LineType.Complex;\n\n                if (hasIndividualLineSegments) {\n                    assert(\n                        localLineSegments! !== undefined,\n                        \"OmvDecodedTileEmitter#processLineFeature: \" +\n                            \"Internal error - No localLineSegments\"\n                    );\n\n                    this.applyLineTechnique(\n                        lineGeometry,\n                        technique,\n                        techniqueIndex,\n                        lineType,\n                        env.entries,\n                        localLineSegments!,\n                        context,\n                        this.getTextureCoordinateType(technique) ? uvs : undefined,\n                        offsets\n                    );\n                }\n                if (localLines.length > 0) {\n                    this.applyLineTechnique(\n                        lineGeometry,\n                        technique,\n                        techniqueIndex,\n                        lineType,\n                        env.entries,\n                        localLines,\n                        context,\n                        this.getTextureCoordinateType(technique) ? uvs : undefined,\n                        hasUntiledLines ? offsets : undefined\n                    );\n                }\n            } else if (\n                isTextTechnique(technique) ||\n                isPoiTechnique(technique) ||\n                isLineMarkerTechnique(technique)\n            ) {\n                const textTechnique = technique as TextTechnique;\n                const text = getFeatureText(context, textTechnique, this.m_languages);\n\n                if (text === undefined || text.length === 0) {\n                    continue;\n                }\n                let validLines: number[][] = [];\n\n                if (this.m_skipShortLabels) {\n                    // Filter the lines, keep only those that are long enough for labelling. Also,\n                    // split jagged label paths to keep processing and rendering only those that\n                    // have no sharp corners, which would not be rendered anyway.\n\n                    const worldUnitsPerPixel = tileSizeWorld / this.m_decodeInfo.tileSizeOnScreen;\n                    const minEstimatedLabelLength =\n                        MIN_AVERAGE_CHAR_WIDTH *\n                        text.length *\n                        worldUnitsPerPixel *\n                        SIZE_ESTIMATION_FACTOR;\n                    const minEstimatedLabelLengthSqr =\n                        minEstimatedLabelLength * minEstimatedLabelLength;\n\n                    validLines = this.splitJaggyLines(\n                        worldLines,\n                        minEstimatedLabelLengthSqr,\n                        MAX_CORNER_ANGLE\n                    );\n                } else {\n                    validLines = worldLines;\n                }\n\n                if (validLines.length === 0) {\n                    continue;\n                }\n\n                if (isTextTechnique(technique)) {\n                    if (text === undefined) {\n                        continue;\n                    }\n                    for (const path of validLines) {\n                        const pathLengthSqr = Math2D.computeSquaredLineLength(path);\n                        this.m_textPathGeometries.push({\n                            technique: techniqueIndex,\n                            path,\n                            pathLengthSqr,\n                            text: String(text),\n                            objInfos: this.m_gatherFeatureAttributes\n                                ? env.entries\n                                : getFeatureId(env.entries)\n                        });\n                    }\n                } else {\n                    const lineMarkerTechnique = technique as LineMarkerTechnique;\n\n                    let imageTexture = evaluateTechniqueAttr(\n                        context,\n                        lineMarkerTechnique.imageTexture\n                    );\n\n                    // TODO: `imageTextureField` and `imageTexturePrefix` and `imageTexturePostfix`\n                    // are now deprecated\n\n                    // TODO: Move to decoder independent parts of code.\n                    if (typeof lineMarkerTechnique.imageTextureField === \"string\") {\n                        const imageTextureValue = env.lookup(lineMarkerTechnique.imageTextureField);\n                        imageTexture = imageTextureValue as string;\n                        if (typeof lineMarkerTechnique.imageTexturePrefix === \"string\") {\n                            imageTexture = lineMarkerTechnique.imageTexturePrefix + imageTexture;\n                        }\n                        if (typeof lineMarkerTechnique.imageTexturePostfix === \"string\") {\n                            imageTexture = imageTexture + lineMarkerTechnique.imageTexturePostfix;\n                        }\n                    }\n\n                    for (const aLine of validLines) {\n                        this.m_poiGeometries.push({\n                            technique: techniqueIndex,\n                            positions: {\n                                name: \"position\",\n                                type: \"float\",\n                                buffer: new Float32Array(aLine).buffer,\n                                itemCount: 3\n                            },\n                            texts: [0],\n                            stringCatalog: [text, imageTexture],\n                            imageTextures: [1],\n                            objInfos: this.m_gatherFeatureAttributes\n                                ? [env.entries]\n                                : [getFeatureId(env.entries)]\n                        });\n                    }\n                }\n            } else if (isLabelRejectionLineTechnique(technique)) {\n                for (const path of worldLines) {\n                    const worldPath: Vector3Like[] = [];\n                    for (let i = 0; i < path.length; i += 3) {\n                        worldPath.push(new THREE.Vector3().fromArray(path, i) as Vector3Like);\n                    }\n                    this.m_pathGeometries.push({\n                        path: worldPath\n                    });\n                }\n            } else if (isExtrudedLineTechnique(technique)) {\n                const meshBuffers = this.findOrCreateMeshBuffers(\n                    techniqueIndex,\n                    GeometryType.ExtrudedLine\n                );\n                if (meshBuffers === undefined) {\n                    continue;\n                }\n                const { positions, indices, groups, featureStarts, objInfos } = meshBuffers;\n                const start = indices.length;\n\n                const lineWidth = evaluateTechniqueAttr<number>(context, technique.lineWidth);\n\n                if (lineWidth === undefined) {\n                    continue;\n                }\n\n                const techniqueCaps = evaluateTechniqueAttr<string>(\n                    context,\n                    technique.caps,\n                    \"Circle\"\n                );\n\n                const addCircle = wantCircle && techniqueCaps === \"Circle\";\n\n                localLines.forEach(aLine => {\n                    triangulateLine(aLine, lineWidth, positions, indices, addCircle);\n                    featureStarts.push(start);\n                    objInfos.push(\n                        this.m_gatherFeatureAttributes ? env.entries : getFeatureId(env.entries)\n                    );\n                });\n\n                const count = indices.length - start;\n                groups.push({ start, count, technique: techniqueIndex });\n            } else {\n                logger.warn(\n                    `OmvDecodedTileEmitter#processLineFeature: Invalid line technique\n                     ${techniqueName} for layer: ${env.entries.$layer} `\n                );\n            }\n        }\n    }\n\n    /**\n     * Creates the polygons geometries for the given feature.\n     *\n     * @param layer Tile's layer to be processed.\n     * @param extents Tile's layer extents.\n     * @param geometry The current feature containing the main geometry.\n     * @param feature The [[MapEnv]] containing the environment information for the map.\n     * @param techniques The array of [[Technique]] that will be applied to the geometry.\n     * @param featureId The id of the feature.\n     */\n    processPolygonFeature(\n        layer: string,\n        extents: number,\n        geometry: IPolygonGeometry[],\n        context: AttrEvaluationContext,\n        techniques: IndexedTechnique[],\n        featureId: number | undefined\n    ): void {\n        const env = context.env;\n        this.processFeatureCommon(env);\n\n        techniques.forEach(technique => {\n            if (technique === undefined) {\n                return;\n            }\n\n            const techniqueIndex = technique._index;\n\n            if (techniqueIndex === undefined) {\n                throw new Error(\n                    \"OmvDecodedTileEmitter#processPolygonFeature: \" +\n                        \"Internal error - No technique index\"\n                );\n            }\n\n            const polygons: Ring[][] = [];\n\n            const isExtruded = isExtrudedPolygonTechnique(technique);\n            const isFilled = isFillTechnique(technique);\n            const isStandard = isStandardTechnique(technique);\n\n            const isPolygon = isExtruded || isFilled || isStandard;\n            const computeTexCoords = this.getComputeTexCoordsFunc(technique);\n            const vertexStride = computeTexCoords !== undefined ? 4 : 2;\n\n            let clipRing: THREE.Vector2[] | undefined;\n\n            for (const polygon of geometry) {\n                const rings: Ring[] = [];\n\n                for (const outline of polygon.rings) {\n                    const ringContour: number[] = [];\n\n                    let coords = outline;\n\n                    if (isFilled || isStandard) {\n                        const shouldClipPolygon = coords.some(\n                            p => p.x < 0 || p.x > extents || p.y < 0 || p.y > extents\n                        );\n\n                        if (shouldClipPolygon) {\n                            if (!clipRing) {\n                                clipRing = [\n                                    new THREE.Vector2(0, 0),\n                                    new THREE.Vector2(extents, 0),\n                                    new THREE.Vector2(extents, extents),\n                                    new THREE.Vector2(0, extents)\n                                ];\n                            }\n\n                            coords = clipPolygon(coords, clipRing);\n                        }\n                    }\n\n                    if (coords.length === 0) {\n                        continue;\n                    }\n\n                    for (const coord of coords) {\n                        ringContour.push(coord.x, coord.y);\n                        if (computeTexCoords !== undefined) {\n                            const { u, v } = computeTexCoords(coord, extents);\n                            ringContour.push(u, v);\n                        }\n                    }\n\n                    rings.push(new Ring(extents, vertexStride, ringContour));\n                }\n\n                if (rings.length === 0) {\n                    continue;\n                }\n\n                polygons.push(rings);\n            }\n\n            const isLine = isSolidLineTechnique(technique) || isLineTechnique(technique);\n            if (isPolygon) {\n                this.applyPolygonTechnique(\n                    polygons,\n                    technique,\n                    techniqueIndex,\n                    featureId,\n                    context,\n                    extents\n                );\n            } else if (isLine) {\n                const lineGeometry =\n                    technique.name === \"line\" ? this.m_simpleLines : this.m_solidLines;\n\n                const lineType = technique.name === \"line\" ? LineType.Simple : LineType.Complex;\n\n                // Use individual line segments instead of a continuous line in special cases (round\n                // and diamond shaped dashes).\n                const needIndividualLineSegments = isSpecialDashesLineTechnique(technique);\n\n                polygons.forEach(rings => {\n                    const lines: number[][] = [];\n                    const offsets: number[][] | undefined = needIndividualLineSegments\n                        ? []\n                        : undefined;\n                    rings.forEach(ring => {\n                        const length = ring.contour.length / ring.vertexStride;\n                        let line: number[] = [];\n\n                        // Compute length of whole line and offsets of individual segments.\n                        let ringLength = 0;\n                        let lastSegmentOffset = 0;\n                        let segmentOffsets: number[] | undefined = needIndividualLineSegments\n                            ? []\n                            : undefined;\n\n                        for (let i = 0; i < length; ++i) {\n                            if (needIndividualLineSegments && line.length > 0) {\n                                // Allocate a line for every segment.\n                                line = [];\n                                segmentOffsets = [];\n                            }\n\n                            const nextIdx = (i + 1) % length;\n                            const currX = ring.contour[i * ring.vertexStride];\n                            const currY = ring.contour[i * ring.vertexStride + 1];\n                            const nextX = ring.contour[nextIdx * ring.vertexStride];\n                            const nextY = ring.contour[nextIdx * ring.vertexStride + 1];\n\n                            const isOutline = !(\n                                (currX <= 0 && nextX <= 0) ||\n                                (currX >= ring.extents && nextX >= ring.extents) ||\n                                (currY <= 0 && nextY <= 0) ||\n                                (currY >= ring.extents && nextY >= ring.extents)\n                            );\n\n                            if (!isOutline && line.length !== 0) {\n                                lines.push(line);\n                                line = [];\n                            } else if (isOutline && line.length === 0) {\n                                webMercatorTile2TargetTile(\n                                    extents,\n                                    this.m_decodeInfo,\n                                    tmpV2.set(currX, currY),\n                                    tmpV3\n                                );\n                                line.push(tmpV3.x, tmpV3.y, tmpV3.z);\n\n                                if (needIndividualLineSegments) {\n                                    // Add next point as the end point of this line segment.\n                                    webMercatorTile2TargetTile(\n                                        extents,\n                                        this.m_decodeInfo,\n                                        tmpV2.set(nextX, nextY),\n                                        tmpV4\n                                    );\n                                    line.push(tmpV4.x, tmpV4.y, tmpV4.z);\n\n                                    segmentOffsets!.push(lastSegmentOffset);\n\n                                    // Compute length of segment and whole line to scale down later.\n                                    const segmentLength = tmpV3.distanceTo(tmpV4);\n                                    ringLength += segmentLength;\n                                    lastSegmentOffset += segmentLength;\n                                    segmentOffsets!.push(lastSegmentOffset);\n                                }\n                            }\n                            if (isOutline && !needIndividualLineSegments) {\n                                webMercatorTile2TargetTile(\n                                    extents,\n                                    this.m_decodeInfo,\n                                    tmpV2.set(nextX, nextY),\n                                    tmpV3\n                                );\n                                line.push(tmpV3.x, tmpV3.y, tmpV3.z);\n                            }\n\n                            if (needIndividualLineSegments && line.length > 0 && ringLength > 0) {\n                                // Scale down each individual segment to range [0..1] for the whole\n                                // line.\n                                segmentOffsets!.forEach((offs, index) => {\n                                    segmentOffsets![index] = offs / ringLength;\n                                });\n\n                                // Close the line segment as a single line.\n                                lines.push(line);\n                                offsets!.push(segmentOffsets!);\n                            }\n                        }\n\n                        if (!needIndividualLineSegments && line.length > 0) {\n                            lines.push(line);\n                        }\n                    });\n\n                    if (lines.length === 0) {\n                        return;\n                    }\n\n                    this.applyLineTechnique(\n                        lineGeometry,\n                        technique,\n                        techniqueIndex,\n                        lineType,\n                        env.entries,\n                        lines,\n                        context,\n                        undefined,\n                        offsets!\n                    );\n                });\n            }\n        });\n    }\n\n    /**\n     * Creates the geometries that belongs to the [[Tile].\n     *\n     * @returns The [[DecodedTile]]\n     */\n    getDecodedTile(): DecodedTile {\n        this.createGeometries();\n        this.processSimpleLines(this.m_simpleLines);\n        this.processLines(this.m_solidLines);\n\n        const decodedTile: DecodedTile = {\n            techniques: this.m_styleSetEvaluator.decodedTechniques,\n            geometries: this.m_geometries,\n            decodeTime: undefined\n        };\n        if (this.m_textGeometries.length > 0) {\n            decodedTile.textGeometries = this.m_textGeometries;\n        }\n        if (this.m_poiGeometries.length > 0) {\n            decodedTile.poiGeometries = this.m_poiGeometries;\n        }\n        if (this.m_textPathGeometries.length > 0) {\n            decodedTile.textPathGeometries = this.m_textPathGeometries;\n        }\n        if (this.m_pathGeometries.length > 0) {\n            decodedTile.pathGeometries = this.m_pathGeometries;\n        }\n        if (this.m_sources.length !== 0) {\n            decodedTile.copyrightHolderIds = this.m_sources;\n        }\n        decodedTile.maxGeometryHeight = this.m_maxGeometryHeight;\n        return decodedTile;\n    }\n\n    /**\n     * Split the lines array into multiple parts if there are sharp corners. Reject parts that are\n     * too short to display the label text.\n     *\n     * @param {number[][]} lines Array containing the points of the paths.\n     * @param {number} minEstimatedLabelLengthSqr Minimum label size squared.\n     * @param {number} maxCornerAngle Maximum angle between consecutive path segments in radians.\n     * @returns The split and filtered lines array.\n     */\n    protected splitJaggyLines(\n        lines: number[][],\n        minEstimatedLabelLengthSqr: number,\n        maxCornerAngle: number\n    ): number[][] {\n        const validLines: number[][] = [];\n\n        const computeBoundingBoxSizeSqr = (\n            aLine: number[],\n            startIndex: number,\n            endIndex: number\n        ): number => {\n            let minX = Number.MAX_SAFE_INTEGER;\n            let maxX = Number.MIN_SAFE_INTEGER;\n            let minY = Number.MAX_SAFE_INTEGER;\n            let maxY = Number.MIN_SAFE_INTEGER;\n            for (let i = startIndex; i < endIndex; i += 3) {\n                const x = aLine[i];\n                const y = aLine[i + 1];\n                if (x < minX) {\n                    minX = x;\n                }\n                if (x > maxX) {\n                    maxX = x;\n                }\n                if (y < minY) {\n                    minY = y;\n                }\n                if (y > maxY) {\n                    maxY = y;\n                }\n            }\n\n            return (maxX - minX) * (maxX - minX) + (maxY - minY) * (maxY - minY);\n        };\n\n        // Work on a copy of the path.\n        const pathsToCheck = lines.slice();\n\n        while (pathsToCheck.length > 0) {\n            const path = pathsToCheck.pop();\n\n            if (path === undefined || path.length < 6) {\n                continue;\n            }\n\n            let splitIndex = -1;\n\n            for (let i = 0; i < path.length - 3; i += 3) {\n                tempP0.set(path[i], path[i + 1]);\n                tempP1.set(path[i + 3], path[i + 4]);\n                const tangent = tempP1.sub(tempP0).normalize();\n\n                if (i > 0) {\n                    const theta = Math.atan2(\n                        tempPreviousTangent.x * tangent.y - tangent.x * tempPreviousTangent.y,\n                        tangent.dot(tempPreviousTangent)\n                    );\n\n                    if (Math.abs(theta) > maxCornerAngle) {\n                        splitIndex = i;\n                        break;\n                    }\n                }\n                tempPreviousTangent.set(tangent.x, tangent.y);\n            }\n\n            if (splitIndex > 0) {\n                // Estimate if the first part of the path is long enough for the label.\n                const firstPathLengthSqr = computeBoundingBoxSizeSqr(path, 0, splitIndex + 3);\n                // Estimate if the second part of the path is long enough for the label.\n                const secondPathLengthSqr = computeBoundingBoxSizeSqr(\n                    path,\n                    splitIndex,\n                    path.length\n                );\n\n                if (firstPathLengthSqr > minEstimatedLabelLengthSqr) {\n                    // Split off the valid first path points with a clone of the path.\n                    validLines.push(path.slice(0, splitIndex + 3));\n                }\n\n                if (secondPathLengthSqr > minEstimatedLabelLengthSqr) {\n                    // Now process the second part of the path, it may have to be split\n                    // again.\n                    pathsToCheck.push(path.slice(splitIndex));\n                }\n            } else {\n                // Estimate if the path is long enough for the label, otherwise ignore\n                // it for rendering text. First, compute the bounding box in world\n                // coordinates.\n                const pathLengthSqr = computeBoundingBoxSizeSqr(path, 0, path.length);\n\n                if (pathLengthSqr > minEstimatedLabelLengthSqr) {\n                    validLines.push(path);\n                }\n            }\n        }\n\n        return validLines;\n    }\n\n    private getTextureCoordinateType(technique: Technique): TextureCoordinateType | undefined {\n        // Set TileSpace coordinate type to generate texture coordinates for the displacement map\n        // used in elevation overlay.\n        if (\n            (isFillTechnique(technique) ||\n                isSolidLineTechnique(technique) ||\n                isExtrudedPolygonTechnique(technique)) &&\n            this.m_enableElevationOverlay\n        ) {\n            return TextureCoordinateType.TileSpace;\n        }\n\n        return textureCoordinateType(technique);\n    }\n\n    private getComputeTexCoordsFunc(technique: Technique): TexCoordsFunction | undefined {\n        const texCoordType = this.getTextureCoordinateType(technique);\n\n        return texCoordType === TextureCoordinateType.TileSpace\n            ? (tilePos: THREE.Vector2, tileExtents: number) => {\n                  const { x: u, y: v } = new THREE.Vector2()\n                      .copy(tilePos)\n                      .divideScalar(tileExtents);\n                  return { u, v: 1 - v };\n              }\n            : texCoordType === TextureCoordinateType.EquirectangularSpace\n            ? (tilePos: THREE.Vector2, extents: number) => {\n                  const worldPos = tile2world(extents, this.m_decodeInfo, tilePos, false, tmpV2r);\n                  const { x: u, y: v } = normalizedEquirectangularProjection.reprojectPoint(\n                      webMercatorProjection,\n                      new THREE.Vector3(worldPos.x, worldPos.y, 0)\n                  );\n                  return { u, v };\n              }\n            : undefined;\n    }\n\n    private applyLineTechnique(\n        linesGeometry: LinesGeometry[],\n        technique: IndexedTechnique,\n        techniqueIndex: number,\n        lineType = LineType.Complex,\n        featureAttributes: AttributeMap,\n        lines: number[][],\n        context: AttrEvaluationContext,\n        uvs?: number[][],\n        offsets?: number[][]\n    ): void {\n        let lineGroup: LineGroup;\n        const lineGroupGeometries = linesGeometry.find(aLine => aLine.technique === techniqueIndex);\n        const hasNormalsAndUvs = uvs !== undefined;\n        if (lineGroupGeometries === undefined) {\n            lineGroup = new LineGroup(hasNormalsAndUvs, undefined, lineType === LineType.Simple);\n            const aLine: LinesGeometry = {\n                type: lineType === LineType.Complex ? GeometryType.SolidLine : GeometryType.Line,\n                technique: techniqueIndex,\n                lines: lineGroup\n            };\n\n            const techniqueTransient = evaluateTechniqueAttr<boolean>(\n                context,\n                technique.transient,\n                false\n            );\n            if (!techniqueTransient && this.m_gatherFeatureAttributes) {\n                // if this technique is transient, do not save the featureIds with the geometry\n                aLine.objInfos = [featureAttributes];\n                aLine.featureStarts = [0];\n            }\n\n            linesGeometry.push(aLine);\n        } else {\n            lineGroup = lineGroupGeometries.lines;\n\n            if (\n                this.m_gatherFeatureAttributes &&\n                lineGroupGeometries.objInfos &&\n                lineGroupGeometries.featureStarts\n            ) {\n                // Add ID to tag the geometry, also provide the current length of the index\n                // attribute\n                lineGroupGeometries.objInfos.push(featureAttributes);\n                lineGroupGeometries.featureStarts.push(lineGroup.indices.length);\n            }\n        }\n        let i = 0;\n        lines.forEach(aLine => {\n            lineGroup.add(\n                this.m_decodeInfo.center,\n                aLine,\n                this.projection,\n                offsets ? offsets[i] : undefined,\n                uvs ? uvs[i] : undefined\n            );\n            i++;\n        });\n    }\n\n    private applyPolygonTechnique(\n        polygons: Ring[][],\n        technique: Technique,\n        techniqueIndex: number,\n        featureId: number | undefined,\n        context: AttrEvaluationContext,\n        extents: number\n    ): void {\n        const isExtruded = isExtrudedPolygonTechnique(technique);\n\n        const geometryType = isExtruded ? GeometryType.ExtrudedPolygon : GeometryType.Polygon;\n        const meshBuffers = this.findOrCreateMeshBuffers(techniqueIndex, geometryType);\n\n        if (meshBuffers === undefined) {\n            return;\n        }\n\n        const extrudedPolygonTechnique = technique as ExtrudedPolygonTechnique;\n        const fillTechnique = technique as FillTechnique;\n        const boundaryWalls = extrudedPolygonTechnique.boundaryWalls !== false;\n\n        const isFilled = isFillTechnique(technique);\n        const texCoordType = this.getTextureCoordinateType(technique);\n\n        let height = evaluateTechniqueAttr<number>(context, extrudedPolygonTechnique.height);\n\n        let floorHeight = evaluateTechniqueAttr<number>(\n            context,\n            extrudedPolygonTechnique.floorHeight\n        );\n\n        if (height === undefined) {\n            // Get the height values for the footprint and extrusion.\n            const featureHeight = context.env.lookup(\"height\") as number;\n            const styleSetDefaultHeight = evaluateTechniqueAttr<number>(\n                context,\n                // tslint:disable-next-line: deprecation\n                extrudedPolygonTechnique.defaultHeight\n            );\n            height =\n                featureHeight !== undefined\n                    ? featureHeight\n                    : styleSetDefaultHeight !== undefined\n                    ? styleSetDefaultHeight\n                    : 0;\n        }\n\n        if (floorHeight === undefined) {\n            const featureMinHeight = context.env.lookup(\"min_height\") as number;\n            floorHeight = featureMinHeight !== undefined && !isFilled ? featureMinHeight : 0;\n        }\n\n        // Prevent that extruded buildings are completely flat (can introduce errors in normal\n        // computation and extrusion).\n        height = Math.max(floorHeight + ExtrusionFeatureDefs.MIN_BUILDING_HEIGHT, height);\n\n        const styleSetConstantHeight = getOptionValue(\n            extrudedPolygonTechnique.constantHeight,\n            false\n        );\n\n        this.m_decodeInfo.tileBounds.getCenter(tempTileOrigin);\n\n        const {\n            positions,\n            normals,\n            textureCoordinates,\n            colors,\n            extrusionAxis,\n            indices,\n            edgeIndices,\n            groups\n        } = meshBuffers;\n\n        const featureStride = texCoordType !== undefined ? 4 : 2;\n        const vertexStride = featureStride + 2;\n        const isSpherical = this.m_decodeInfo.targetProjection.type === ProjectionType.Spherical;\n\n        const edgeWidth = isExtruded\n            ? extrudedPolygonTechnique.lineWidth || 0.0\n            : isFilled\n            ? fillTechnique.lineWidth || 0.0\n            : 0.0;\n        const hasEdges = edgeWidth > 0.0;\n\n        let color: THREE.Color | undefined;\n        if (isExtrudedPolygonTechnique(technique)) {\n            if (getOptionValue(technique.vertexColors, false)) {\n                let colorValue = evaluateTechniqueAttr<StyleColor>(context, technique.color);\n                if (colorValue === undefined) {\n                    const featureColor = context.env.lookup(\"color\");\n                    if (this.isColorStringValid(featureColor)) {\n                        colorValue = String(featureColor);\n                    }\n                }\n                if (colorValue === undefined) {\n                    colorValue = evaluateTechniqueAttr<number | string>(\n                        context,\n                        technique.defaultColor,\n                        0x000000\n                    );\n                }\n\n                if (colorValue === undefined) {\n                    colorValue = 0x000000;\n                }\n                tmpColor.set(colorValue as any);\n\n                color = tmpColor;\n            }\n        }\n\n        for (const polygon of polygons) {\n            const startIndexCount = indices.length;\n\n            for (let ringIndex = 0; ringIndex < polygon.length; ) {\n                const vertices: number[] = [];\n                const polygonBaseVertex = positions.length / 3;\n\n                const { contour, winding } = polygon[ringIndex++];\n                for (let i = 0; i < contour.length / featureStride; ++i) {\n                    // Invert the Y component to preserve the correct winding without transforming\n                    // from webMercator's local to global space.\n                    for (let j = 0; j < featureStride; ++j) {\n                        vertices.push((j === 1 ? -1 : 1) * contour[i * featureStride + j]);\n                    }\n\n                    // Calculate nextEdge and nextWall.\n                    const nextIdx = (i + 1) % (contour.length / featureStride);\n                    const currX = contour[i * featureStride];\n                    const currY = contour[i * featureStride + 1];\n                    const nextX = contour[nextIdx * featureStride];\n                    const nextY = contour[nextIdx * featureStride + 1];\n                    const insideExtents = !(\n                        (currX <= 0 && nextX <= 0) ||\n                        (currX >= extents && nextX >= extents) ||\n                        (currY <= 0 && nextY <= 0) ||\n                        (currY >= extents && nextY >= extents)\n                    );\n\n                    vertices.push(\n                        insideExtents ? nextIdx : -1,\n                        boundaryWalls || insideExtents ? nextIdx : -1\n                    );\n                }\n\n                // Iterate over the inner rings. The inner rings have the opposite winding\n                // of the outer rings.\n                const holes: number[] = [];\n                while (ringIndex < polygon.length && polygon[ringIndex].winding !== winding) {\n                    const vertexOffset = vertices.length / vertexStride;\n                    holes.push(vertexOffset);\n\n                    const hole = polygon[ringIndex++].contour;\n                    for (let i = 0; i < hole.length / featureStride; ++i) {\n                        // Invert the Y component to preserve the correct winding without\n                        // transforming from webMercator's local to global space.\n                        for (let j = 0; j < featureStride; ++j) {\n                            vertices.push((j === 1 ? -1 : 1) * hole[i * featureStride + j]);\n                        }\n\n                        // Calculate nextEdge and nextWall.\n                        const nextIdx = (i + 1) % (hole.length / featureStride);\n                        const currX = hole[i * featureStride];\n                        const currY = hole[i * featureStride + 1];\n                        const nextX = hole[nextIdx * featureStride];\n                        const nextY = hole[nextIdx * featureStride + 1];\n                        const insideExtents = !(\n                            (currX <= 0 && nextX <= 0) ||\n                            (currX >= extents && nextX >= extents) ||\n                            (currY <= 0 && nextY <= 0) ||\n                            (currY >= extents && nextY >= extents)\n                        );\n\n                        vertices.push(\n                            insideExtents ? vertexOffset + nextIdx : -1,\n                            boundaryWalls || insideExtents ? vertexOffset + nextIdx : -1\n                        );\n                    }\n                }\n\n                try {\n                    // Triangulate the footprint polyline.\n                    const triangles = earcut(vertices, holes, vertexStride);\n                    const originalVertexCount = vertices.length / vertexStride;\n\n                    // Subdivide for spherical projections if needed.\n                    if (isSpherical) {\n                        const geom = new THREE.BufferGeometry();\n\n                        const positionArray = [];\n                        const uvArray = [];\n                        const edgeArray = [];\n                        const wallArray = [];\n\n                        // Transform to global webMercator coordinates to be able to reproject to\n                        // sphere.\n                        for (let i = 0; i < vertices.length; i += vertexStride) {\n                            const worldPos = tile2world(\n                                extents,\n                                this.m_decodeInfo,\n                                tmpV2.set(vertices[i], vertices[i + 1]),\n                                true,\n                                tmpV2r\n                            );\n                            positionArray.push(worldPos.x, worldPos.y, 0);\n                            if (texCoordType !== undefined) {\n                                uvArray.push(vertices[i + 2], vertices[i + 3]);\n                            }\n                            edgeArray.push(vertices[i + featureStride]);\n                            wallArray.push(vertices[i + featureStride + 1]);\n                        }\n\n                        // Create the temporary geometry used for subdivision.\n                        const posAttr = new THREE.BufferAttribute(\n                            new Float32Array(positionArray),\n                            3\n                        );\n                        geom.setAttribute(\"position\", posAttr);\n                        let uvAttr: THREE.BufferAttribute | undefined;\n                        if (texCoordType !== undefined) {\n                            uvAttr = new THREE.BufferAttribute(new Float32Array(uvArray), 2);\n                            geom.setAttribute(\"uv\", uvAttr);\n                        }\n                        const edgeAttr = new THREE.BufferAttribute(new Float32Array(edgeArray), 1);\n                        geom.setAttribute(\"edge\", edgeAttr);\n                        const wallAttr = new THREE.BufferAttribute(new Float32Array(wallArray), 1);\n                        geom.setAttribute(\"wall\", edgeAttr);\n                        const index = createIndexBufferAttribute(triangles, posAttr.count - 1);\n                        const indexAttr =\n                            index.type === \"uint32\"\n                                ? new THREE.Uint32BufferAttribute(index.buffer, 1)\n                                : new THREE.Uint16BufferAttribute(index.buffer, 1);\n                        geom.setIndex(indexAttr);\n\n                        // Increase tesselation of polygons for certain zoom levels\n                        // to remove mixed LOD cracks\n                        const zoomLevel = this.m_decodeInfo.tileKey.level;\n                        if (zoomLevel >= 3 && zoomLevel < 9) {\n                            const subdivision = Math.pow(2, 9 - zoomLevel);\n                            const { geoBox } = this.m_decodeInfo;\n                            const edgeModifier = new EdgeLengthGeometrySubdivisionModifier(\n                                subdivision,\n                                geoBox,\n                                SubdivisionMode.NoDiagonals,\n                                webMercatorProjection\n                            );\n                            edgeModifier.modify(geom);\n                        }\n\n                        // FIXME(HARP-5700): Subdivision modifier ignores texture coordinates.\n                        const modifier = new SphericalGeometrySubdivisionModifier(\n                            THREE.MathUtils.degToRad(10),\n                            webMercatorProjection\n                        );\n                        modifier.modify(geom);\n\n                        // Reassemble the vertex buffer, transforming the subdivided global\n                        // webMercator points back to local space.\n                        vertices.length = 0;\n                        triangles.length = 0;\n                        for (let i = 0; i < posAttr.array.length; i += 3) {\n                            const tilePos = world2tile(\n                                extents,\n                                this.m_decodeInfo,\n                                tmpV2.set(posAttr.array[i], posAttr.array[i + 1]),\n                                true,\n                                tmpV2r\n                            );\n                            vertices.push(tilePos.x, tilePos.y);\n                            if (texCoordType !== undefined) {\n                                vertices.push(uvAttr!.array[(i / 3) * 2]);\n                                vertices.push(uvAttr!.array[(i / 3) * 2 + 1]);\n                            }\n                            vertices.push(edgeAttr.array[i / 3]);\n                            vertices.push(wallAttr.array[i / 3]);\n                        }\n\n                        const geomIndex = geom.getIndex();\n                        if (geomIndex !== null) {\n                            triangles.push(...(geomIndex.array as Float32Array));\n                        }\n                    }\n\n                    // Add the footprint/roof vertices to the position buffer.\n                    tempVertNormal.set(0, 0, 1);\n\n                    // Assemble the vertex buffer.\n                    for (let i = 0; i < vertices.length; i += vertexStride) {\n                        webMercatorTile2TargetTile(\n                            extents,\n                            this.m_decodeInfo,\n                            tmpV2.set(vertices[i], vertices[i + 1]),\n                            tmpV3,\n                            true\n                        );\n\n                        let scaleFactor = 1.0;\n                        if (isExtruded && styleSetConstantHeight !== true) {\n                            tempVertOrigin.set(\n                                tempTileOrigin.x + tmpV3.x,\n                                tempTileOrigin.y + tmpV3.y,\n                                tempTileOrigin.z + tmpV3.z\n                            );\n                            scaleFactor = this.m_decodeInfo.targetProjection.getScaleFactor(\n                                tempVertOrigin\n                            );\n                        }\n                        this.m_maxGeometryHeight = Math.max(\n                            this.m_maxGeometryHeight,\n                            scaleFactor * height\n                        );\n\n                        if (isSpherical) {\n                            tempVertNormal\n                                .set(tmpV3.x, tmpV3.y, tmpV3.z)\n                                .add(this.center)\n                                .normalize();\n                        }\n\n                        tempFootDisp.copy(tempVertNormal).multiplyScalar(floorHeight * scaleFactor);\n                        tempRoofDisp.copy(tempVertNormal).multiplyScalar(height * scaleFactor);\n                        positions.push(\n                            tmpV3.x + tempFootDisp.x,\n                            tmpV3.y + tempFootDisp.y,\n                            tmpV3.z + tempFootDisp.z\n                        );\n                        if (texCoordType !== undefined) {\n                            textureCoordinates.push(vertices[i + 2], vertices[i + 3]);\n                        }\n                        if (this.m_enableElevationOverlay) {\n                            normals.push(...tempVertNormal.toArray());\n                        }\n                        if (isExtruded) {\n                            positions.push(\n                                tmpV3.x + tempRoofDisp.x,\n                                tmpV3.y + tempRoofDisp.y,\n                                tmpV3.z + tempRoofDisp.z\n                            );\n                            extrusionAxis.push(\n                                0.0,\n                                0.0,\n                                0.0,\n                                0.0,\n                                tempRoofDisp.x - tempFootDisp.x,\n                                tempRoofDisp.y - tempFootDisp.y,\n                                tempRoofDisp.z - tempFootDisp.z,\n                                1.0\n                            );\n                            if (texCoordType !== undefined) {\n                                textureCoordinates.push(vertices[i + 2], vertices[i + 3]);\n                            }\n                            if (this.m_enableElevationOverlay) {\n                                normals.push(...tempVertNormal.toArray());\n                            }\n                            if (color !== undefined) {\n                                colors.push(color.r, color.g, color.b, color.r, color.g, color.b);\n                            }\n                        }\n                    }\n\n                    // Add the footprint/roof indices to the index buffer.\n                    for (let i = 0; i < triangles.length; i += 3) {\n                        if (isExtruded) {\n                            // When extruding we duplicate the vertices, so that all even vertices\n                            // belong to the bottom and all odd vertices belong to the top.\n                            const i0 = polygonBaseVertex + triangles[i + 0] * 2 + 1;\n                            const i1 = polygonBaseVertex + triangles[i + 1] * 2 + 1;\n                            const i2 = polygonBaseVertex + triangles[i + 2] * 2 + 1;\n                            indices.push(i0, i1, i2);\n                        } else {\n                            const i0 = polygonBaseVertex + triangles[i + 0];\n                            const i1 = polygonBaseVertex + triangles[i + 1];\n                            const i2 = polygonBaseVertex + triangles[i + 2];\n                            indices.push(i0, i1, i2);\n                        }\n                    }\n\n                    // Assemble the index buffer for edges (follow vertices as linked list).\n                    if (hasEdges) {\n                        this.addEdges(\n                            polygonBaseVertex,\n                            originalVertexCount,\n                            vertexStride,\n                            featureStride,\n                            positions,\n                            vertices,\n                            edgeIndices,\n                            isExtruded,\n                            extrudedPolygonTechnique.footprint,\n                            extrudedPolygonTechnique.maxSlope\n                        );\n                    }\n                    if (isExtruded) {\n                        this.addWalls(\n                            polygonBaseVertex,\n                            originalVertexCount,\n                            vertexStride,\n                            featureStride,\n                            vertices,\n                            indices\n                        );\n                    }\n                } catch (err) {\n                    logger.error(`cannot triangulate geometry`, err);\n                }\n            }\n\n            if (this.m_gatherFeatureAttributes) {\n                meshBuffers.objInfos.push(context.env.entries);\n                meshBuffers.featureStarts.push(startIndexCount);\n            }\n\n            const count = indices.length - startIndexCount;\n            if (count > 0) {\n                groups.push({\n                    start: startIndexCount,\n                    count,\n                    technique: techniqueIndex\n                });\n            }\n        }\n    }\n\n    private createGeometries() {\n        this.m_meshBuffers.forEach((meshBuffers, techniqueIdx) => {\n            if (meshBuffers.positions.length === 0) {\n                return;\n            } // nothing to do\n\n            if (\n                !this.m_styleSetEvaluator.techniques ||\n                this.m_styleSetEvaluator.techniques.length <= techniqueIdx\n            ) {\n                throw new Error(\"Invalid technique index\");\n            }\n\n            const technique = this.m_styleSetEvaluator.techniques[techniqueIdx];\n            if (technique === undefined) {\n                return;\n            }\n\n            const positionElements = new Float32Array(meshBuffers.positions);\n\n            if (meshBuffers.texts.length > 0 && isTextTechnique(technique)) {\n                this.m_textGeometries.push({\n                    positions: {\n                        name: \"position\",\n                        type: \"float\",\n                        buffer: positionElements.buffer as ArrayBuffer,\n                        itemCount: 3\n                    },\n                    texts: meshBuffers.texts,\n                    technique: techniqueIdx,\n                    stringCatalog: meshBuffers.stringCatalog,\n                    objInfos: meshBuffers.objInfos\n                });\n                return;\n            }\n\n            if (meshBuffers.texts.length > 0 && isPoiTechnique(technique)) {\n                this.m_poiGeometries.push({\n                    positions: {\n                        name: \"position\",\n                        type: \"float\",\n                        buffer: positionElements.buffer as ArrayBuffer,\n                        itemCount: 3\n                    },\n                    texts: meshBuffers.texts,\n                    technique: techniqueIdx,\n                    stringCatalog: meshBuffers.stringCatalog,\n                    imageTextures: meshBuffers.imageTextures,\n                    objInfos: meshBuffers.objInfos\n                });\n                return;\n            }\n\n            if (meshBuffers.groups.length === 0) {\n                // create a default group containing all the vertices in the position attribute.\n\n                meshBuffers.groups.push({\n                    start: 0,\n                    count: positionElements.length / 3,\n                    technique: techniqueIdx\n                });\n            }\n\n            const vertexAttributes: BufferAttribute[] = [\n                {\n                    name: \"position\",\n                    buffer: positionElements.buffer,\n                    itemCount: 3,\n                    type: \"float\"\n                }\n            ];\n\n            const geometry: Geometry = {\n                type: meshBuffers.type,\n                vertexAttributes,\n                groups: meshBuffers.groups\n            };\n\n            if (meshBuffers.normals.length > 0) {\n                const normals = new Float32Array(meshBuffers.normals);\n                assert(\n                    normals.length === positionElements.length,\n                    \"length of normals buffer is different than the length of the \" +\n                        \"position buffer\"\n                );\n\n                vertexAttributes.push({\n                    name: \"normal\",\n                    buffer: normals.buffer,\n                    itemCount: 3,\n                    type: \"float\"\n                });\n            }\n\n            if (meshBuffers.colors.length > 0) {\n                const colors = new Float32Array(meshBuffers.colors);\n                assert(\n                    colors.length === positionElements.length,\n                    \"length of colors buffer is different than the length of the \" +\n                        \"position buffer\"\n                );\n\n                vertexAttributes.push({\n                    name: \"color\",\n                    buffer: colors.buffer,\n                    itemCount: 3,\n                    type: \"float\"\n                });\n            }\n\n            const positionCount = meshBuffers.positions.length / 3;\n\n            if (meshBuffers.textureCoordinates.length > 0) {\n                const texCoordCount = meshBuffers.textureCoordinates.length / 2;\n                assert(\n                    texCoordCount === positionCount,\n                    \"length of textureCoordinates buffer is different than the length of the\" +\n                        \"position buffer\"\n                );\n\n                const textureCoordinates = new Float32Array(meshBuffers.textureCoordinates);\n                vertexAttributes.push({\n                    name: \"uv\",\n                    buffer: textureCoordinates.buffer as ArrayBuffer,\n                    itemCount: 2,\n                    type: \"float\"\n                });\n            }\n\n            if (meshBuffers.extrusionAxis.length > 0) {\n                const extrusionAxis = new Float32Array(meshBuffers.extrusionAxis);\n                assert(\n                    extrusionAxis.length / 4 === positionElements.length / 3,\n                    \"length of extrusionAxis buffer is different than the length of the \" +\n                        \"position buffer\"\n                );\n\n                vertexAttributes.push({\n                    name: \"extrusionAxis\",\n                    buffer: extrusionAxis.buffer as ArrayBuffer,\n                    itemCount: 4,\n                    type: \"float\"\n                });\n            }\n\n            if (meshBuffers.indices.length > 0) {\n                geometry.index = createIndexBufferAttribute(meshBuffers.indices, positionCount - 1);\n            }\n\n            if (meshBuffers.edgeIndices.length > 0) {\n                geometry.edgeIndex = createIndexBufferAttribute(\n                    meshBuffers.edgeIndices,\n                    positionCount - 1,\n                    \"edgeIndex\"\n                );\n            }\n\n            geometry.featureStarts = meshBuffers.featureStarts;\n            geometry.objInfos = meshBuffers.objInfos;\n\n            this.m_geometries.push(geometry);\n        });\n    }\n\n    private processLines(linesArray: LinesGeometry[]) {\n        linesArray.forEach(linesGeometry => {\n            const { vertices, indices } = linesGeometry.lines;\n            const technique = linesGeometry.technique;\n            const buffer = new Float32Array(vertices).buffer as ArrayBuffer;\n            const index = createIndexBufferAttribute(\n                indices,\n                vertices.length / linesGeometry.lines.stride - 1\n            );\n            const attr: InterleavedBufferAttribute = {\n                type: \"float\",\n                stride: linesGeometry.lines.stride,\n                buffer,\n                attributes: linesGeometry.lines.vertexAttributes\n            };\n            const geometry: Geometry = {\n                type: GeometryType.SolidLine,\n                index,\n                interleavedVertexAttributes: [attr],\n                groups: [{ start: 0, count: indices.length, technique }],\n                vertexAttributes: [],\n                featureStarts: linesGeometry.featureStarts,\n                objInfos: linesGeometry.objInfos\n            };\n\n            this.m_geometries.push(geometry);\n        });\n    }\n\n    private processSimpleLines(linesArray: LinesGeometry[]) {\n        linesArray.forEach(linesGeometry => {\n            const { vertices, indices } = linesGeometry.lines;\n            const technique = linesGeometry.technique;\n            const buffer = new Float32Array(vertices).buffer as ArrayBuffer;\n            const attr: BufferAttribute = {\n                buffer,\n                itemCount: 3,\n                type: \"float\",\n                name: \"position\"\n            };\n            const geometry: Geometry = {\n                type: GeometryType.Line,\n                index: createIndexBufferAttribute(indices, vertices.length / attr.itemCount - 1),\n                vertexAttributes: [attr],\n                groups: [{ start: 0, count: indices.length, technique }],\n                featureStarts: linesGeometry.featureStarts,\n                objInfos: linesGeometry.objInfos\n            };\n\n            this.m_geometries.push(geometry);\n        });\n    }\n\n    private findOrCreateMeshBuffers(index: number, type: GeometryType): MeshBuffers | undefined {\n        let buffers = this.m_meshBuffers.get(index);\n\n        if (buffers !== undefined) {\n            if (buffers.type !== type) {\n                logger.error(`MeshBuffer has been created with wrong type \"${GeometryType[type]}\"\n                instead of \"${GeometryType[buffers.type]}\"`);\n                return undefined;\n            }\n            return buffers;\n        }\n        buffers = new MeshBuffers(type);\n        this.m_meshBuffers.set(index, buffers);\n        return buffers;\n    }\n\n    private processFeatureCommon(env: Env) {\n        const source = env.lookup(\"source\");\n        if (typeof source === \"string\" && source !== \"\") {\n            if (!this.m_sources.includes(source)) {\n                this.m_sources.push(source);\n            }\n        }\n    }\n\n    private isColorStringValid(color: Value | undefined): color is string {\n        return typeof color === \"string\" && color.length > 0;\n    }\n\n    private addEdges(\n        featureBaseVertex: number,\n        featureVertexCount: number,\n        vertexStride: number,\n        featureStride: number,\n        positions: number[],\n        vertices: number[],\n        indices: number[],\n        isExtruded: boolean,\n        hasFootprint?: boolean,\n        maxSlope?: number\n    ) {\n        const tmpEdgeA = new THREE.Vector3();\n        const tmpEdgeB = new THREE.Vector3();\n        let firstRingVertex: number | undefined;\n        let prevRingVertex: number | undefined;\n        let currRingVertex = 0;\n        let maxRingVertex = 0;\n\n        while (currRingVertex < featureVertexCount) {\n            while (currRingVertex !== firstRingVertex) {\n                if (firstRingVertex === undefined) {\n                    firstRingVertex = currRingVertex;\n                }\n                if (currRingVertex < featureVertexCount) {\n                    maxRingVertex = Math.max(maxRingVertex, currRingVertex);\n                }\n\n                const nextRingVertex = vertices[currRingVertex * vertexStride + featureStride];\n                if (nextRingVertex < 0) {\n                    break;\n                } else {\n                    if (!isExtruded) {\n                        indices.push(\n                            featureBaseVertex + currRingVertex,\n                            featureBaseVertex + nextRingVertex\n                        );\n                    } else {\n                        if (hasFootprint === true) {\n                            indices.push(\n                                featureBaseVertex + currRingVertex * 2,\n                                featureBaseVertex + nextRingVertex * 2\n                            );\n                        }\n                        indices.push(\n                            featureBaseVertex + currRingVertex * 2 + 1,\n                            featureBaseVertex + nextRingVertex * 2 + 1\n                        );\n\n                        if (maxSlope !== undefined) {\n                            if (prevRingVertex !== undefined) {\n                                const prevPos = (featureBaseVertex + prevRingVertex * 2) * 3;\n                                const currPos = (featureBaseVertex + currRingVertex * 2) * 3;\n                                const nextPos = (featureBaseVertex + nextRingVertex * 2) * 3;\n                                tmpEdgeA\n                                    .set(\n                                        positions[currPos] - positions[prevPos],\n                                        positions[currPos + 1] - positions[prevPos + 1],\n                                        positions[currPos + 2] - positions[prevPos + 2]\n                                    )\n                                    .normalize();\n                                tmpEdgeB\n                                    .set(\n                                        positions[nextPos] - positions[currPos],\n                                        positions[nextPos + 1] - positions[currPos + 1],\n                                        positions[nextPos + 2] - positions[currPos + 2]\n                                    )\n                                    .normalize();\n                                if (tmpEdgeA.dot(tmpEdgeB) <= maxSlope) {\n                                    indices.push(\n                                        featureBaseVertex + currRingVertex * 2,\n                                        featureBaseVertex + currRingVertex * 2 + 1\n                                    );\n                                }\n                            }\n                        } else {\n                            indices.push(\n                                featureBaseVertex + currRingVertex * 2,\n                                featureBaseVertex + currRingVertex * 2 + 1\n                            );\n                        }\n                    }\n                    prevRingVertex = currRingVertex;\n                    currRingVertex = nextRingVertex;\n                }\n            }\n            currRingVertex = maxRingVertex + 1;\n            firstRingVertex = undefined;\n            prevRingVertex = undefined;\n        }\n    }\n\n    private addWalls(\n        featureBaseVertex: number,\n        featureVertexCount: number,\n        vertexStride: number,\n        featureStride: number,\n        vertices: number[],\n        indices: number[]\n    ) {\n        let firstRingVertex: number | undefined;\n        let currRingVertex = 0;\n        let maxRingVertex = 0;\n\n        while (currRingVertex < featureVertexCount) {\n            while (currRingVertex !== firstRingVertex) {\n                if (firstRingVertex === undefined) {\n                    firstRingVertex = currRingVertex;\n                }\n                if (currRingVertex < featureVertexCount) {\n                    maxRingVertex = Math.max(maxRingVertex, currRingVertex);\n                }\n\n                const nextRingVertex = vertices[currRingVertex * vertexStride + featureStride + 1];\n                if (nextRingVertex < 0) {\n                    break;\n                } else {\n                    indices.push(\n                        featureBaseVertex + currRingVertex * 2,\n                        featureBaseVertex + currRingVertex * 2 + 1,\n                        featureBaseVertex + nextRingVertex * 2 + 1,\n                        featureBaseVertex + nextRingVertex * 2 + 1,\n                        featureBaseVertex + nextRingVertex * 2,\n                        featureBaseVertex + currRingVertex * 2\n                    );\n                }\n                currRingVertex = nextRingVertex;\n            }\n            currRingVertex = maxRingVertex + 1;\n            firstRingVertex = undefined;\n        }\n    }\n\n    private findRelativePositionInLine(p: THREE.Vector3, line: number[]): number {\n        let lineDist = Infinity;\n        let lineOffset = 0;\n        for (let i = 0; i < line.length; i += 4) {\n            // Find the closest point C in segment AB to point P.\n            tmpLine.set(\n                tmpPointA.set(line[i], line[i + 1], line[i + 2]),\n                tmpPointB.set(line[i + 4], line[i + 5], line[i + 6])\n            );\n            tmpLine.closestPointToPoint(p, true, tmpPointC);\n\n            // If P is in AB (or really close), save A as anchor point and C (to estimate distance\n            // from segment origin).\n            const dist = tmpPointC.distanceTo(p);\n            if (dist < lineDist) {\n                tmpPointD.copy(tmpPointC);\n                tmpPointE.copy(tmpPointA);\n                lineDist = dist;\n                lineOffset = line[i + 3];\n            }\n        }\n        // Return the relative position of P inside the line.\n        return lineOffset + tmpPointD.distanceTo(tmpPointE);\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Projection } from \"@here/harp-geoutils\";\nimport { assert } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\n// Preallocate temp variables used during line generation.\nconst tmpV = new THREE.Vector3();\nconst tmpNormal = new THREE.Vector3();\nconst tmpTangent0 = new THREE.Vector3();\nconst tmpTangent1 = new THREE.Vector3();\nconst tmpBitangent = new THREE.Vector3();\nconst SEGMENT_OFFSET = 0.1;\n\n/**\n * Describes vertex attribute parameters of interleaved buffer.\n */\ninterface VertexAttributeDescriptor {\n    name: string;\n    itemSize: number;\n    offset: number;\n}\n\ninterface VertexDescriptor {\n    attributes: VertexAttributeDescriptor[];\n    stride: number;\n}\n\n/**\n * Declares all the vertex attributes used for rendering a line using the [[SolidLineMaterial]].\n */\n\n/** Base line vertex attributes. */\nconst LINE_VERTEX_ATTRIBUTES: VertexDescriptor = {\n    attributes: [\n        // The \"extrusionCoord\" is a vec4 which represents:\n        // xy: Extrusion coordinates\n        // sign(xy): Extrusion direction\n        // z: Line length\n        { name: \"extrusionCoord\", itemSize: 3, offset: 0 },\n        { name: \"position\", itemSize: 3, offset: 3 },\n        { name: \"tangent\", itemSize: 3, offset: 6 },\n        { name: \"bitangent\", itemSize: 4, offset: 9 }\n    ],\n    stride: 13\n};\n\n/** Optional normal and uv coordinates. */\nconst NORMAL_UV_VERTEX_ATTRIBUTES: VertexDescriptor = {\n    attributes: [\n        { name: \"uv\", itemSize: 2, offset: LINE_VERTEX_ATTRIBUTES.stride },\n        { name: \"normal\", itemSize: 3, offset: LINE_VERTEX_ATTRIBUTES.stride + 2 }\n    ],\n    stride: 5\n};\n\n/** Base line vertex attributes plus normals and uv coordinates. */\nconst LINE_VERTEX_ATTRIBUTES_NUV: VertexDescriptor = {\n    attributes: [...LINE_VERTEX_ATTRIBUTES.attributes, ...NORMAL_UV_VERTEX_ATTRIBUTES.attributes],\n    stride: LINE_VERTEX_ATTRIBUTES.stride + NORMAL_UV_VERTEX_ATTRIBUTES.stride\n};\n\n/**\n * Declares all the vertex attributes used for rendering a line using the\n * [[HighPrecisionLineMaterial]].\n */\nconst HP_LINE_VERTEX_ATTRIBUTES: VertexDescriptor = {\n    attributes: [\n        { name: \"extrusionCoord\", itemSize: 2, offset: 0 },\n        { name: \"position\", itemSize: 3, offset: 2 },\n        { name: \"positionLow\", itemSize: 3, offset: 5 },\n        { name: \"tangent\", itemSize: 3, offset: 8 },\n        { name: \"bitangent\", itemSize: 4, offset: 11 }\n    ],\n    stride: 15\n};\n\n/** High precision line vertex attributes plus normals and uv coordinates. */\nconst HP_LINE_VERTEX_ATTRIBUTES_NUV: VertexDescriptor = {\n    attributes: [\n        ...HP_LINE_VERTEX_ATTRIBUTES.attributes,\n        ...NORMAL_UV_VERTEX_ATTRIBUTES.attributes\n    ],\n    stride: HP_LINE_VERTEX_ATTRIBUTES.stride + NORMAL_UV_VERTEX_ATTRIBUTES.stride\n};\n\n/**\n * Class that holds the vertex and index attributes for a [[Lines]] object.\n */\nexport class LineGeometry {\n    vertices: number[] = [];\n    vertexColors: number[] = [];\n    indices: number[] = [];\n}\n\nfunction getVertexDescriptor(hasNormalsAndUvs: boolean, highPrecision: boolean): VertexDescriptor {\n    if (highPrecision) {\n        return hasNormalsAndUvs ? HP_LINE_VERTEX_ATTRIBUTES_NUV : HP_LINE_VERTEX_ATTRIBUTES;\n    } else {\n        return hasNormalsAndUvs ? LINE_VERTEX_ATTRIBUTES_NUV : LINE_VERTEX_ATTRIBUTES;\n    }\n}\n\n/**\n * Creates a [[LineGeometry]] object out of a polyline.\n *\n * @param center Center of the polyline.\n * @param polyline Array of `numbers` describing a polyline.\n * @param offsets Array of `numbers` representing line segment offsets.\n * @param uvs Array of `numbers` representing texture coordinates.\n * @param colors Array of `numbers` describing a polyline's colors.\n * @param geometry [[LineGeometry]] object used to store the vertex and index attributes.\n * @param highPrecision If `true` will create high-precision vertex information.\n */\nexport function createLineGeometry(\n    center: THREE.Vector3,\n    polyline: ArrayLike<number>,\n    projection: Projection,\n    offsets?: ArrayLike<number>,\n    uvs?: ArrayLike<number>,\n    colors?: ArrayLike<number>,\n    geometry = new LineGeometry(),\n    highPrecision: boolean = false\n): LineGeometry {\n    if (polyline.length === 0) {\n        return geometry;\n    }\n\n    const stride = getVertexDescriptor(uvs !== undefined, highPrecision).stride;\n\n    const pointCount = polyline.length / 3;\n    const segments = new Array<number>(pointCount);\n    const tangents = new Array<number>(polyline.length - 3);\n    const baseVertex = geometry.vertices.length / stride;\n\n    const hasSegmentOffsets = offsets !== undefined && offsets.length > 0;\n    const hasTexCoords = uvs !== undefined && uvs.length > 0;\n    const vertexColors = colors !== undefined && colors.length && polyline.length;\n\n    assert(!hasSegmentOffsets || offsets!.length === pointCount);\n    assert(!hasTexCoords || uvs!.length / 2 === pointCount);\n    assert(!vertexColors || colors!.length === polyline.length);\n\n    // Compute segments and tangents.\n    let sum = SEGMENT_OFFSET;\n    segments[0] = sum;\n    for (let i = 0; i < pointCount - 1; ++i) {\n        let sqrLength = 0;\n        for (let j = 0; j < 3; ++j) {\n            const d = polyline[(i + 1) * 3 + j] - polyline[i * 3 + j];\n            tangents[i * 3 + j] = d;\n            sqrLength += d * d;\n        }\n        const len = Math.sqrt(sqrLength);\n        sum = sum + len;\n        segments[i + 1] = sum;\n    }\n\n    const lineCoverage = hasSegmentOffsets\n        ? Math.abs(offsets![offsets!.length - 1] - offsets![0])\n        : 1.0;\n    const lineLength = segments[segments.length - 1] / lineCoverage;\n\n    // Override the segments if offsets are explicitly provided.\n    if (hasSegmentOffsets) {\n        for (let i = 0; i < pointCount; ++i) {\n            segments[i] = offsets![i] * lineLength + SEGMENT_OFFSET;\n        }\n    }\n\n    // Check if we're working with a closed line.\n    let isClosed = true;\n    for (let j = 0; j < 3; ++j) {\n        isClosed = isClosed && polyline[j] === polyline[polyline.length - 3 + j];\n    }\n\n    const tmpVertices: number[] = [];\n\n    const addVertexPair = (\n        i: number,\n        T1: number,\n        T2: number,\n        segment: number,\n        extrusionCoord: number\n    ) => {\n        tmpVertices.length = 0;\n\n        // Store the segment and extrusionCoord attributes.\n        geometry.vertices.push(segment, extrusionCoord * -1, lineLength);\n        tmpVertices.push(segment, extrusionCoord * 1, lineLength);\n\n        // Store the position attribute (component-dependant).\n        for (let j = 0; j < 3; ++j) {\n            if (!highPrecision) {\n                geometry.vertices.push(polyline[i * 3 + j]);\n                tmpVertices.push(polyline[i * 3 + j]);\n            } else {\n                const highComp = Math.fround(polyline[i * 3 + j]);\n                const lowComp = polyline[i * 3 + j] - highComp;\n                geometry.vertices.push(highComp, lowComp);\n                tmpVertices.push(highComp, lowComp);\n            }\n            tmpNormal.setComponent(j, polyline[i * 3 + j]);\n        }\n\n        // Store the bitangent attribute (component-dependant).\n        for (let j = 0; j < 3; ++j) {\n            tmpTangent0.setComponent(j, tangents[T1 + j]);\n            tmpTangent1.setComponent(j, tangents[T2 + j]);\n        }\n        tmpTangent0.normalize();\n        geometry.vertices.push(tmpTangent0.x, tmpTangent0.y, tmpTangent0.z);\n        tmpVertices.push(tmpTangent0.x, tmpTangent0.y, tmpTangent0.z);\n        tmpNormal.add(center); // tmpNormal contains world position\n        projection.surfaceNormal(tmpNormal, tmpNormal);\n        const angle = computeBitangent(\n            tmpNormal,\n            tmpTangent0,\n            tmpTangent1.normalize(),\n            tmpBitangent\n        );\n        geometry.vertices.push(tmpBitangent.x, tmpBitangent.y, tmpBitangent.z, angle);\n        tmpVertices.push(tmpBitangent.x, tmpBitangent.y, tmpBitangent.z, angle);\n\n        if (hasTexCoords) {\n            // uvs\n            geometry.vertices.push(uvs![i * 2], uvs![i * 2 + 1]);\n            tmpVertices.push(uvs![i * 2], uvs![i * 2 + 1]);\n            // normals\n            geometry.vertices.push(tmpNormal.x, tmpNormal.y, tmpNormal.z);\n            tmpVertices.push(tmpNormal.x, tmpNormal.y, tmpNormal.z);\n        }\n\n        geometry.vertices.push(...tmpVertices);\n\n        // Add vertex colors (if supplied).\n        if (vertexColors) {\n            geometry.vertexColors.push(colors![i * 3], colors![i * 3 + 1], colors![i * 3 + 2]);\n            geometry.vertexColors.push(colors![i * 3], colors![i * 3 + 1], colors![i * 3 + 2]);\n        }\n    };\n\n    for (let i = 0; i < pointCount; ++i) {\n        // Retrieve the per-point tangents.\n        const T1 = isClosed && i === 0 ? tangents.length - 3 : Math.max(0, i - 1) * 3;\n        const T2 = isClosed && i === pointCount - 1 ? 0 : Math.min(i * 3, tangents.length - 3);\n\n        // Process v0 and v1.\n        if (i > 0) {\n            addVertexPair(i, T1, T2, segments[i - 1], segments[i]);\n        }\n\n        // Process v2 and v3.\n        if (i + 1 < pointCount) {\n            addVertexPair(\n                i,\n                T1,\n                T2,\n                segments[Math.min(i, segments.length - 1)] * -1,\n                segments[Math.min(i + 1, segments.length - 1)]\n            );\n        }\n    }\n\n    // Store the triangle indices in the final index buffer.\n    for (let i = 0; i < pointCount - 1; ++i) {\n        const base = baseVertex + i * 4;\n        geometry.indices.push(base, base + 1, base + 2, base + 2, base + 1, base + 3);\n    }\n\n    return geometry;\n}\n\n/**\n * Creates a [[LineGeometry]] object out of a polyline.\n *\n * @param polyline Array of `numbers` describing a polyline.\n * @param colors Array of `numbers` describing a polyline's colors.\n * @param geometry [[LineGeometry]] object used to store the vertex and index attributes.\n */\nexport function createSimpleLineGeometry(\n    polyline: ArrayLike<number>,\n    colors?: ArrayLike<number>,\n    geometry = new LineGeometry()\n): LineGeometry {\n    if (polyline.length === 0) {\n        return geometry;\n    }\n\n    const pointCount = polyline.length / 3;\n    let index = geometry.vertices.length / 3;\n\n    const vertexColors = colors !== undefined && colors.length && polyline.length;\n\n    for (let i = 0; i < pointCount; ++i, index++) {\n        if (i > 0) {\n            geometry.indices.push(index);\n        }\n        if (i < pointCount - 1) {\n            geometry.indices.push(index);\n        }\n        for (let j = 0; j < 3; ++j) {\n            geometry.vertices.push(polyline[i * 3 + j]);\n            if (vertexColors) {\n                geometry.vertexColors.push(colors![i * 3 + j]);\n            }\n        }\n    }\n\n    return geometry;\n}\n\n/**\n * Class used to render groups (or batches) of width-variable lines (in the same tile).\n */\nexport class LineGroup {\n    /**\n     * Adds all the attribute data needed to a [[BufferGeometry]] object for rendering `Lines`.\n     *\n     * @param vertices Array of vertex attributes.\n     * @param colors Array of vertex colors.\n     * @param indices Array of vertex indices.\n     * @param geometry [[BufferGeometry]] object which will store all the `Lines` attribute data.\n     * @param hasNormalsAnUvs Whether vertices have normal and uv coordinates as attributes.\n     * @param highPrecision If `true` will create high-precision vertex information.\n     * @param isSimple `true` to create simple (nonsolid, nonextruded) lines. Defaults to `false`.\n     */\n    static createGeometry(\n        vertices: ArrayLike<number>,\n        colors: ArrayLike<number>,\n        indices: ArrayLike<number>,\n        geometry: THREE.BufferGeometry,\n        hasNormalsAndUvs: boolean = false,\n        highPrecision = false,\n        isSimple = false\n    ): THREE.BufferGeometry {\n        if (isSimple) {\n            geometry.setAttribute(\n                \"position\",\n                new THREE.BufferAttribute(new Float32Array(vertices), 3)\n            );\n            if (colors.length === vertices.length) {\n                geometry.setAttribute(\n                    \"color\",\n                    new THREE.BufferAttribute(new Float32Array(colors), 3)\n                );\n            }\n            geometry.setIndex(new THREE.BufferAttribute(new Uint32Array(indices), 1));\n            return geometry;\n        } else {\n            const vertexDescriptor = getVertexDescriptor(hasNormalsAndUvs, highPrecision);\n\n            const buffer = new THREE.InterleavedBuffer(\n                new Float32Array(vertices),\n                vertexDescriptor.stride\n            );\n            vertexDescriptor.attributes.forEach(descr => {\n                const attribute = new THREE.InterleavedBufferAttribute(\n                    buffer,\n                    descr.itemSize,\n                    descr.offset,\n                    false\n                );\n                geometry.setAttribute(descr.name, attribute);\n            });\n            if (colors.length === vertices.length) {\n                geometry.setAttribute(\n                    \"color\",\n                    new THREE.BufferAttribute(new Float32Array(colors), 3)\n                );\n            }\n\n            geometry.setIndex(new THREE.BufferAttribute(new Uint32Array(indices), 1));\n\n            return geometry;\n        }\n    }\n\n    private readonly m_geometry: LineGeometry;\n\n    constructor(\n        readonly hasNormalsAndUvs: boolean = false,\n        readonly highPrecision: boolean = false,\n        readonly isSimple: boolean = false\n    ) {\n        this.m_geometry = new LineGeometry();\n    }\n\n    /**\n     * Clears the list of line strips.\n     */\n    clear() {\n        this.m_geometry.vertices = [];\n        this.m_geometry.vertexColors = [];\n        this.m_geometry.indices = [];\n    }\n\n    /**\n     * Add the given points to this line group.\n     *\n     * @param center World center of the provided points.\n     * @param points Sequence of (x,y,z) coordinates.\n     * @param offsets Sequence of line segment offsets.\n     * @param uvs Sequence of (u,v) texture coordinates.\n     * @param colors Sequence of (r,g,b) color components.\n     */\n    add(\n        center: THREE.Vector3,\n        points: ArrayLike<number>,\n        projection: Projection,\n        offsets?: ArrayLike<number>,\n        uvs?: ArrayLike<number>,\n        colors?: ArrayLike<number>\n    ): this {\n        if (!this.isSimple) {\n            assert(!this.hasNormalsAndUvs || uvs !== undefined);\n            createLineGeometry(\n                center,\n                points,\n                projection,\n                offsets,\n                uvs,\n                colors,\n                this.m_geometry,\n                this.highPrecision\n            );\n        } else {\n            createSimpleLineGeometry(points, colors, this.m_geometry);\n        }\n        return this;\n    }\n\n    /**\n     * Returns the list of vertices.\n     */\n    get vertices(): number[] {\n        return this.m_geometry.vertices;\n    }\n\n    /**\n     * Returns the list of vertex colors.\n     */\n    get vertexColors(): number[] {\n        return this.m_geometry.vertexColors;\n    }\n\n    /**\n     * Returns the list of indices.\n     */\n    get indices(): number[] {\n        return this.m_geometry.indices;\n    }\n\n    /**\n     * Returns the list of [[VertexAttributeDescriptor]]s.\n     */\n    get vertexAttributes(): VertexAttributeDescriptor[] {\n        return getVertexDescriptor(this.hasNormalsAndUvs, this.highPrecision).attributes;\n    }\n\n    /**\n     * Returns the vertex attribute stride.\n     */\n    get stride(): number {\n        return getVertexDescriptor(this.hasNormalsAndUvs, this.highPrecision).stride;\n    }\n\n    /**\n     * Creates a three.js geometry.\n     */\n    createGeometry(geometry?: THREE.BufferGeometry): THREE.BufferGeometry {\n        if (geometry === undefined) {\n            geometry = new THREE.BufferGeometry();\n        }\n        return LineGroup.createGeometry(\n            this.m_geometry.vertices,\n            this.m_geometry.vertexColors,\n            this.m_geometry.indices,\n            geometry,\n            this.hasNormalsAndUvs,\n            this.highPrecision\n        );\n    }\n}\n\nfunction computeBitangent(\n    n: THREE.Vector3,\n    t0: THREE.Vector3,\n    t1: THREE.Vector3,\n    bt: THREE.Vector3\n): number {\n    let angle = 0;\n    if (!t0.equals(t1)) {\n        angle = Math.acos(t0.dot(t1)) * Math.sign(n.dot(tmpV.copy(t0).cross(t1)));\n        if (Number.isNaN(angle)) {\n            angle = 0;\n        }\n    }\n    bt.copy(t0)\n        .add(t1)\n        .normalize()\n        .cross(n)\n        .normalize();\n    return angle;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nconst UNIT_Z = new THREE.Vector3(0, 0, 1);\nconst POINTS = [0, 1, 2, 1, 3, 2];\nconst BEVEL_POINTS = [0, 1, 3, 3, 1, 2, 0, 3, 4, 5, 4, 3];\n\nconst SECTORS_IN_CIRCLE = 8;\nconst STEP = Math.PI / SECTORS_IN_CIRCLE;\n\n/**\n * Adds a half-circle geometry to original line\n *\n * @param x The line end X (used as circle center X)\n * @param y The line end Y (used as circle center Y)\n * @param lineAngle The cap incline angle\n * @param radius The cap (circle) radius\n * @param vertices The input vertex buffer (cap vertices are added there)\n * @param indices The input index buffer (cap indices are is added there)\n */\nfunction addCircle(\n    x: number,\n    y: number,\n    lineAngle: number,\n    radius: number,\n    vertices: number[],\n    indices: number[]\n) {\n    const baseVertex = vertices.length / 3;\n\n    // Add cap center to vertices directly (it doesn't need rotation)\n    vertices.push(x, y, 0);\n\n    for (let i = 0; i < SECTORS_IN_CIRCLE + 1; ++i) {\n        const angle = STEP * i + Math.PI / 2 + lineAngle; // Start angle is -90deg\n        vertices.push(x + radius * Math.cos(angle), y + radius * Math.sin(angle), 0);\n\n        indices.push(\n            baseVertex,\n            baseVertex + i + 1,\n            baseVertex + ((i + 1) % (SECTORS_IN_CIRCLE + 1)) + 1\n        );\n    }\n}\n\n/**\n * Returns the number of points in circle used for caps.\n *\n * @param lineWidth Width of line.\n */\n// tslint:disable-next-line:no-unused-variable\nexport function numCirclePoints(lineWidth: number): number {\n    return SECTORS_IN_CIRCLE + 1;\n}\n\n/**\n * Create a triangle mesh from the given polyline.\n *\n * @param points Sequence of (x,y,z) coordinates.\n * @param width The width of the extruded line.\n * @param vertices The output vertex buffer.\n * @param indices The output index buffer.\n * @param startWithCircle `true` if the line should start will a circle.\n * @param endWithCircle `true` if the line should end with a circle.\n */\nexport function triangulateLine(\n    points: ArrayLike<number>,\n    width: number,\n    vertices: number[],\n    indices: number[],\n    startWithCircle = true,\n    endWithCircle = startWithCircle\n) {\n    if (points.length < 3) {\n        return;\n    }\n\n    // This vector is used for computing cap angle\n    const angleVec = new THREE.Vector2();\n\n    if (startWithCircle) {\n        // Define lineAngle as (direction - origin) vector angle to X axis\n        const lineAngle =\n            points.length !== 3\n                ? angleVec.set(points[3] - points[0], points[4] - points[1]).angle()\n                : 0;\n\n        addCircle(points[0], points[1], lineAngle, width, vertices, indices);\n    }\n\n    const baseVertex = vertices.length / 3;\n\n    // bt = Bitangent (i.e. extrusion vector)\n    const prevBt = new THREE.Vector3();\n    const p = new THREE.Vector3(); // current point\n    const n = new THREE.Vector3(); // next point\n    const bt = new THREE.Vector3();\n    const averageBt = new THREE.Vector3();\n    const p0 = new THREE.Vector3();\n    const p1 = new THREE.Vector3();\n    const p2 = new THREE.Vector3();\n    const p3 = new THREE.Vector3();\n\n    const N = points.length / 3;\n\n    let vertexOffset = 0;\n    for (let i = 0; i < N; ++i) {\n        let useBevel = false;\n        p.set(points[i * 3], points[i * 3 + 1], points[i * 3 + 2]);\n\n        if (i + 1 < N) {\n            n.set(points[(i + 1) * 3], points[(i + 1) * 3 + 1], points[(i + 1) * 3 + 2]);\n\n            bt.copy(n)\n                .sub(p)\n                .normalize()\n                .cross(UNIT_Z);\n\n            averageBt.copy(bt);\n\n            if (i > 0) {\n                averageBt.add(prevBt).multiplyScalar(1.0 - 0.5 * bt.dot(prevBt));\n\n                useBevel = prevBt.angleTo(bt) > Math.PI / 2;\n\n                if (useBevel) {\n                    const inclineWidth = width / Math.cos(bt.angleTo(prevBt) / 2);\n\n                    p0.copy(bt)\n                        .add(prevBt)\n                        .normalize()\n                        .multiplyScalar(-inclineWidth)\n                        .add(p);\n\n                    p1.copy(prevBt)\n                        .multiplyScalar(width)\n                        .add(p);\n\n                    // p2 is used for \"miter\" connections\n                    p2.copy(bt)\n                        .add(prevBt)\n                        .normalize()\n                        .multiplyScalar(inclineWidth)\n                        .add(p);\n\n                    p3.copy(bt)\n                        .multiplyScalar(width)\n                        .add(p);\n                }\n            }\n\n            if (useBevel) {\n                vertices.push(\n                    p0.x,\n                    p0.y,\n                    p0.z,\n                    p1.x,\n                    p1.y,\n                    p1.z,\n                    p2.x,\n                    p2.y,\n                    p2.z,\n                    p3.x,\n                    p3.y,\n                    p3.z\n                );\n            } else {\n                p0.copy(averageBt)\n                    .multiplyScalar(-width)\n                    .add(p);\n\n                p1.copy(averageBt)\n                    .multiplyScalar(width)\n                    .add(p);\n\n                vertices.push(p0.x, p0.y, p0.z, p1.x, p1.y, p1.z);\n            }\n\n            prevBt.copy(bt);\n        } else {\n            p0.copy(prevBt)\n                .multiplyScalar(-width)\n                .add(p);\n\n            p1.copy(prevBt)\n                .multiplyScalar(width)\n                .add(p);\n\n            vertices.push(p0.x, p0.y, p0.z, p1.x, p1.y, p1.z);\n        }\n\n        if (i !== N - 1) {\n            (useBevel ? BEVEL_POINTS : POINTS).forEach(o =>\n                indices.push(baseVertex + vertexOffset + o)\n            );\n            vertexOffset += useBevel ? 4 : 2;\n        }\n    }\n\n    if (endWithCircle) {\n        const lineAngle =\n            points.length !== 2\n                ? angleVec\n                      .set(\n                          points[(N - 3) * 3] - points[(N - 2) * 3],\n                          points[(N - 3) * 3 + 1] - points[(N - 2) * 3 + 1]\n                      )\n                      .angle()\n                : Math.PI;\n\n        addCircle(\n            points[(N - 2) * 3],\n            points[(N - 2) * 3 + 1],\n            lineAngle,\n            width,\n            vertices,\n            indices\n        );\n    }\n}\n\n/**\n * Reconstruct the original points of a line from the vertices of the triangulated line.\n *\n * @param inBuffer Buffer with vertices.\n * @param startOffset Start index, will differ from `0` if the line has caps.\n * @returns Buffer containing the original points of the triangulated line.\n */\nexport function reconstructLine(inBuffer: Float32Array, startOffset: number): Float32Array {\n    const outBuffer = new Float32Array(inBuffer.length / 2);\n\n    for (let i = startOffset * 3, i2 = i * 2; i < outBuffer.length; i += 3, i2 += 6) {\n        outBuffer[i] = inBuffer[i2] + (inBuffer[i2 + 3] - inBuffer[i2]) * 0.5;\n        outBuffer[i + 1] = inBuffer[i2 + 1] + (inBuffer[i2 + 3 + 1] - inBuffer[i2 + 1]) * 0.5;\n        outBuffer[i + 2] = inBuffer[i2 + 2] + (inBuffer[i2 + 3 + 2] - inBuffer[i2 + 2]) * 0.5;\n    }\n    return outBuffer;\n}\n\n/**\n * Extract the line width from a triangulated line.\n *\n * @param inBuffer Array of vertex elements of a triangulated line.\n * @param startIndex Start index, will differ from `0` if the line has caps.\n */\nexport function reconstructLineWidth(inBuffer: Float32Array, startIndex: number): number {\n    const xd = inBuffer[startIndex * 2 + 3] - inBuffer[startIndex * 2];\n    const yd = inBuffer[startIndex * 2 + 3 + 1] - inBuffer[startIndex * 2 + 1];\n    const zd = inBuffer[startIndex * 2 + 3 + 2] - inBuffer[startIndex * 2 + 2];\n\n    return Math.sqrt(xd * xd + yd * yd + zd * zd) * 0.5;\n}\n","'use strict';\n\nmodule.exports = earcut;\nmodule.exports.default = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 1 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim);\n            triangles.push(ear.i / dim);\n            triangles.push(next.i / dim);\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var p = ear.next.next;\n\n    while (p !== ear.prev) {\n        if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // triangle bbox; min & max are calculated like this for speed\n    var minTX = a.x < b.x ? (a.x < c.x ? a.x : c.x) : (b.x < c.x ? b.x : c.x),\n        minTY = a.y < b.y ? (a.y < c.y ? a.y : c.y) : (b.y < c.y ? b.y : c.y),\n        maxTX = a.x > b.x ? (a.x > c.x ? a.x : c.x) : (b.x > c.x ? b.x : c.x),\n        maxTY = a.y > b.y ? (a.y > c.y ? a.y : c.y) : (b.y > c.y ? b.y : c.y);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(minTX, minTY, minX, minY, invSize),\n        maxZ = zOrder(maxTX, maxTY, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim);\n            triangles.push(p.i / dim);\n            triangles.push(b.i / dim);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize);\n                earcutLinked(c, triangles, dim, minX, minY, invSize);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        eliminateHole(queue[i], outerNode);\n        outerNode = filterPoints(outerNode, outerNode.next);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    outerNode = findHoleBridge(hole, outerNode);\n    if (outerNode) {\n        var b = splitPolygon(outerNode, hole);\n\n        // filter collinear points around the cuts\n        filterPoints(outerNode, outerNode.next);\n        filterPoints(b, b.next);\n    }\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                if (x === hx) {\n                    if (hy === p.y) return p;\n                    if (hy === p.next.y) return p.next;\n                }\n                m = p.x < p.next.x ? p : p.next;\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    if (hx === qx) return m; // hole touches outer segment; pick leftmost endpoint\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m;\n\n    do {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if (locallyInside(p, hole) &&\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    } while (p !== stop);\n\n    return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = 32767 * (x - minX) * invSize;\n    y = 32767 * (y - minY) * invSize;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 &&\n           (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 &&\n           (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\n           (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    var o1 = sign(area(p1, q1, p2));\n    var o2 = sign(area(p1, q1, q2));\n    var o3 = sign(area(p2, q2, p1));\n    var o4 = sign(area(p2, q2, q1));\n\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertex nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = null;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Vector2 } from \"three\";\n\nconst tmpBA = new Vector2();\nconst tmpQP = new Vector2();\nconst tmpA = new Vector2();\nconst tmpB = new Vector2();\n\n/**\n * Clip the given polygon using the Sutherland-Hodgman algorithm.\n */\nexport function clipPolygon(polygon: Vector2[], clip: Vector2[]): Vector2[] {\n    if (polygon.length === 0) {\n        return polygon;\n    }\n    if (!polygon[0].equals(polygon[polygon.length - 1])) {\n        // close the polygon if needed.\n        polygon = [...polygon, polygon[0]];\n    }\n    let outputList = polygon;\n    for (let e = 0; e < clip.length; ++e) {\n        const p = clip[e];\n        const q = clip[(e + 1) % clip.length];\n        const inputList = outputList;\n        outputList = [];\n        for (let i = 0; i < inputList.length; ++i) {\n            const currentPoint = inputList[i];\n            const prevPoint = inputList[(i + inputList.length - 1) % inputList.length];\n            if (inside(currentPoint, p, q)) {\n                if (!inside(prevPoint, p, q)) {\n                    outputList.push(computeIntersection(prevPoint, currentPoint, p, q));\n                }\n                outputList.push(currentPoint);\n            } else if (inside(prevPoint, p, q)) {\n                outputList.push(computeIntersection(prevPoint, currentPoint, p, q));\n            }\n        }\n    }\n    return outputList;\n}\n\nfunction computeIntersection(\n    a: Vector2,\n    b: Vector2,\n    p: Vector2,\n    q: Vector2,\n    result = new Vector2()\n): Vector2 {\n    tmpBA.subVectors(b, a);\n    tmpQP.subVectors(q, p);\n    const c1 = a.cross(tmpBA);\n    const c2 = p.cross(tmpQP);\n    const D = tmpBA.cross(tmpQP);\n    const x = (tmpBA.x * c2 - tmpQP.x * c1) / D;\n    const y = (tmpBA.y * c2 - tmpQP.y * c1) / D;\n    return result.set(x, y).round();\n}\n\nfunction inside(point: Vector2, p: Vector2, q: Vector2) {\n    tmpA.subVectors(q, p);\n    tmpB.subVectors(point, p);\n    return tmpA.cross(tmpB) > 0;\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Box3Like, GeoBox, Projection, ProjectionType } from \"@here/harp-geoutils\";\nimport { assert } from \"@here/harp-utils\";\nimport { Vector3 } from \"three\";\nimport { SubdivisionModifier } from \"./SubdivisionModifier\";\n\nconst VERTEX_POSITION_CACHE = [new Vector3(), new Vector3()];\n\nexport enum SubdivisionMode {\n    /**\n     * Subdivide all edges\n     */\n    All,\n    /**\n     * Only subdivide horizontal and vertical edges\n     */\n    NoDiagonals\n}\n\n/**\n * The [[EdgeLengthGeometrySubdivisionModifier]] subdivides triangle mesh depending on\n * length of edges.\n */\nexport class EdgeLengthGeometrySubdivisionModifier extends SubdivisionModifier {\n    private m_projectedBox: Box3Like;\n    private m_maxLength: number;\n    private m_maxLengthX: number;\n    private m_maxLengthY: number;\n\n    /**\n     * Constructs a new [[EdgeLengthGeometrySubdivisionModifier]].\n     *\n     * @param subdivision The subdivision factor\n     * @param geoBox The geo bounding box of a tile\n     * @param subdivisionMode Configures what edges to divide\n     * @param projection The projection that defines the world space of this geometry.\n     */\n    constructor(\n        readonly subdivision: number,\n        readonly geoBox: GeoBox,\n        readonly subdivisionMode: SubdivisionMode = SubdivisionMode.All,\n        readonly projection: Projection\n    ) {\n        super();\n\n        assert(\n            projection.type === ProjectionType.Planar,\n            \"EdgeLengthGeometrySubdivisionModifier only supports planar projections\"\n        );\n\n        const northEast = projection.projectPoint(geoBox.northEast, VERTEX_POSITION_CACHE[0]);\n        const southWest = projection.projectPoint(geoBox.southWest, VERTEX_POSITION_CACHE[1]);\n        this.m_projectedBox = {\n            min: {\n                x: Math.min(northEast.x, southWest.x),\n                y: Math.min(northEast.y, southWest.y),\n                z: Math.min(northEast.z, southWest.z)\n            },\n            max: {\n                x: Math.max(northEast.x, southWest.x),\n                y: Math.max(northEast.y, southWest.y),\n                z: Math.max(northEast.z, southWest.z)\n            }\n        };\n        this.m_maxLengthX = (this.m_projectedBox.max.x - this.m_projectedBox.min.x) / subdivision;\n        this.m_maxLengthY = (this.m_projectedBox.max.y - this.m_projectedBox.min.y) / subdivision;\n\n        // Increase max length slightly to account for precision errors\n        if (this.subdivisionMode === SubdivisionMode.All) {\n            this.m_maxLengthX *= 1.1;\n            this.m_maxLengthY *= 1.1;\n        }\n        this.m_maxLength = Math.sqrt(\n            this.m_maxLengthX * this.m_maxLengthX + this.m_maxLengthY * this.m_maxLengthY\n        );\n    }\n\n    /**\n     * Return upper bound for length of diagonal edges\n     */\n    get maxLength() {\n        return this.m_maxLength;\n    }\n\n    /**\n     * Return upper bound for edge length in x direction\n     */\n    get maxLengthX() {\n        return this.m_maxLengthX;\n    }\n\n    /**\n     * Return upper bound for edge length in y direction\n     */\n    get maxLengthY() {\n        return this.m_maxLengthY;\n    }\n\n    /** @override */\n    protected shouldSplitTriangle(a: Vector3, b: Vector3, c: Vector3): number | undefined {\n        const shouldSplitAB = this.shouldSplitEdge(a, b);\n        const shouldSplitBC = this.shouldSplitEdge(b, c);\n        const shouldSplitCA = this.shouldSplitEdge(c, a);\n        const shouldSplit = shouldSplitAB || shouldSplitBC || shouldSplitCA;\n\n        if (!shouldSplit) {\n            return;\n        }\n\n        const ab = a.distanceTo(b);\n        const bc = b.distanceTo(c);\n        const ca = c.distanceTo(a);\n        const maxDistance = Math.max(\n            shouldSplitAB ? ab : 0,\n            shouldSplitBC ? bc : 0,\n            shouldSplitCA ? ca : 0\n        );\n        if (ab === maxDistance) {\n            return 0;\n        } else if (bc === maxDistance) {\n            return 1;\n        } else if (ca === maxDistance) {\n            return 2;\n        }\n\n        throw new Error(\"Could not split triangle.\");\n    }\n\n    private shouldSplitEdge(a: Vector3, b: Vector3): boolean {\n        switch (this.subdivisionMode) {\n            case SubdivisionMode.All:\n                return (\n                    (a.y === b.y && Math.abs(a.x - b.x) > this.m_maxLengthX) ||\n                    (a.x === b.x && Math.abs(a.y - b.y) > this.m_maxLengthY) ||\n                    a.distanceTo(b) > this.m_maxLength\n                );\n            case SubdivisionMode.NoDiagonals:\n                return (\n                    (a.y === b.y && Math.abs(a.x - b.x) > this.m_maxLengthX) ||\n                    (a.x === b.x && Math.abs(a.y - b.y) > this.m_maxLengthY)\n                );\n        }\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Projection, sphereProjection } from \"@here/harp-geoutils\";\nimport { Vector3 } from \"three\";\nimport { SubdivisionModifier } from \"./SubdivisionModifier\";\n\nconst VERTEX_POSITION_CACHE = [new Vector3(), new Vector3(), new Vector3()];\n\n/**\n * The [[SphericalGeometrySubdivisionModifier]] subdivides triangle mesh geometries positioned\n * on the surface of a sphere centered at `(0, 0, 0)`.\n */\nexport class SphericalGeometrySubdivisionModifier extends SubdivisionModifier {\n    /**\n     * Constructs a new [[SphericalGeometrySubdivisionModifier]].\n     *\n     * @param angle The maximum angle in radians between two vertices and the origin.\n     * @param projection The projection that defines the world space of this geometry.\n     */\n    constructor(readonly angle: number, readonly projection: Projection = sphereProjection) {\n        super();\n    }\n\n    /** @override */\n    protected shouldSplitTriangle(a: Vector3, b: Vector3, c: Vector3): number | undefined {\n        const aa = sphereProjection.reprojectPoint(this.projection, a, VERTEX_POSITION_CACHE[0]);\n        const bb = sphereProjection.reprojectPoint(this.projection, b, VERTEX_POSITION_CACHE[1]);\n        const cc = sphereProjection.reprojectPoint(this.projection, c, VERTEX_POSITION_CACHE[2]);\n\n        const alpha = aa.angleTo(bb);\n        const beta = bb.angleTo(cc);\n        const gamma = cc.angleTo(aa);\n\n        // find the maximum angle\n        const m = Math.max(alpha, Math.max(beta, gamma));\n\n        // split the triangle if needed.\n        if (m < this.angle) {\n            return undefined;\n        }\n\n        if (m === alpha) {\n            return 0;\n        } else if (m === beta) {\n            return 1;\n        } else if (m === gamma) {\n            return 2;\n        }\n\n        throw new Error(\"failed to split triangle\");\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport namespace ExtrusionFeatureDefs {\n    /**\n     * Minimum ratio value for extrusion effect\n     */\n    export const DEFAULT_RATIO_MIN: number = 0.0;\n    /**\n     * Maximum ratio value for extrusion effect\n     */\n    export const DEFAULT_RATIO_MAX: number = 1;\n\n    /**\n     * Buildings height used whenever no height-data is present or height is very small.\n     *\n     * Used to avoid z-fighting between ground plane and building.\n     */\n    export const MIN_BUILDING_HEIGHT = 0.01;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { MapEnv } from \"@here/harp-datasource-protocol/index-decoder\";\nimport { LoggerManager } from \"@here/harp-utils\";\nimport { OmvGenericFeatureModifier } from \"./OmvDataFilter\";\nimport { OmvFeatureFilterDescription, OmvFilterDescription } from \"./OmvDecoderDefs\";\n\nconst logger = LoggerManager.instance.create(\"OmvTomTomFeatureModifier\");\n\nconst DEFAULT_BUILDING_COLOR = \"#AAAAAA\";\nconst DEFAULT_DO_EXTRUDE_BUILDINGS = \"true\";\nconst DEFAULT_BUILDING_MIN_HEIGHT = \"2\";\nconst DEFAULT_BUILDING_HEIGHT = \"20\";\n\n/**\n * Modifies the MapEnv of the TomTom Vector Tiles to be similar to the OMV format, so that the same\n * theme files can be used.\n */\nexport class OmvTomTomFeatureModifier extends OmvGenericFeatureModifier {\n    constructor(description: OmvFeatureFilterDescription) {\n        super(description);\n    }\n\n    /** @override */\n    protected doProcessFeature(\n        itemsToProcess: OmvFilterDescription[],\n        itemsToIgnore: OmvFilterDescription[],\n        layer: string,\n        env: MapEnv,\n        defaultResult: boolean\n    ): boolean {\n        this.rewriteEnvironment(layer, env);\n        return super.doProcessFeature(itemsToProcess, itemsToIgnore, layer, env, defaultResult);\n    }\n\n    /**\n     * Rewrites the Environment to match the environment naming used in OMV.\n     *\n     * Does not cover roadlabels, as the roadlabels in the Tomtom format are delivered in a\n     * different format combined in the environment with the road line geometry, which is\n     * represented as two separate environment in the default format.\n     *\n     * @param layer\n     * @param env\n     */\n    private rewriteEnvironment(layer: string, env: MapEnv) {\n        // Rewriting landuse layers\n        if (this.isWood(layer)) {\n            this.updateEnvironment(env, \"landuse\", \"wood\");\n        } else if (this.isHospital(layer)) {\n            this.updateEnvironment(env, \"landuse\", \"hospital\");\n        } else if (this.isCemetery(layer)) {\n            this.updateEnvironment(env, \"landuse\", \"cemetery\");\n        } else if (this.isIndustrial(layer)) {\n            this.updateEnvironment(env, \"landuse\", \"industrial\");\n        } else if (this.isPark(layer)) {\n            this.updateEnvironment(env, \"landuse\", \"park\");\n        } else if (this.isBuiltup(layer)) {\n            this.updateEnvironment(env, \"landuse\", \"builtup\");\n            // Rewriting the water layer\n        } else if (this.isWater(layer)) {\n            this.updateEnvironment(env, \"water\");\n            // Rewriting the road label layer\n        } else if (this.isRoadLabel(layer)) {\n            this.updateEnvironment(env, \"road_label\");\n            // Rewriting road layers with category classes\n        } else if (this.isRoadPath(layer)) {\n            this.updateEnvironment(env, \"road\", \"path\");\n        } else if (this.isRoadStreet(layer)) {\n            this.updateEnvironment(env, \"road\", \"street\");\n        } else if (this.isRoadPrimary(layer)) {\n            this.updateEnvironment(env, \"road\", \"primary\");\n        } else if (this.isRoadSecondary(layer)) {\n            this.updateEnvironment(env, \"road\", \"secondary\");\n        } else if (this.isRailway(layer)) {\n            this.updateEnvironment(env, \"road\", \"major_rail\");\n        } else if (this.isFerry(layer)) {\n            this.updateEnvironment(env, \"road\", \"ferry\");\n            // Rewriting aeroway layer\n        } else if (this.isAeroway(layer)) {\n            this.updateEnvironment(env, \"aeroway\");\n            // Rewriting border layer\n        } else if (this.isBorder(layer)) {\n            this.updateEnvironment(env, \"admin\");\n            // Rewriting label layers\n        } else if (this.isCountryLabel(layer)) {\n            this.updateEnvironment(env, \"country_label\");\n        } else if (this.isCountyLabel(layer)) {\n            this.updateEnvironment(env, \"county_label\");\n        } else if (this.isRegionLabel(layer)) {\n            this.updateEnvironment(env, \"region_label\");\n        } else if (this.isStateLabel(layer)) {\n            this.updateEnvironment(env, \"state_label\");\n        } else if (this.isPlaceLabel(layer)) {\n            this.updateEnvironment(env, \"place_label\");\n        } else if (this.isWaterLabel(layer)) {\n            this.updateEnvironment(env, \"water_label\");\n        } else if (this.isMarineLabel(layer)) {\n            this.updateEnvironment(env, \"marine_label\");\n        } else if (this.isPoiLabel(layer)) {\n            this.updateEnvironment(env, \"poi_label\");\n            // Rewriting building layer\n        } else if (this.isBuilding(layer)) {\n            this.updateEnvironment(env, \"building\");\n            env.entries.color = DEFAULT_BUILDING_COLOR;\n            env.entries.extrude = DEFAULT_DO_EXTRUDE_BUILDINGS;\n            env.entries.min_height = DEFAULT_BUILDING_MIN_HEIGHT;\n            env.entries.height = DEFAULT_BUILDING_HEIGHT;\n        } else {\n            logger.info(`Not yet rewritten layer: ##${env.entries.$layer}## `);\n        }\n\n        // Add tunnel structure if its a tunnel\n        if (this.isTunnel(layer)) {\n            env.entries.structure = \"tunnel\";\n        }\n\n        //Add bridge structure if its a bridge\n        if (this.isBridge(layer)) {\n            env.entries.structure = \"bridge\";\n        }\n    }\n\n    private updateEnvironment(\n        env: MapEnv,\n        layer: string,\n        newClass?: string,\n        structure?: string\n    ): void {\n        env.entries.$layer = layer;\n        if (newClass !== undefined) {\n            env.entries.class = newClass;\n        }\n        if (structure !== undefined) {\n            env.entries.structure = structure;\n        }\n    }\n\n    private isWood(layer: string): boolean {\n        return layer === \"Woodland\" || layer === \"Moor or heathland\";\n    }\n\n    private isHospital(layer: string): boolean {\n        return layer === \"Hospital\";\n    }\n\n    private isCemetery(layer: string): boolean {\n        return layer === \"Cemetery\";\n    }\n\n    private isIndustrial(layer: string): boolean {\n        return layer.indexOf(\"Industrial\") >= 0 || layer === \"Airport\";\n    }\n\n    private isPark(layer: string): boolean {\n        return (\n            layer === \"Park\" ||\n            layer === \"City park\" ||\n            layer === \"National park\" ||\n            layer === \"Regional park\" ||\n            layer.indexOf(\"grass\") >= 0 ||\n            layer.indexOf(\"greens\") >= 0\n        );\n    }\n\n    private isBuiltup(layer: string): boolean {\n        return (\n            layer === \"Built-up area\" ||\n            layer === \"Town paved area\" ||\n            layer === \"Shopping\" ||\n            layer === \"University\" ||\n            layer === \"Stadium\" ||\n            layer.indexOf(\"ground\") > 0\n        );\n    }\n\n    private isWater(layer: string): boolean {\n        return (\n            layer === \"Other water\" ||\n            layer === \"Ocean or sea\" ||\n            layer === \"Ocean\" ||\n            layer === \"Lake\" ||\n            layer === \"Sea\" ||\n            layer === \"Town swimming pool\" ||\n            layer === \"River\"\n        );\n    }\n\n    private isRoadLabel(layer: string): boolean {\n        return layer.indexOf(\"road label\") >= 0;\n    }\n\n    private isRoadPath(layer: string): boolean {\n        return (\n            layer.indexOf(\"path\") > 0 ||\n            layer === \"Parking road\" ||\n            layer === \"Town walkway\" ||\n            layer === \"Pedestrian road\" ||\n            layer === \"Walkway road\" ||\n            layer === \"Town carriageway divider\" ||\n            layer === \"Runway\" ||\n            layer === \"Non public road\"\n        );\n    }\n\n    private isRoadStreet(layer: string): boolean {\n        return (\n            layer.indexOf(\"Minor local road\") >= 0 ||\n            layer.indexOf(\"minor local road\") >= 0 ||\n            layer.indexOf(\"Toll local road\") >= 0 ||\n            layer.indexOf(\"Local road\") >= 0\n        );\n    }\n    private isRoadPrimary(layer: string): boolean {\n        return (\n            layer.indexOf(\"Major local road\") >= 0 ||\n            layer.indexOf(\"Major road\") >= 0 ||\n            layer.indexOf(\"major road\") >= 0 ||\n            layer.indexOf(\"Motorway\") >= 0 ||\n            layer.indexOf(\"motorway\") >= 0 ||\n            layer.indexOf(\"International road\") >= 0 ||\n            layer.indexOf(\"international road\") >= 0\n        );\n    }\n\n    private isRoadSecondary(layer: string): boolean {\n        return (\n            layer.indexOf(\"connecting road\") >= 0 ||\n            layer.indexOf(\"Connecting road\") >= 0 ||\n            layer.indexOf(\"secondary road\") >= 0 ||\n            layer.indexOf(\"Secondary road\") >= 0\n        );\n    }\n\n    private isRailway(layer: string): boolean {\n        return layer === \"Railway\";\n    }\n\n    private isFerry(layer: string): boolean {\n        return layer === \"Ferry road\";\n    }\n\n    private isBorder(layer: string): boolean {\n        return layer.indexOf(\"border\") > 0;\n    }\n\n    private isCountryLabel(layer: string): boolean {\n        return layer === \"Country name\" || layer === \"Country label\";\n    }\n\n    private isStateLabel(layer: string): boolean {\n        return layer === \"City\" || layer.indexOf(\"city\") > 0;\n    }\n\n    private isRegionLabel(layer: string): boolean {\n        return layer === \"Town\";\n    }\n\n    private isCountyLabel(layer: string): boolean {\n        return layer === \"Village\";\n    }\n\n    private isPlaceLabel(layer: string): boolean {\n        return (\n            layer === \"Park\" ||\n            layer === \"Railway station\" ||\n            layer === \"Airport POI\" ||\n            layer === \"Town greens\"\n        );\n    }\n\n    private isWaterLabel(layer: string): boolean {\n        return (\n            layer === \"Ocean name\" || layer === \"River label\" || layer.indexOf(\"water label\") > 0\n        );\n    }\n\n    private isMarineLabel(layer: string): boolean {\n        return layer.indexOf(\"water label\") > 0;\n    }\n\n    private isPoiLabel(layer: string): boolean {\n        return (\n            layer === \"National park name\" ||\n            layer === \"Landmark label\" ||\n            layer.indexOf(\"label\") >= 0\n        );\n    }\n\n    private isAeroway(layer: string): boolean {\n        return layer === \"Airport\";\n    }\n\n    private isBuilding(layer: string): boolean {\n        return layer.indexOf(\"building\") >= 0;\n    }\n\n    private isTunnel(layer: string): boolean {\n        return layer.indexOf(\"tunnel\") >= 0;\n    }\n\n    private isBridge(layer: string): boolean {\n        return layer.indexOf(\"bridge\") >= 0;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { StyleSetEvaluator } from \"@here/harp-datasource-protocol/index-decoder\";\nimport { OmvFeatureFilter } from \"./OmvDataFilter\";\n\n/**\n * An [[OmvFeatureFilter]] implementation that queries [[StyleSetEvaluator]]\n * if given layers/features should be processed.\n *\n * Used in [[OmvDecoder]] to skip processing of layers/features that doesn't\n * have associated rules in style.\n *\n * @see [[StyleSetEvaluator.wantsFeature]]\n * @see [[StyleSetEvaluator.wantsLayer]]\n */\nexport class StyleSetDataFilter implements OmvFeatureFilter {\n    hasKindFilter: boolean = false;\n\n    constructor(readonly styleSetEvaluator: StyleSetEvaluator) {}\n\n    wantsLayer(layer: string, level: number): boolean {\n        return this.styleSetEvaluator.wantsLayer(layer);\n    }\n\n    wantsPointFeature(layer: string): boolean {\n        return this.styleSetEvaluator.wantsFeature(layer, \"point\");\n    }\n    wantsLineFeature(layer: string): boolean {\n        return this.styleSetEvaluator.wantsFeature(layer, \"line\");\n    }\n    wantsPolygonFeature(layer: string): boolean {\n        return this.styleSetEvaluator.wantsFeature(layer, \"polygon\");\n    }\n    wantsKind(): boolean {\n        return true;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { MapEnv, ValueMap } from \"@here/harp-datasource-protocol/lib/Env\";\nimport { GeoCoordinates, GeoPointLike, webMercatorProjection } from \"@here/harp-geoutils\";\nimport { ILogger } from \"@here/harp-utils\";\nimport { IGeometryProcessor, ILineGeometry, IPolygonGeometry } from \"./IGeometryProcessor\";\nimport { world2tile } from \"./OmvUtils\";\n\nimport * as THREE from \"three\";\nimport { DecodeInfo } from \"./DecodeInfo\";\nimport { OmvFeatureFilter } from \"./OmvDataFilter\";\nimport { OmvDataAdapter } from \"./OmvDecoder\";\n\nconst DEFAULT_EXTENTS = 4 * 1024;\n\ntype GeoJsonGeometry =\n    | GeoJsonLineStringGeometry\n    | GeoJsonMultiLineStringGeometry\n    | GeoJsonPolygonGeometry\n    | GeoJsonMultiPolygonGeometry\n    | GeoJsonPointGeometry\n    | GeoJsonMultiPointGeometry;\n\ninterface GeoJsonLineStringGeometry {\n    type: \"LineString\";\n    coordinates: GeoPointLike[];\n}\n\ninterface GeoJsonMultiLineStringGeometry {\n    type: \"MultiLineString\";\n    coordinates: GeoPointLike[][];\n}\n\ninterface GeoJsonPointGeometry {\n    type: \"Point\";\n    coordinates: GeoPointLike;\n}\n\ninterface GeoJsonMultiPointGeometry {\n    type: \"MultiPoint\";\n    coordinates: GeoPointLike[];\n}\n\ninterface GeoJsonPolygonGeometry {\n    type: \"Polygon\";\n    coordinates: GeoPointLike[][];\n}\n\ninterface GeoJsonMultiPolygonGeometry {\n    type: \"MultiPolygon\";\n    coordinates: GeoPointLike[][][];\n}\n\ninterface GeoJsonFeature {\n    id?: string;\n    properties: ValueMap;\n    geometry: GeoJsonGeometry;\n}\n\ninterface GeoJsonFeatureCollection {\n    type: \"FeatureCollection\";\n    features: GeoJsonFeature[];\n}\n\nfunction convertGeometryType(type: string): string {\n    switch (type) {\n        case \"LineString\":\n            return \"line\";\n        case \"MultiLineString\":\n            return \"line\";\n        case \"Polygon\":\n            return \"polygon\";\n        case \"MultiPolygon\":\n            return \"polygon\";\n        case \"Point\":\n            return \"point\";\n        case \"MultiPoint\":\n            return \"point\";\n        default:\n            return \"unknown\";\n    } // switch\n}\n\nconst worldP = new THREE.Vector3();\nconst localP = new THREE.Vector2();\n\n/**\n * Converts a `geoPoint` to local tile space.\n *\n * @param geoPoint The input [[GeoPointLike]].\n * @param decodeInfo The [[DecodeInfo]].\n * @hidden\n */\nfunction convertPoint(geoPoint: GeoPointLike, decodeInfo: DecodeInfo): THREE.Vector2 {\n    webMercatorProjection.projectPoint(GeoCoordinates.fromGeoPoint(geoPoint), worldP);\n    localP.set(worldP.x, worldP.y);\n    return world2tile(DEFAULT_EXTENTS, decodeInfo, localP, false, new THREE.Vector2());\n}\n\nfunction convertLineStringGeometry(\n    coordinates: GeoPointLike[],\n    decodeInfo: DecodeInfo\n): ILineGeometry {\n    const untiledPositions = coordinates.map(geoPoint => {\n        return GeoCoordinates.fromGeoPoint(geoPoint);\n    });\n\n    const positions = coordinates.map(geoPoint => convertPoint(geoPoint, decodeInfo));\n\n    return { untiledPositions, positions };\n}\n\nfunction convertLineGeometry(\n    geometry: GeoJsonLineStringGeometry | GeoJsonMultiLineStringGeometry,\n    decodeInfo: DecodeInfo\n): ILineGeometry[] {\n    if (geometry.type === \"LineString\") {\n        return [convertLineStringGeometry(geometry.coordinates, decodeInfo)];\n    }\n\n    return geometry.coordinates.map(lineString =>\n        convertLineStringGeometry(lineString, decodeInfo)\n    );\n}\n\nfunction convertRings(coordinates: GeoPointLike[][], decodeInfo: DecodeInfo): IPolygonGeometry {\n    const rings = coordinates.map(ring => {\n        const { positions } = convertLineStringGeometry(ring, decodeInfo);\n        return positions;\n    });\n    return { rings };\n}\n\nfunction convertPolygonGeometry(\n    geometry: GeoJsonPolygonGeometry | GeoJsonMultiPolygonGeometry,\n    decodeInfo: DecodeInfo\n): IPolygonGeometry[] {\n    if (geometry.type === \"Polygon\") {\n        return [convertRings(geometry.coordinates, decodeInfo)];\n    }\n\n    return geometry.coordinates.map(polygon => convertRings(polygon, decodeInfo));\n}\n\nfunction convertPointGeometry(\n    geometry: GeoJsonPointGeometry | GeoJsonMultiPointGeometry,\n    decodeInfo: DecodeInfo\n): THREE.Vector2[] {\n    if (geometry.type === \"Point\") {\n        return [convertPoint(geometry.coordinates, decodeInfo)];\n    }\n\n    return geometry.coordinates.map(geoPoint => convertPoint(geoPoint, decodeInfo));\n}\n\nexport class TiledGeoJsonDataAdapter implements OmvDataAdapter {\n    id = \"TiledGeoJsonDataAdapter\";\n\n    constructor(\n        readonly m_processor: IGeometryProcessor,\n        readonly dataFilter: OmvFeatureFilter,\n        readonly m_logger?: ILogger\n    ) {}\n\n    canProcess(featureCollection: Partial<GeoJsonFeatureCollection>): boolean {\n        return (\n            featureCollection &&\n            featureCollection.type === \"FeatureCollection\" &&\n            Array.isArray(featureCollection.features)\n        );\n    }\n\n    process(featureCollection: GeoJsonFeatureCollection, decodeInfo: DecodeInfo): void {\n        if (!Array.isArray(featureCollection.features) || featureCollection.features.length === 0) {\n            return;\n        }\n\n        const { tileKey } = decodeInfo;\n\n        const $level = tileKey.level;\n        const $zoom = Math.max(0, tileKey.level - (this.m_processor.storageLevelOffset || 0));\n        const $layer = \"geojson\";\n\n        for (const feature of featureCollection.features) {\n            const $geometryType = convertGeometryType(feature.geometry.type);\n\n            const env = new MapEnv({\n                ...feature.properties,\n                $layer,\n                $level,\n                $zoom,\n                $geometryType\n            });\n\n            switch (feature.geometry.type) {\n                case \"LineString\":\n                case \"MultiLineString\": {\n                    const geometry = convertLineGeometry(feature.geometry, decodeInfo);\n                    this.m_processor.processLineFeature(\n                        $layer,\n                        DEFAULT_EXTENTS,\n                        geometry,\n                        env,\n                        $level\n                    );\n                    break;\n                }\n                case \"Polygon\":\n                case \"MultiPolygon\": {\n                    const geometry = convertPolygonGeometry(feature.geometry, decodeInfo);\n                    this.m_processor.processPolygonFeature(\n                        $layer,\n                        DEFAULT_EXTENTS,\n                        geometry,\n                        env,\n                        $level\n                    );\n                    break;\n                }\n                case \"Point\":\n                case \"MultiPoint\": {\n                    const geometry = convertPointGeometry(feature.geometry, decodeInfo);\n                    this.m_processor.processPointFeature(\n                        $layer,\n                        DEFAULT_EXTENTS,\n                        geometry,\n                        env,\n                        $level\n                    );\n                    break;\n                }\n            }\n        }\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { TilerService, WorkerServiceManager } from \"@here/harp-mapview-decoder/index-worker\";\nimport { OMV_TILER_SERVICE_TYPE } from \"./OmvDecoderDefs\";\n\n/**\n * OMV tile decoder service.\n */\nexport class OmvTilerService {\n    /**\n     * Register[[OmvTiler]] service class in [[WorkerServiceManager]].\n     *\n     * Has to be called during initialization of decoder bundle.\n     */\n    static start() {\n        WorkerServiceManager.getInstance().register({\n            serviceType: OMV_TILER_SERVICE_TYPE,\n            factory: (serviceId: string) => TilerService.start(serviceId)\n        });\n    }\n}\n","\n// calculate simplification data using optimized Douglas-Peucker algorithm\n\nexport default function simplify(coords, first, last, sqTolerance) {\n    var maxSqDist = sqTolerance;\n    var mid = (last - first) >> 1;\n    var minPosToMid = last - first;\n    var index;\n\n    var ax = coords[first];\n    var ay = coords[first + 1];\n    var bx = coords[last];\n    var by = coords[last + 1];\n\n    for (var i = first + 3; i < last; i += 3) {\n        var d = getSqSegDist(coords[i], coords[i + 1], ax, ay, bx, by);\n\n        if (d > maxSqDist) {\n            index = i;\n            maxSqDist = d;\n\n        } else if (d === maxSqDist) {\n            // a workaround to ensure we choose a pivot close to the middle of the list,\n            // reducing recursion depth, for certain degenerate inputs\n            // https://github.com/mapbox/geojson-vt/issues/104\n            var posToMid = Math.abs(i - mid);\n            if (posToMid < minPosToMid) {\n                index = i;\n                minPosToMid = posToMid;\n            }\n        }\n    }\n\n    if (maxSqDist > sqTolerance) {\n        if (index - first > 3) simplify(coords, first, index, sqTolerance);\n        coords[index + 2] = maxSqDist;\n        if (last - index > 3) simplify(coords, index, last, sqTolerance);\n    }\n}\n\n// square distance from a point to a segment\nfunction getSqSegDist(px, py, x, y, bx, by) {\n\n    var dx = bx - x;\n    var dy = by - y;\n\n    if (dx !== 0 || dy !== 0) {\n\n        var t = ((px - x) * dx + (py - y) * dy) / (dx * dx + dy * dy);\n\n        if (t > 1) {\n            x = bx;\n            y = by;\n\n        } else if (t > 0) {\n            x += dx * t;\n            y += dy * t;\n        }\n    }\n\n    dx = px - x;\n    dy = py - y;\n\n    return dx * dx + dy * dy;\n}\n","\nexport default function createFeature(id, type, geom, tags) {\n    var feature = {\n        id: typeof id === 'undefined' ? null : id,\n        type: type,\n        geometry: geom,\n        tags: tags,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n    calcBBox(feature);\n    return feature;\n}\n\nfunction calcBBox(feature) {\n    var geom = feature.geometry;\n    var type = feature.type;\n\n    if (type === 'Point' || type === 'MultiPoint' || type === 'LineString') {\n        calcLineBBox(feature, geom);\n\n    } else if (type === 'Polygon' || type === 'MultiLineString') {\n        for (var i = 0; i < geom.length; i++) {\n            calcLineBBox(feature, geom[i]);\n        }\n\n    } else if (type === 'MultiPolygon') {\n        for (i = 0; i < geom.length; i++) {\n            for (var j = 0; j < geom[i].length; j++) {\n                calcLineBBox(feature, geom[i][j]);\n            }\n        }\n    }\n}\n\nfunction calcLineBBox(feature, geom) {\n    for (var i = 0; i < geom.length; i += 3) {\n        feature.minX = Math.min(feature.minX, geom[i]);\n        feature.minY = Math.min(feature.minY, geom[i + 1]);\n        feature.maxX = Math.max(feature.maxX, geom[i]);\n        feature.maxY = Math.max(feature.maxY, geom[i + 1]);\n    }\n}\n","\nimport simplify from './simplify';\nimport createFeature from './feature';\n\n// converts GeoJSON feature into an intermediate projected JSON vector format with simplification data\n\nexport default function convert(data, options) {\n    var features = [];\n    if (data.type === 'FeatureCollection') {\n        for (var i = 0; i < data.features.length; i++) {\n            convertFeature(features, data.features[i], options, i);\n        }\n\n    } else if (data.type === 'Feature') {\n        convertFeature(features, data, options);\n\n    } else {\n        // single geometry or a geometry collection\n        convertFeature(features, {geometry: data}, options);\n    }\n\n    return features;\n}\n\nfunction convertFeature(features, geojson, options, index) {\n    if (!geojson.geometry) return;\n\n    var coords = geojson.geometry.coordinates;\n    var type = geojson.geometry.type;\n    var tolerance = Math.pow(options.tolerance / ((1 << options.maxZoom) * options.extent), 2);\n    var geometry = [];\n    var id = geojson.id;\n    if (options.promoteId) {\n        id = geojson.properties[options.promoteId];\n    } else if (options.generateId) {\n        id = index || 0;\n    }\n    if (type === 'Point') {\n        convertPoint(coords, geometry);\n\n    } else if (type === 'MultiPoint') {\n        for (var i = 0; i < coords.length; i++) {\n            convertPoint(coords[i], geometry);\n        }\n\n    } else if (type === 'LineString') {\n        convertLine(coords, geometry, tolerance, false);\n\n    } else if (type === 'MultiLineString') {\n        if (options.lineMetrics) {\n            // explode into linestrings to be able to track metrics\n            for (i = 0; i < coords.length; i++) {\n                geometry = [];\n                convertLine(coords[i], geometry, tolerance, false);\n                features.push(createFeature(id, 'LineString', geometry, geojson.properties));\n            }\n            return;\n        } else {\n            convertLines(coords, geometry, tolerance, false);\n        }\n\n    } else if (type === 'Polygon') {\n        convertLines(coords, geometry, tolerance, true);\n\n    } else if (type === 'MultiPolygon') {\n        for (i = 0; i < coords.length; i++) {\n            var polygon = [];\n            convertLines(coords[i], polygon, tolerance, true);\n            geometry.push(polygon);\n        }\n    } else if (type === 'GeometryCollection') {\n        for (i = 0; i < geojson.geometry.geometries.length; i++) {\n            convertFeature(features, {\n                id: id,\n                geometry: geojson.geometry.geometries[i],\n                properties: geojson.properties\n            }, options, index);\n        }\n        return;\n    } else {\n        throw new Error('Input data is not a valid GeoJSON object.');\n    }\n\n    features.push(createFeature(id, type, geometry, geojson.properties));\n}\n\nfunction convertPoint(coords, out) {\n    out.push(projectX(coords[0]));\n    out.push(projectY(coords[1]));\n    out.push(0);\n}\n\nfunction convertLine(ring, out, tolerance, isPolygon) {\n    var x0, y0;\n    var size = 0;\n\n    for (var j = 0; j < ring.length; j++) {\n        var x = projectX(ring[j][0]);\n        var y = projectY(ring[j][1]);\n\n        out.push(x);\n        out.push(y);\n        out.push(0);\n\n        if (j > 0) {\n            if (isPolygon) {\n                size += (x0 * y - x * y0) / 2; // area\n            } else {\n                size += Math.sqrt(Math.pow(x - x0, 2) + Math.pow(y - y0, 2)); // length\n            }\n        }\n        x0 = x;\n        y0 = y;\n    }\n\n    var last = out.length - 3;\n    out[2] = 1;\n    simplify(out, 0, last, tolerance);\n    out[last + 2] = 1;\n\n    out.size = Math.abs(size);\n    out.start = 0;\n    out.end = out.size;\n}\n\nfunction convertLines(rings, out, tolerance, isPolygon) {\n    for (var i = 0; i < rings.length; i++) {\n        var geom = [];\n        convertLine(rings[i], geom, tolerance, isPolygon);\n        out.push(geom);\n    }\n}\n\nfunction projectX(x) {\n    return x / 360 + 0.5;\n}\n\nfunction projectY(y) {\n    var sin = Math.sin(y * Math.PI / 180);\n    var y2 = 0.5 - 0.25 * Math.log((1 + sin) / (1 - sin)) / Math.PI;\n    return y2 < 0 ? 0 : y2 > 1 ? 1 : y2;\n}\n","\nimport createFeature from './feature';\n\n/* clip features between two axis-parallel lines:\n *     |        |\n *  ___|___     |     /\n * /   |   \\____|____/\n *     |        |\n */\n\nexport default function clip(features, scale, k1, k2, axis, minAll, maxAll, options) {\n\n    k1 /= scale;\n    k2 /= scale;\n\n    if (minAll >= k1 && maxAll < k2) return features; // trivial accept\n    else if (maxAll < k1 || minAll >= k2) return null; // trivial reject\n\n    var clipped = [];\n\n    for (var i = 0; i < features.length; i++) {\n\n        var feature = features[i];\n        var geometry = feature.geometry;\n        var type = feature.type;\n\n        var min = axis === 0 ? feature.minX : feature.minY;\n        var max = axis === 0 ? feature.maxX : feature.maxY;\n\n        if (min >= k1 && max < k2) { // trivial accept\n            clipped.push(feature);\n            continue;\n        } else if (max < k1 || min >= k2) { // trivial reject\n            continue;\n        }\n\n        var newGeometry = [];\n\n        if (type === 'Point' || type === 'MultiPoint') {\n            clipPoints(geometry, newGeometry, k1, k2, axis);\n\n        } else if (type === 'LineString') {\n            clipLine(geometry, newGeometry, k1, k2, axis, false, options.lineMetrics);\n\n        } else if (type === 'MultiLineString') {\n            clipLines(geometry, newGeometry, k1, k2, axis, false);\n\n        } else if (type === 'Polygon') {\n            clipLines(geometry, newGeometry, k1, k2, axis, true);\n\n        } else if (type === 'MultiPolygon') {\n            for (var j = 0; j < geometry.length; j++) {\n                var polygon = [];\n                clipLines(geometry[j], polygon, k1, k2, axis, true);\n                if (polygon.length) {\n                    newGeometry.push(polygon);\n                }\n            }\n        }\n\n        if (newGeometry.length) {\n            if (options.lineMetrics && type === 'LineString') {\n                for (j = 0; j < newGeometry.length; j++) {\n                    clipped.push(createFeature(feature.id, type, newGeometry[j], feature.tags));\n                }\n                continue;\n            }\n\n            if (type === 'LineString' || type === 'MultiLineString') {\n                if (newGeometry.length === 1) {\n                    type = 'LineString';\n                    newGeometry = newGeometry[0];\n                } else {\n                    type = 'MultiLineString';\n                }\n            }\n            if (type === 'Point' || type === 'MultiPoint') {\n                type = newGeometry.length === 3 ? 'Point' : 'MultiPoint';\n            }\n\n            clipped.push(createFeature(feature.id, type, newGeometry, feature.tags));\n        }\n    }\n\n    return clipped.length ? clipped : null;\n}\n\nfunction clipPoints(geom, newGeom, k1, k2, axis) {\n    for (var i = 0; i < geom.length; i += 3) {\n        var a = geom[i + axis];\n\n        if (a >= k1 && a <= k2) {\n            newGeom.push(geom[i]);\n            newGeom.push(geom[i + 1]);\n            newGeom.push(geom[i + 2]);\n        }\n    }\n}\n\nfunction clipLine(geom, newGeom, k1, k2, axis, isPolygon, trackMetrics) {\n\n    var slice = newSlice(geom);\n    var intersect = axis === 0 ? intersectX : intersectY;\n    var len = geom.start;\n    var segLen, t;\n\n    for (var i = 0; i < geom.length - 3; i += 3) {\n        var ax = geom[i];\n        var ay = geom[i + 1];\n        var az = geom[i + 2];\n        var bx = geom[i + 3];\n        var by = geom[i + 4];\n        var a = axis === 0 ? ax : ay;\n        var b = axis === 0 ? bx : by;\n        var exited = false;\n\n        if (trackMetrics) segLen = Math.sqrt(Math.pow(ax - bx, 2) + Math.pow(ay - by, 2));\n\n        if (a < k1) {\n            // ---|-->  | (line enters the clip region from the left)\n            if (b > k1) {\n                t = intersect(slice, ax, ay, bx, by, k1);\n                if (trackMetrics) slice.start = len + segLen * t;\n            }\n        } else if (a > k2) {\n            // |  <--|--- (line enters the clip region from the right)\n            if (b < k2) {\n                t = intersect(slice, ax, ay, bx, by, k2);\n                if (trackMetrics) slice.start = len + segLen * t;\n            }\n        } else {\n            addPoint(slice, ax, ay, az);\n        }\n        if (b < k1 && a >= k1) {\n            // <--|---  | or <--|-----|--- (line exits the clip region on the left)\n            t = intersect(slice, ax, ay, bx, by, k1);\n            exited = true;\n        }\n        if (b > k2 && a <= k2) {\n            // |  ---|--> or ---|-----|--> (line exits the clip region on the right)\n            t = intersect(slice, ax, ay, bx, by, k2);\n            exited = true;\n        }\n\n        if (!isPolygon && exited) {\n            if (trackMetrics) slice.end = len + segLen * t;\n            newGeom.push(slice);\n            slice = newSlice(geom);\n        }\n\n        if (trackMetrics) len += segLen;\n    }\n\n    // add the last point\n    var last = geom.length - 3;\n    ax = geom[last];\n    ay = geom[last + 1];\n    az = geom[last + 2];\n    a = axis === 0 ? ax : ay;\n    if (a >= k1 && a <= k2) addPoint(slice, ax, ay, az);\n\n    // close the polygon if its endpoints are not the same after clipping\n    last = slice.length - 3;\n    if (isPolygon && last >= 3 && (slice[last] !== slice[0] || slice[last + 1] !== slice[1])) {\n        addPoint(slice, slice[0], slice[1], slice[2]);\n    }\n\n    // add the final slice\n    if (slice.length) {\n        newGeom.push(slice);\n    }\n}\n\nfunction newSlice(line) {\n    var slice = [];\n    slice.size = line.size;\n    slice.start = line.start;\n    slice.end = line.end;\n    return slice;\n}\n\nfunction clipLines(geom, newGeom, k1, k2, axis, isPolygon) {\n    for (var i = 0; i < geom.length; i++) {\n        clipLine(geom[i], newGeom, k1, k2, axis, isPolygon, false);\n    }\n}\n\nfunction addPoint(out, x, y, z) {\n    out.push(x);\n    out.push(y);\n    out.push(z);\n}\n\nfunction intersectX(out, ax, ay, bx, by, x) {\n    var t = (x - ax) / (bx - ax);\n    out.push(x);\n    out.push(ay + (by - ay) * t);\n    out.push(1);\n    return t;\n}\n\nfunction intersectY(out, ax, ay, bx, by, y) {\n    var t = (y - ay) / (by - ay);\n    out.push(ax + (bx - ax) * t);\n    out.push(y);\n    out.push(1);\n    return t;\n}\n","\nimport clip from './clip';\nimport createFeature from './feature';\n\nexport default function wrap(features, options) {\n    var buffer = options.buffer / options.extent;\n    var merged = features;\n    var left  = clip(features, 1, -1 - buffer, buffer,     0, -1, 2, options); // left world copy\n    var right = clip(features, 1,  1 - buffer, 2 + buffer, 0, -1, 2, options); // right world copy\n\n    if (left || right) {\n        merged = clip(features, 1, -buffer, 1 + buffer, 0, -1, 2, options) || []; // center world copy\n\n        if (left) merged = shiftFeatureCoords(left, 1).concat(merged); // merge left into center\n        if (right) merged = merged.concat(shiftFeatureCoords(right, -1)); // merge right into center\n    }\n\n    return merged;\n}\n\nfunction shiftFeatureCoords(features, offset) {\n    var newFeatures = [];\n\n    for (var i = 0; i < features.length; i++) {\n        var feature = features[i],\n            type = feature.type;\n\n        var newGeometry;\n\n        if (type === 'Point' || type === 'MultiPoint' || type === 'LineString') {\n            newGeometry = shiftCoords(feature.geometry, offset);\n\n        } else if (type === 'MultiLineString' || type === 'Polygon') {\n            newGeometry = [];\n            for (var j = 0; j < feature.geometry.length; j++) {\n                newGeometry.push(shiftCoords(feature.geometry[j], offset));\n            }\n        } else if (type === 'MultiPolygon') {\n            newGeometry = [];\n            for (j = 0; j < feature.geometry.length; j++) {\n                var newPolygon = [];\n                for (var k = 0; k < feature.geometry[j].length; k++) {\n                    newPolygon.push(shiftCoords(feature.geometry[j][k], offset));\n                }\n                newGeometry.push(newPolygon);\n            }\n        }\n\n        newFeatures.push(createFeature(feature.id, type, newGeometry, feature.tags));\n    }\n\n    return newFeatures;\n}\n\nfunction shiftCoords(points, offset) {\n    var newPoints = [];\n    newPoints.size = points.size;\n\n    if (points.start !== undefined) {\n        newPoints.start = points.start;\n        newPoints.end = points.end;\n    }\n\n    for (var i = 0; i < points.length; i += 3) {\n        newPoints.push(points[i] + offset, points[i + 1], points[i + 2]);\n    }\n    return newPoints;\n}\n","\n// Transforms the coordinates of each feature in the given tile from\n// mercator-projected space into (extent x extent) tile space.\nexport default function transformTile(tile, extent) {\n    if (tile.transformed) return tile;\n\n    var z2 = 1 << tile.z,\n        tx = tile.x,\n        ty = tile.y,\n        i, j, k;\n\n    for (i = 0; i < tile.features.length; i++) {\n        var feature = tile.features[i],\n            geom = feature.geometry,\n            type = feature.type;\n\n        feature.geometry = [];\n\n        if (type === 1) {\n            for (j = 0; j < geom.length; j += 2) {\n                feature.geometry.push(transformPoint(geom[j], geom[j + 1], extent, z2, tx, ty));\n            }\n        } else {\n            for (j = 0; j < geom.length; j++) {\n                var ring = [];\n                for (k = 0; k < geom[j].length; k += 2) {\n                    ring.push(transformPoint(geom[j][k], geom[j][k + 1], extent, z2, tx, ty));\n                }\n                feature.geometry.push(ring);\n            }\n        }\n    }\n\n    tile.transformed = true;\n\n    return tile;\n}\n\nfunction transformPoint(x, y, extent, z2, tx, ty) {\n    return [\n        Math.round(extent * (x * z2 - tx)),\n        Math.round(extent * (y * z2 - ty))];\n}\n","\nexport default function createTile(features, z, tx, ty, options) {\n    var tolerance = z === options.maxZoom ? 0 : options.tolerance / ((1 << z) * options.extent);\n    var tile = {\n        features: [],\n        numPoints: 0,\n        numSimplified: 0,\n        numFeatures: 0,\n        source: null,\n        x: tx,\n        y: ty,\n        z: z,\n        transformed: false,\n        minX: 2,\n        minY: 1,\n        maxX: -1,\n        maxY: 0\n    };\n    for (var i = 0; i < features.length; i++) {\n        tile.numFeatures++;\n        addFeature(tile, features[i], tolerance, options);\n\n        var minX = features[i].minX;\n        var minY = features[i].minY;\n        var maxX = features[i].maxX;\n        var maxY = features[i].maxY;\n\n        if (minX < tile.minX) tile.minX = minX;\n        if (minY < tile.minY) tile.minY = minY;\n        if (maxX > tile.maxX) tile.maxX = maxX;\n        if (maxY > tile.maxY) tile.maxY = maxY;\n    }\n    return tile;\n}\n\nfunction addFeature(tile, feature, tolerance, options) {\n\n    var geom = feature.geometry,\n        type = feature.type,\n        simplified = [];\n\n    if (type === 'Point' || type === 'MultiPoint') {\n        for (var i = 0; i < geom.length; i += 3) {\n            simplified.push(geom[i]);\n            simplified.push(geom[i + 1]);\n            tile.numPoints++;\n            tile.numSimplified++;\n        }\n\n    } else if (type === 'LineString') {\n        addLine(simplified, geom, tile, tolerance, false, false);\n\n    } else if (type === 'MultiLineString' || type === 'Polygon') {\n        for (i = 0; i < geom.length; i++) {\n            addLine(simplified, geom[i], tile, tolerance, type === 'Polygon', i === 0);\n        }\n\n    } else if (type === 'MultiPolygon') {\n\n        for (var k = 0; k < geom.length; k++) {\n            var polygon = geom[k];\n            for (i = 0; i < polygon.length; i++) {\n                addLine(simplified, polygon[i], tile, tolerance, true, i === 0);\n            }\n        }\n    }\n\n    if (simplified.length) {\n        var tags = feature.tags || null;\n        if (type === 'LineString' && options.lineMetrics) {\n            tags = {};\n            for (var key in feature.tags) tags[key] = feature.tags[key];\n            tags['mapbox_clip_start'] = geom.start / geom.size;\n            tags['mapbox_clip_end'] = geom.end / geom.size;\n        }\n        var tileFeature = {\n            geometry: simplified,\n            type: type === 'Polygon' || type === 'MultiPolygon' ? 3 :\n                type === 'LineString' || type === 'MultiLineString' ? 2 : 1,\n            tags: tags\n        };\n        if (feature.id !== null) {\n            tileFeature.id = feature.id;\n        }\n        tile.features.push(tileFeature);\n    }\n}\n\nfunction addLine(result, geom, tile, tolerance, isPolygon, isOuter) {\n    var sqTolerance = tolerance * tolerance;\n\n    if (tolerance > 0 && (geom.size < (isPolygon ? sqTolerance : tolerance))) {\n        tile.numPoints += geom.length / 3;\n        return;\n    }\n\n    var ring = [];\n\n    for (var i = 0; i < geom.length; i += 3) {\n        if (tolerance === 0 || geom[i + 2] > sqTolerance) {\n            tile.numSimplified++;\n            ring.push(geom[i]);\n            ring.push(geom[i + 1]);\n        }\n        tile.numPoints++;\n    }\n\n    if (isPolygon) rewind(ring, isOuter);\n\n    result.push(ring);\n}\n\nfunction rewind(ring, clockwise) {\n    var area = 0;\n    for (var i = 0, len = ring.length, j = len - 2; i < len; j = i, i += 2) {\n        area += (ring[i] - ring[j]) * (ring[i + 1] + ring[j + 1]);\n    }\n    if (area > 0 === clockwise) {\n        for (i = 0, len = ring.length; i < len / 2; i += 2) {\n            var x = ring[i];\n            var y = ring[i + 1];\n            ring[i] = ring[len - 2 - i];\n            ring[i + 1] = ring[len - 1 - i];\n            ring[len - 2 - i] = x;\n            ring[len - 1 - i] = y;\n        }\n    }\n}\n","\nimport convert from './convert';     // GeoJSON conversion and preprocessing\nimport clip from './clip';           // stripe clipping algorithm\nimport wrap from './wrap';           // date line processing\nimport transform from './transform'; // coordinate transformation\nimport createTile from './tile';     // final simplified tile generation\n\nexport default function geojsonvt(data, options) {\n    return new GeoJSONVT(data, options);\n}\n\nfunction GeoJSONVT(data, options) {\n    options = this.options = extend(Object.create(this.options), options);\n\n    var debug = options.debug;\n\n    if (debug) console.time('preprocess data');\n\n    if (options.maxZoom < 0 || options.maxZoom > 24) throw new Error('maxZoom should be in the 0-24 range');\n    if (options.promoteId && options.generateId) throw new Error('promoteId and generateId cannot be used together.');\n\n    var features = convert(data, options);\n\n    this.tiles = {};\n    this.tileCoords = [];\n\n    if (debug) {\n        console.timeEnd('preprocess data');\n        console.log('index: maxZoom: %d, maxPoints: %d', options.indexMaxZoom, options.indexMaxPoints);\n        console.time('generate tiles');\n        this.stats = {};\n        this.total = 0;\n    }\n\n    features = wrap(features, options);\n\n    // start slicing from the top tile down\n    if (features.length) this.splitTile(features, 0, 0, 0);\n\n    if (debug) {\n        if (features.length) console.log('features: %d, points: %d', this.tiles[0].numFeatures, this.tiles[0].numPoints);\n        console.timeEnd('generate tiles');\n        console.log('tiles generated:', this.total, JSON.stringify(this.stats));\n    }\n}\n\nGeoJSONVT.prototype.options = {\n    maxZoom: 14,            // max zoom to preserve detail on\n    indexMaxZoom: 5,        // max zoom in the tile index\n    indexMaxPoints: 100000, // max number of points per tile in the tile index\n    tolerance: 3,           // simplification tolerance (higher means simpler)\n    extent: 4096,           // tile extent\n    buffer: 64,             // tile buffer on each side\n    lineMetrics: false,     // whether to calculate line metrics\n    promoteId: null,        // name of a feature property to be promoted to feature.id\n    generateId: false,      // whether to generate feature ids. Cannot be used with promoteId\n    debug: 0                // logging level (0, 1 or 2)\n};\n\nGeoJSONVT.prototype.splitTile = function (features, z, x, y, cz, cx, cy) {\n\n    var stack = [features, z, x, y],\n        options = this.options,\n        debug = options.debug;\n\n    // avoid recursion by using a processing queue\n    while (stack.length) {\n        y = stack.pop();\n        x = stack.pop();\n        z = stack.pop();\n        features = stack.pop();\n\n        var z2 = 1 << z,\n            id = toID(z, x, y),\n            tile = this.tiles[id];\n\n        if (!tile) {\n            if (debug > 1) console.time('creation');\n\n            tile = this.tiles[id] = createTile(features, z, x, y, options);\n            this.tileCoords.push({z: z, x: x, y: y});\n\n            if (debug) {\n                if (debug > 1) {\n                    console.log('tile z%d-%d-%d (features: %d, points: %d, simplified: %d)',\n                        z, x, y, tile.numFeatures, tile.numPoints, tile.numSimplified);\n                    console.timeEnd('creation');\n                }\n                var key = 'z' + z;\n                this.stats[key] = (this.stats[key] || 0) + 1;\n                this.total++;\n            }\n        }\n\n        // save reference to original geometry in tile so that we can drill down later if we stop now\n        tile.source = features;\n\n        // if it's the first-pass tiling\n        if (!cz) {\n            // stop tiling if we reached max zoom, or if the tile is too simple\n            if (z === options.indexMaxZoom || tile.numPoints <= options.indexMaxPoints) continue;\n\n        // if a drilldown to a specific tile\n        } else {\n            // stop tiling if we reached base zoom or our target tile zoom\n            if (z === options.maxZoom || z === cz) continue;\n\n            // stop tiling if it's not an ancestor of the target tile\n            var m = 1 << (cz - z);\n            if (x !== Math.floor(cx / m) || y !== Math.floor(cy / m)) continue;\n        }\n\n        // if we slice further down, no need to keep source geometry\n        tile.source = null;\n\n        if (features.length === 0) continue;\n\n        if (debug > 1) console.time('clipping');\n\n        // values we'll use for clipping\n        var k1 = 0.5 * options.buffer / options.extent,\n            k2 = 0.5 - k1,\n            k3 = 0.5 + k1,\n            k4 = 1 + k1,\n            tl, bl, tr, br, left, right;\n\n        tl = bl = tr = br = null;\n\n        left  = clip(features, z2, x - k1, x + k3, 0, tile.minX, tile.maxX, options);\n        right = clip(features, z2, x + k2, x + k4, 0, tile.minX, tile.maxX, options);\n        features = null;\n\n        if (left) {\n            tl = clip(left, z2, y - k1, y + k3, 1, tile.minY, tile.maxY, options);\n            bl = clip(left, z2, y + k2, y + k4, 1, tile.minY, tile.maxY, options);\n            left = null;\n        }\n\n        if (right) {\n            tr = clip(right, z2, y - k1, y + k3, 1, tile.minY, tile.maxY, options);\n            br = clip(right, z2, y + k2, y + k4, 1, tile.minY, tile.maxY, options);\n            right = null;\n        }\n\n        if (debug > 1) console.timeEnd('clipping');\n\n        stack.push(tl || [], z + 1, x * 2,     y * 2);\n        stack.push(bl || [], z + 1, x * 2,     y * 2 + 1);\n        stack.push(tr || [], z + 1, x * 2 + 1, y * 2);\n        stack.push(br || [], z + 1, x * 2 + 1, y * 2 + 1);\n    }\n};\n\nGeoJSONVT.prototype.getTile = function (z, x, y) {\n    var options = this.options,\n        extent = options.extent,\n        debug = options.debug;\n\n    if (z < 0 || z > 24) return null;\n\n    var z2 = 1 << z;\n    x = ((x % z2) + z2) % z2; // wrap tile x coordinate\n\n    var id = toID(z, x, y);\n    if (this.tiles[id]) return transform(this.tiles[id], extent);\n\n    if (debug > 1) console.log('drilling down to z%d-%d-%d', z, x, y);\n\n    var z0 = z,\n        x0 = x,\n        y0 = y,\n        parent;\n\n    while (!parent && z0 > 0) {\n        z0--;\n        x0 = Math.floor(x0 / 2);\n        y0 = Math.floor(y0 / 2);\n        parent = this.tiles[toID(z0, x0, y0)];\n    }\n\n    if (!parent || !parent.source) return null;\n\n    // if we found a parent tile containing the original geometry, we can drill down from it\n    if (debug > 1) console.log('found parent tile z%d-%d-%d', z0, x0, y0);\n\n    if (debug > 1) console.time('drilling down');\n    this.splitTile(parent.source, z0, x0, y0, z, x, y);\n    if (debug > 1) console.timeEnd('drilling down');\n\n    return this.tiles[id] ? transform(this.tiles[id], extent) : null;\n};\n\nfunction toID(z, x, y) {\n    return (((1 << z) * y + x) * 32) + z;\n}\n\nfunction extend(dest, src) {\n    for (var i in src) dest[i] = src[i];\n    return dest;\n}\n"],"sourceRoot":""}